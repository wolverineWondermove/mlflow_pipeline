{"type": "fewshot", "instruction": "List all deployments in all namespaces.", "output": "bash\n kubectl get deployments --all-namespaces"}
{"type": "fewshot", "instruction": "List all statefulsets in the default namespace.", "output": "bash\n kubectl get statefulsets -n default"}
{"type": "fewshot", "instruction": "List all daemonsets across the cluster.", "output": "bash\n kubectl get daemonsets --all-namespaces"}
{"type": "fewshot", "instruction": "Describe the daemonset named log-agent in namespace logging.", "output": "bash\n kubectl describe daemonset log-agent -n logging"}
{"type": "fewshot", "instruction": "Create a namespace called monitoring.", "output": "bash\n kubectl create namespace monitoring"}
{"type": "fewshot", "instruction": "Set a resource quota named compute-quota in namespace dev limiting pods to 10.", "output": "bash\n kubectl create quota compute-quota --hard=pods=10 -n dev"}
{"type": "fewshot", "instruction": "Delete the resource quota compute-quota from namespace dev.", "output": "bash\n kubectl delete quota compute-quota -n dev"}
{"type": "fewshot", "instruction": "List all resource quotas in the current namespace.", "output": "bash\n kubectl get quota"}
{"type": "fewshot", "instruction": "List all roles in the default namespace.", "output": "bash\n kubectl get roles -n default"}
{"type": "fewshot", "instruction": "List all rolebindings in the default namespace.", "output": "bash\n kubectl get rolebindings -n default"}
{"type": "fewshot", "instruction": "Create a role named pod-reader with permissions to get, list, and watch pods in the default namespace.", "output": "bash\n kubectl create role pod-reader --verb=get,list,watch --resource=pods -n default"}
{"type": "fewshot", "instruction": "Delete the rolebinding read-pods from the default namespace.", "output": "bash\n kubectl delete rolebinding read-pods -n default"}
{"type": "fewshot", "instruction": "List all available API versions in the cluster.", "output": "bash\n kubectl api-versions"}
{"type": "fewshot", "instruction": "Retrieve the external IP of the service ingress-nginx in the ingress-nginx namespace.", "output": "bash\n kubectl get svc ingress-nginx -n ingress-nginx"}
{"type": "fewshot", "instruction": "Run a one-time busybox job interactively and remove it after completion.", "output": "bash\n kubectl run busybox --image=busybox --rm -it -- /bin/sh"}
{"type": "fewshot", "instruction": "Copy a file from pod app-pod in namespace default to the local machine.", "output": "bash\n kubectl cp default/app-pod/path/to/remote/file ./local-file"}
{"type": "fewshot", "instruction": "Copy a file from the local machine to pod app-pod in namespace default.", "output": "bash\n kubectl cp ./local-file default/app-pod/path/to/remote/file"}
{"type": "fewshot", "instruction": "Execute an interactive shell inside pod app-pod in the default namespace.", "output": "bash\n kubectl exec -it app-pod -- /bin/bash"}
{"type": "fewshot", "instruction": "Create a secret named file-secret from a file secret.txt.", "output": "bash\n kubectl create secret generic file-secret --from-file=secret.txt"}
{"type": "fewshot", "instruction": "Update secret file-secret with a new file new-secret.txt using a dry run and apply.", "output": "bash\n kubectl create secret generic file-secret --from-file=new-secret.txt --dry-run=client -o yaml  kubectl apply -f -"}
{"type": "fewshot", "instruction": "List all persistent volumes in the cluster.", "output": "bash\n kubectl get pv"}
{"type": "fewshot", "instruction": "List all persistent volume claims in the default namespace.", "output": "bash\n kubectl get pvc -n default"}
{"type": "fewshot", "instruction": "Delete the persistent volume claim named data-pvc in the default namespace.", "output": "bash\n kubectl delete pvc data-pvc -n default"}
{"type": "fewshot", "instruction": "Describe the persistent volume pv-volume1.", "output": "bash\n kubectl describe pv pv-volume1"}
{"type": "fewshot", "instruction": "Show all node labels in the cluster.", "output": "bash\n kubectl get nodes --show-labels"}
{"type": "fewshot", "instruction": "Patch service web-service to change its type to NodePort using a JSON merge patch.", "output": "bash\n kubectl patch service web-service -p spectypeNodePort"}
{"type": "fewshot", "instruction": "Convert the YAML file file.yaml to JSON format using kubectl.", "output": "bash\n kubectl convert -f file.yaml --output-version v1"}
{"type": "fewshot", "instruction": "Create a configmap named my-config from literal key-value pairs.", "output": "bash\n kubectl create configmap my-config --from-literal=key1=value1 --from-literal=key2=value2"}
{"type": "fewshot", "instruction": "Replace the resource defined in new-config.yaml.", "output": "bash\n kubectl replace -f new-config.yaml"}
{"type": "fewshot", "instruction": "Edit the configmap app-config interactively.", "output": "bash\n kubectl edit configmap app-config"}
{"type": "fewshot", "instruction": "Display resource usage for pods in the kube-system namespace.", "output": "bash\n kubectl top pod -n kube-system"}
{"type": "fewshot", "instruction": "Show the rollout status of the daemonset node-exporter in the monitoring namespace.", "output": "bash\n kubectl rollout status daemonset node-exporter -n monitoring"}
{"type": "fewshot", "instruction": "Force restart pod cache-pod in the default namespace by deleting it.", "output": "bash\n kubectl delete pod cache-pod -n default"}
{"type": "fewshot", "instruction": "Annotate pod frontend-pod with a backup timestamp.", "output": "bash\n kubectl annotate pod frontend-pod backup=2025-02-04T120000Z"}
{"type": "fewshot", "instruction": "Label deployment backend-deployment with version v1.2.", "output": "bash\n kubectl label deployment backend-deployment version=v1.2"}
{"type": "fewshot", "instruction": "Remove the version label from service api-service.", "output": "bash\n kubectl label service api-service version-"}
{"type": "fewshot", "instruction": "Create a job named backup-job using the YAML configuration in backup-job.yaml.", "output": "bash\n kubectl create -f backup-job.yaml"}
{"type": "fewshot", "instruction": "Suspend the cronjob daily-backup by setting its suspend flag to true.", "output": "bash\n kubectl patch cronjob daily-backup -p spec suspend true"}
{"type": "fewshot", "instruction": "Resume the cronjob daily-backup by setting its suspend flag to false.", "output": "bash\n kubectl patch cronjob daily-backup -p spec suspend false"}
{"type": "fewshot", "instruction": "List all cronjobs in the backup namespace.", "output": "bash\n kubectl get cronjobs -n backup"}
{"type": "fewshot", "instruction": "Delete the cronjob old-backup from the backup namespace.", "output": "bash\n kubectl delete cronjob old-backup -n backup"}
{"type": "fewshot", "instruction": "Create a cronjob named log-cleanup from the file log-cleanup-cronjob.yaml.", "output": "bash\n kubectl create -f log-cleanup-cronjob.yaml"}
{"type": "fewshot", "instruction": "Describe the cronjob db-backup in the current namespace.", "output": "bash\n kubectl describe cronjob db-backup"}
{"type": "fewshot", "instruction": "List all endpoints in the default namespace.", "output": "bash\n kubectl get endpoints -n default"}
{"type": "fewshot", "instruction": "Display detailed resource usage for the pod api-pod in the default namespace.", "output": "bash\n kubectl top pod api-pod -n default"}
{"type": "fewshot", "instruction": "List all custom resource definitions in the cluster.", "output": "bash\n kubectl get crds"}
{"type": "fewshot", "instruction": "Describe the custom resource definition myresources.example.com.", "output": "bash\n kubectl describe crd myresources.example.com"}
{"type": "fewshot", "instruction": "View the previous logs of pod web-pod in case of a restart.", "output": "bash\n kubectl logs web-pod --previous"}
{"type": "fewshot", "instruction": "Fetch events related to the pod api-pod.", "output": "bash\n kubectl get events --field-selector involvedObject.name=api-pod"}
{"type": "fewshot", "instruction": "Apply a network policy defined in network-policy.yaml.", "output": "bash\n kubectl apply -f network-policy.yaml"}
{"type": "fewshot", "instruction": "Delete the network policy deny-all in the default namespace.", "output": "bash\n kubectl delete networkpolicy deny-all -n default"}
{"type": "fewshot", "instruction": "List all network policies in the prod namespace.", "output": "bash\n kubectl get networkpolicies -n prod"}
{"type": "fewshot", "instruction": "Annotate node node-3 with a maintenance window set to 2025-02-05.", "output": "bash\n kubectl annotate node node-3 maintenance=2025-02-05"}
{"type": "fewshot", "instruction": "Set a taint on node node-4 with key key, value value, and effect NoSchedule.", "output": "bash\n kubectl taint node node-4 key=valueNoSchedule"}
{"type": "fewshot", "instruction": "Remove the taint keyNoSchedule from node node-4.", "output": "bash\n kubectl taint node node-4 keyNoSchedule-"}
{"type": "fewshot", "instruction": "List all validating webhook configurations.", "output": "bash\n kubectl get validatingwebhookconfigurations"}
{"type": "fewshot", "instruction": "List all mutating webhook configurations.", "output": "bash\n kubectl get mutatingwebhookconfigurations"}
{"type": "fewshot", "instruction": "Describe the mutating webhook configuration example-mutator.", "output": "bash\n kubectl describe mutatingwebhookconfiguration example-mutator"}
{"type": "fewshot", "instruction": "Label the namespace dev with team development.", "output": "bash\n kubectl label namespace dev team=development"}
{"type": "fewshot", "instruction": "Annotate the namespace prod with owner ops-team.", "output": "bash\n kubectl annotate namespace prod owner=ops-team"}
{"type": "fewshot", "instruction": "Export the configuration of deployment app to JSON.", "output": "bash\n kubectl get deployment app -o json"}
{"type": "fewshot", "instruction": "Export the configuration of service my-service to JSON.", "output": "bash\n kubectl get service my-service -o json"}
{"type": "fewshot", "instruction": "List all secrets across all namespaces.", "output": "bash\n kubectl get secrets --all-namespaces"}
{"type": "fewshot", "instruction": "Describe the secret tls-secret in the default namespace.", "output": "bash\n kubectl describe secret tls-secret -n default"}
{"type": "fewshot", "instruction": "Create a TLS secret named tls-secret using certificate and key files.", "output": "bash\n kubectl create secret tls tls-secret --cert=cert.crt --key=cert.key"}
{"type": "fewshot", "instruction": "Update the image of statefulset mongo to mongo4.2.", "output": "bash\n kubectl set image statefulset/mongo mongo=mongo4.2"}
{"type": "fewshot", "instruction": "Edit the daemonset fluentd in the logging namespace.", "output": "bash\n kubectl edit daemonset fluentd -n logging"}
{"type": "fewshot", "instruction": "Display the rollout status for statefulset redis.", "output": "bash\n kubectl rollout status statefulset redis"}
{"type": "fewshot", "instruction": "Annotate statefulset redis with a last-updated timestamp.", "output": "bash\n kubectl annotate statefulset redis last-updated=2025-02-04T120000Z"}
{"type": "fewshot", "instruction": "List all jobs in the batch namespace.", "output": "bash\n kubectl get jobs -n batch"}
{"type": "fewshot", "instruction": "Describe the job data-processing in the batch namespace.", "output": "bash\n kubectl describe job data-processing -n batch"}
{"type": "fewshot", "instruction": "Run a pod using the busybox image with no restart policy for a one-off task.", "output": "bash\n kubectl run temp --image=alpine --restart=Never --command -- sleep 3600"}
{"type": "fewshot", "instruction": "Delete the pod named temp from the default namespace.", "output": "bash\n kubectl delete pod temp -n default"}
{"type": "fewshot", "instruction": "Set the environment variable ENV=production on deployment webapp.", "output": "bash\n kubectl set env deployment/webapp ENV=production"}
{"type": "fewshot", "instruction": "Unset the environment variable DEBUG on deployment webapp.", "output": "bash\n kubectl set env deployment/webapp DEBUG-"}
{"type": "fewshot", "instruction": "Execute a command in one of the pods labeled app=worker interactively.", "output": "bash\n kubectl exec -it (kubectl get pods -l app=worker -o jsonpath=.items0.metadata.name) -- /bin/sh"}
{"type": "fewshot", "instruction": "Port-forward the service my-service so that local port 8080 maps to port 80 on the service.", "output": "bash\n kubectl port-forward service/my-service 808080"}
{"type": "fewshot", "instruction": "Expose the pod solo-pod on port 9090.", "output": "bash\n kubectl expose pod solo-pod --port=9090"}
{"type": "fewshot", "instruction": "Scale the deployment scalable-app to 10 replicas.", "output": "bash\n kubectl scale deployment scalable-app --replicas=10"}
{"type": "fewshot", "instruction": "Update resource limits for deployment resource-app using a patch.", "output": "bash\n kubectl patch deployment resource-app -p spectemplatespeccontainersnameresource-app,resourceslimitscpu250m,memory512Mi"}
{"type": "fewshot", "instruction": "Create a Horizontal Pod Autoscaler for deployment webapp with min 2, max 10 replicas and target CPU utilization of 80%.", "output": "bash\n kubectl autoscale deployment webapp --min=2 --max=10 --cpu-percent=80"}
{"type": "fewshot", "instruction": "Retrieve the status of the Horizontal Pod Autoscaler for webapp.", "output": "bash\n kubectl get hpa webapp"}
{"type": "fewshot", "instruction": "Delete the Horizontal Pod Autoscaler for webapp.", "output": "bash\n kubectl delete hpa webapp"}
{"type": "fewshot", "instruction": "Create a Pod Disruption Budget from the configuration in pdb.yaml.", "output": "bash\n kubectl create -f pdb.yaml"}
{"type": "fewshot", "instruction": "List all Pod Disruption Budgets in the default namespace.", "output": "bash\n kubectl get pdb -n default"}
{"type": "fewshot", "instruction": "Delete the Pod Disruption Budget named app-pdb from the default namespace.", "output": "bash\n kubectl delete pdb app-pdb -n default"}
{"type": "fewshot", "instruction": "Annotate deployment stateless-app with team=backend.", "output": "bash\n kubectl annotate deployment stateless-app team=backend"}
{"type": "fewshot", "instruction": "List all deployments with the label tier=backend.", "output": "bash\n kubectl get deployments -l tier=backend"}
{"type": "fewshot", "instruction": "Run a privileged pod using the busybox image that stays running.", "output": "bash\n kubectl run privileged --image=busybox --privileged --restart=Never -- /bin/sh -c while true do sleep 30 done"}
{"type": "fewshot", "instruction": "Fetch logs for the container named sidecar in the pod multi-container-pod.", "output": "bash\n kubectl logs multi-container-pod -c sidecar"}
{"type": "fewshot", "instruction": "Stream logs for the container main in the pod multi-container-pod.", "output": "bash\n kubectl logs multi-container-pod -c main -f"}
{"type": "fewshot", "instruction": "Expose the deployment webapp as a LoadBalancer service on port 80.", "output": "bash\n kubectl expose deployment webapp --type=LoadBalancer --port=80"}
{"type": "fewshot", "instruction": "Delete the service old-service from the default namespace.", "output": "bash\n kubectl delete svc old-service -n default"}
{"type": "fewshot", "instruction": "List all namespaces in the cluster.", "output": "bash\n kubectl get namespaces"}
{"type": "fewshot", "instruction": "Describe the namespace default.", "output": "bash\n kubectl describe namespace default"}
{"type": "fewshot", "instruction": "Export the configuration of all pods in the kube-system namespace to a JSON file named pods.json.", "output": "bash\n kubectl get pods -n kube-system -o json > pods.json"}
{"type": "fewshot", "instruction": "Display resource usage for pods in the production namespace.", "output": "bash\n kubectl top pods -n production"}
{"type": "fewshot", "instruction": "Retrieve events for the monitoring namespace.", "output": "bash\n kubectl get events -n monitoring"}
{"type": "fewshot", "instruction": "Convert the JSON configuration file config.json to a Kubernetes YAML manifest.", "output": "bash\n kubectl convert -f config.json -o yaml"}
{"type": "fewshot", "instruction": "List all pods in all namespaces.", "output": "bash\n kubectl get pods --all-namespaces"}
{"type": "fewshot", "instruction": "Get details of the pod named webserver.", "output": "bash\n kubectl describe pod webserver"}
{"type": "fewshot", "instruction": "Delete the service backend-service.", "output": "bash\n kubectl delete service backend-service"}
{"type": "fewshot", "instruction": "Scale the deployment frontend to 5 replicas.", "output": "bash\n kubectl scale deployment frontend --replicas=5"}
{"type": "fewshot", "instruction": "Show nodes in the cluster.", "output": "bash\n kubectl get nodes"}
{"type": "fewshot", "instruction": "Create a namespace called staging.", "output": "bash\n kubectl create namespace staging"}
{"type": "fewshot", "instruction": "Get logs of the pod database-pod.", "output": "bash\n kubectl logs database-pod"}
{"type": "fewshot", "instruction": "Expose deployment myapp on port 8080.", "output": "bash\n kubectl expose deployment myapp --port=8080"}
{"type": "fewshot", "instruction": "Apply the configuration in config.yaml.", "output": "bash\n kubectl apply -f config.yaml"}
{"type": "fewshot", "instruction": "Delete namespace test-environment.", "output": "bash\n kubectl delete namespace test-environment"}
{"type": "fewshot", "instruction": "Get events for the default namespace.", "output": "bash\n kubectl get events -n default"}
{"type": "fewshot", "instruction": "Describe the service web-service.", "output": "bash\n kubectl describe service web-service"}
{"type": "fewshot", "instruction": "Update the image of deployment api to apiv2.", "output": "bash\n kubectl set image deployment/api api=apiv2"}
{"type": "fewshot", "instruction": "Get the current context.", "output": "bash\n kubectl config current-context"}
{"type": "fewshot", "instruction": "Set the context to production.", "output": "bash\n kubectl config use-context production"}
{"type": "fewshot", "instruction": "Get resource usage of nodes.", "output": "bash\n kubectl top nodes"}
{"type": "fewshot", "instruction": "Explain the deployment resource.", "output": "bash\n kubectl explain deployment"}
{"type": "fewshot", "instruction": "Get all services in the dev namespace.", "output": "bash\n kubectl get services -n dev"}
{"type": "fewshot", "instruction": "Run a pod with image nginx named nginx-test.", "output": "bash\n kubectl run nginx-test --image=nginx"}
{"type": "fewshot", "instruction": "Edit the deployment frontend.", "output": "bash\n kubectl edit deployment frontend"}
{"type": "fewshot", "instruction": "Cordon the node node-1.", "output": "bash\n kubectl cordon node-1"}
{"type": "fewshot", "instruction": "Drain the node node-2.", "output": "bash\n kubectl drain node-2"}
{"type": "fewshot", "instruction": "Uncordon the node node-1.", "output": "bash\n kubectl uncordon node-1"}
{"type": "fewshot", "instruction": "Delete pod temp-pod in namespace test.", "output": "bash\n kubectl delete pod temp-pod -n test"}
{"type": "fewshot", "instruction": "List configmaps in all namespaces.", "output": "bash\n kubectl get configmaps --all-namespaces"}
{"type": "fewshot", "instruction": "Get the secret db-secret in namespace prod.", "output": "bash\n kubectl get secret db-secret -n prod"}
{"type": "fewshot", "instruction": "Describe ingress my-ingress.", "output": "bash\n kubectl describe ingress my-ingress"}
{"type": "fewshot", "instruction": "Get the status of deployment backend.", "output": "bash\n kubectl rollout status deployment backend"}
{"type": "fewshot", "instruction": "Restart deployment cache.", "output": "bash\n kubectl rollout restart deployment cache"}
{"type": "fewshot", "instruction": "View the history of rollout for deployment webapp.", "output": "bash\n kubectl rollout history deployment webapp"}
{"type": "fewshot", "instruction": "Create a service account named deploy in staging namespace.", "output": "bash\n kubectl create serviceaccount deploy -n staging"}
{"type": "fewshot", "instruction": "Attach to the pod debug-pod.", "output": "bash\n kubectl attach debug-pod"}
{"type": "fewshot", "instruction": "Get all resources in namespace production.", "output": "bash\n kubectl get all -n production"}
{"type": "fewshot", "instruction": "Port-forward pod my-pod port 8080 to local port 8080.", "output": "bash\n kubectl port-forward pod/my-pod 80808080"}
{"type": "fewshot", "instruction": "Scale statefulset mysql to 3 replicas.", "output": "bash\n kubectl scale statefulset mysql --replicas=3"}
{"type": "fewshot", "instruction": "Patch deployment api with patch.yaml.", "output": "bash\n kubectl patch deployment api --patch-file=patch.yaml"}
{"type": "fewshot", "instruction": "Delete all pods with label app=test.", "output": "bash\n kubectl delete pods -l app=test"}
{"type": "fewshot", "instruction": "Get pod IP addresses in default namespace.", "output": "bash\n kubectl get pods -n default -o wide"}
{"type": "fewshot", "instruction": "Explain the service resource.", "output": "bash\n kubectl explain service"}
{"type": "fewshot", "instruction": "Apply all YAML files in manifests directory.", "output": "bash\n kubectl apply -f manifests/"}
{"type": "fewshot", "instruction": "Get the cluster version information.", "output": "bash\n kubectl version"}
{"type": "fewshot", "instruction": "Create a deployment named redis with image redis6.0.", "output": "bash\n kubectl create deployment redis --image=redis6.0"}
{"type": "fewshot", "instruction": "Describe node worker-node-1.", "output": "bash\n kubectl describe node worker-node-1"}
{"type": "fewshot", "instruction": "Get events sorted by timestamp.", "output": "bash\n kubectl get events --sort-by=.metadata.creationTimestamp"}
{"type": "fewshot", "instruction": "Delete job batch-job.", "output": "bash\n kubectl delete job batch-job"}
{"type": "fewshot", "instruction": "Create configmap app-config from file config.properties.", "output": "bash\n kubectl create configmap app-config --from-file=config.properties"}
{"type": "fewshot", "instruction": "Explain persistentvolumeclaim.", "output": "bash\n kubectl explain persistentvolumeclaim"}
{"type": "fewshot", "instruction": "Get services with label tier=frontend.", "output": "bash\n kubectl get services -l tier=frontend"}
{"type": "fewshot", "instruction": "Delete all pods in development namespace.", "output": "bash\n kubectl delete pods --all -n development"}
{"type": "fewshot", "instruction": "Get the logs of pod app-pod since 1 hour ago.", "output": "bash\n kubectl logs app-pod --since=1h"}
{"type": "fewshot", "instruction": "Get pod db-pod logs and follow.", "output": "bash\n kubectl logs db-pod -f"}
{"type": "fewshot", "instruction": "Get cluster info.", "output": "bash\n kubectl cluster-info"}
{"type": "fewshot", "instruction": "Show me the cluster details.", "output": "bash\n kubectl cluster-info"}
{"type": "fewshot", "instruction": "Get the Kubernetes version.", "output": "bash\n kubectl version"}
{"type": "fewshot", "instruction": "List all nodes in the cluster.", "output": "bash\n kubectl get nodes"}
{"type": "fewshot", "instruction": "Check the status of cluster components.", "output": "bash\n kubectl get componentstatuses"}
{"type": "fewshot", "instruction": "Describe the cluster.", "output": "bash\n kubectl cluster-info dump"}
{"type": "fewshot", "instruction": "Get cluster info.", "output": "bash\n kubectl cluster-info"}
{"type": "fewshot", "instruction": "Get API resources.", "output": "bash\n kubectl api-resources"}
{"type": "fewshot", "instruction": "List all services with type ClusterIP in namespace dev.", "output": "bash\n kubectl get svc -n dev --field-selector spec.type=ClusterIP"}
{"type": "fewshot", "instruction": "Get detailed information of ingress app-ingress in namespace prod.", "output": "bash\n kubectl describe ingress app-ingress -n prod"}
{"type": "fewshot", "instruction": "Restart pod frontend-pod by deleting it to force a new instance in the default namespace.", "output": "bash\n kubectl delete pod frontend-pod -n default"}
{"type": "fewshot", "instruction": "Show rollout status for statefulset zookeeper.", "output": "bash\n kubectl rollout status statefulset zookeeper"}
{"type": "fewshot", "instruction": "Display endpoints for service backend-svc in namespace prod.", "output": "bash\n kubectl get endpoints backend-svc -n prod"}
{"type": "fewshot", "instruction": "List all pods with label app=api in the staging namespace.", "output": "bash\n kubectl get pods -n staging -l app=api"}
{"type": "fewshot", "instruction": "View detailed information of the replication controller old-rc.", "output": "bash\n kubectl describe rc old-rc"}
{"type": "fewshot", "instruction": "Create a replication controller using the configuration file rc.yaml.", "output": "bash\n kubectl create -f rc.yaml"}
{"type": "fewshot", "instruction": "Delete the replication controller old-rc.", "output": "bash\n kubectl delete rc old-rc"}
{"type": "fewshot", "instruction": "Update the image of replication controller rc-example to nginx1.19.", "output": "bash\n kubectl set image rc/rc-example nginx=nginx1.19"}
{"type": "fewshot", "instruction": "Show all pods in the staging namespace using wide output.", "output": "bash\n kubectl get pods -n staging -o wide"}
{"type": "fewshot", "instruction": "Stream logs from all containers in pod multi-pod.", "output": "bash\n kubectl logs multi-pod --all-containers=true -f"}
{"type": "fewshot", "instruction": "Show secrets in the kube-system namespace in a table format.", "output": "bash\n kubectl get secrets -n kube-system"}
{"type": "fewshot", "instruction": "List all storage classes available in the cluster.", "output": "bash\n kubectl get storageclasses"}
{"type": "fewshot", "instruction": "Describe the storage class standard.", "output": "bash\n kubectl describe storageclass standard"}
{"type": "fewshot", "instruction": "Create a persistent volume claim using the file pvc.yaml.", "output": "bash\n kubectl create -f pvc.yaml"}
{"type": "fewshot", "instruction": "Replace the persistent volume claim using the configuration in pvc-new.yaml.", "output": "bash\n kubectl replace -f pvc-new.yaml"}
{"type": "fewshot", "instruction": "Annotate the persistent volume claim data-pvc with a retention policy of 30 days.", "output": "bash\n kubectl annotate pvc data-pvc retention=30d"}
{"type": "fewshot", "instruction": "Label all pods in the test namespace with the label environment=test.", "output": "bash\n kubectl label pods --all environment=test -n test"}
{"type": "fewshot", "instruction": "Remove the environment label from all pods in the test namespace.", "output": "bash\n kubectl label pods --all environment- -n test"}
{"type": "fewshot", "instruction": "Scale the replication controller rc-example to 5 replicas.", "output": "bash\n kubectl scale rc rc-example --replicas=5"}
{"type": "fewshot", "instruction": "Get the resource version of deployment app-deploy.", "output": "bash\n kubectl get deployment app-deploy -o=jsonpath=.metadata.resourceVersion"}
{"type": "fewshot", "instruction": "Display only the names of pods in the default namespace.", "output": "bash\n kubectl get pods -n default -o custom-columns=NAME.metadata.name"}
{"type": "fewshot", "instruction": "List nodes with custom columns showing name and ready status.", "output": "bash\n kubectl get nodes -o custom-columns=NAME.metadata.name,READY.status.conditions?(.type==Ready).status"}
{"type": "fewshot", "instruction": "Retrieve the last 100 lines of logs from kube-apiserver pods in the kube-system namespace.", "output": "bash\n kubectl logs -n kube-system -l component=kube-apiserver --tail=100"}
{"type": "fewshot", "instruction": "Describe the kube-scheduler pods in the kube-system namespace.", "output": "bash\n kubectl describe pod -n kube-system -l component=kube-scheduler"}
{"type": "fewshot", "instruction": "Retrieve the last 100 lines of logs from kube-controller-manager pods in the kube-system namespace.", "output": "bash\n kubectl logs -n kube-system -l component=kube-controller-manager --tail=100"}
{"type": "fewshot", "instruction": "List master nodes using the node-role.kubernetes.io/master label.", "output": "bash\n kubectl get nodes -l node-role.kubernetes.io/master"}
{"type": "fewshot", "instruction": "List worker nodes by excluding the master label.", "output": "bash\n kubectl get nodes -l !node-role.kubernetes.io/master"}
{"type": "fewshot", "instruction": "Show labels for the namespace staging.", "output": "bash\n kubectl get namespace staging --show-labels"}
{"type": "fewshot", "instruction": "Edit the namespace test.", "output": "bash\n kubectl edit namespace test"}
{"type": "fewshot", "instruction": "Patch the namespace dev to add a label owner=dev-team.", "output": "bash\n kubectl patch namespace dev -p metadatalabelsownerdev-team"}
{"type": "fewshot", "instruction": "Retrieve the full JSON schema for the pod resource.", "output": "bash\n kubectl explain pod --recursive"}
{"type": "fewshot", "instruction": "Retrieve the full JSON schema for the service resource.", "output": "bash\n kubectl explain service --recursive"}
{"type": "fewshot", "instruction": "List all installed kubectl plugins.", "output": "bash\n kubectl plugin list"}
{"type": "fewshot", "instruction": "Apply a multi-document YAML file all-resources.yaml.", "output": "bash\n kubectl apply -f all-resources.yaml"}
{"type": "fewshot", "instruction": "Delete multiple resources defined in the file delete-all.yaml.", "output": "bash\n kubectl delete -f delete-all.yaml"}
{"type": "fewshot", "instruction": "Display a summary of cluster resource usage using kubectl top nodes.", "output": "bash\n kubectl top nodes"}
{"type": "fewshot", "instruction": "Display a summary of pod resource usage using kubectl top pods.", "output": "bash\n kubectl top pods"}
{"type": "fewshot", "instruction": "Roll back the daemonset log-agent to its previous revision.", "output": "bash\n kubectl rollout undo daemonset log-agent"}
{"type": "fewshot", "instruction": "Roll back the statefulset db to revision 2.", "output": "bash\n kubectl rollout undo statefulset db --to-revision=2"}
{"type": "fewshot", "instruction": "List all services with custom columns for name, type, and cluster IP.", "output": "bash\n kubectl get svc -o custom-columns=NAME.metadata.name,TYPE.spec.type,CLUSTER-IP.spec.clusterIP"}
{"type": "fewshot", "instruction": "List all persistent volumes with their capacity.", "output": "bash\n kubectl get pv -o custom-columns=NAME.metadata.name,CAPACITY.spec.capacity.storage"}
{"type": "fewshot", "instruction": "Update the image of container app-container in pod app-pod to myimagelatest.", "output": "bash\n kubectl set image pod/app-pod app-container=myimagelatest"}
{"type": "fewshot", "instruction": "Debug pod debug-pod by launching an ephemeral container with the busybox image.", "output": "bash\n kubectl debug pod/debug-pod --image=busybox --target=debug-pod"}
{"type": "fewshot", "instruction": "Debug node node-1 by running an ephemeral container with the busybox image.", "output": "bash\n kubectl debug node/node-1 -it --image=busybox"}
{"type": "fewshot", "instruction": "Create a certificate signing request using the configuration in csr.yaml.", "output": "bash\n kubectl create -f csr.yaml"}
{"type": "fewshot", "instruction": "Approve the certificate signing request my-csr.", "output": "bash\n kubectl certificate approve my-csr"}
{"type": "fewshot", "instruction": "Deny the certificate signing request old-csr.", "output": "bash\n kubectl certificate deny old-csr"}
{"type": "fewshot", "instruction": "List all certificate signing requests in the cluster.", "output": "bash\n kubectl get csr"}
{"type": "fewshot", "instruction": "Filter kube-apiserver logs for audit entries.", "output": "bash\n kubectl logs -n kube-system -l component=kube-apiserver  grep audit"}
{"type": "fewshot", "instruction": "Display the configuration of the kube-proxy ConfigMap in the kube-system namespace.", "output": "bash\n kubectl get configmap kube-proxy -n kube-system -o yaml"}
{"type": "fewshot", "instruction": "Apply changes to the kube-proxy configuration from the file kube-proxy.yaml.", "output": "bash\n kubectl apply -f kube-proxy.yaml -n kube-system"}
{"type": "fewshot", "instruction": "List all endpoints with detailed addresses and ports.", "output": "bash\n kubectl get endpoints -o wide"}
{"type": "fewshot", "instruction": "Watch for changes in pods in the default namespace.", "output": "bash\n kubectl get pods -n default --watch"}
{"type": "fewshot", "instruction": "Watch for changes in the node list.", "output": "bash\n kubectl get nodes --watch"}
{"type": "fewshot", "instruction": "Create a new namespace integration-test and label it with env=testing.", "output": "bash\n kubectl create namespace integration-test  kubectl label namespace integration-test env=testing"}
{"type": "fewshot", "instruction": "Delete the namespace integration-test.", "output": "bash\n kubectl delete namespace integration-test"}
{"type": "fewshot", "instruction": "Set the default namespace of the current context to default.", "output": "bash\n kubectl config set-context --current --namespace=default"}
{"type": "fewshot", "instruction": "Unset the default namespace for the current context.", "output": "bash\n kubectl config set-context --current --namespace="}
{"type": "fewshot", "instruction": "Apply updates to deployment api-deploy using server-side apply from api.yaml.", "output": "bash\n kubectl apply --server-side -f api.yaml"}
{"type": "fewshot", "instruction": "Perform a dry-run server-side apply on deployment api-deploy from api.yaml.", "output": "bash\n kubectl apply --server-side --dry-run=server -f api.yaml"}
{"type": "fewshot", "instruction": "Wait for the rollout of deployment worker-deploy to complete.", "output": "bash\n kubectl rollout status deployment worker-deploy"}
{"type": "fewshot", "instruction": "Show the rollout history for replication controller rc-old.", "output": "bash\n kubectl rollout history rc rc-old"}
{"type": "fewshot", "instruction": "Display the rollout history for statefulset cache.", "output": "bash\n kubectl rollout history statefulset cache"}
{"type": "fewshot", "instruction": "Set the concurrency policy of cronjob cleanup to Forbid new runs.", "output": "bash\n kubectl patch cronjob cleanup -p specconcurrencyPolicy Forbid"}
{"type": "fewshot", "instruction": "Suspend the cronjob cleanup.", "output": "bash\n kubectl patch cronjob cleanup -p spec suspend true"}
{"type": "fewshot", "instruction": "Resume the cronjob cleanup.", "output": "bash\n kubectl patch cronjob cleanup -p spec suspend false"}
{"type": "fewshot", "instruction": "List all lease objects in the kube-node-lease namespace.", "output": "bash\n kubectl get lease -n kube-node-lease"}
{"type": "fewshot", "instruction": "Describe the lease node-lease in the kube-node-lease namespace.", "output": "bash\n kubectl describe lease node-lease -n kube-node-lease"}
{"type": "fewshot", "instruction": "Fetch logs from the init container named init-container in pod init-pod.", "output": "bash\n kubectl logs init-pod -c init-container"}
{"type": "fewshot", "instruction": "Execute an interactive shell in the init container of pod init-pod.", "output": "bash\n kubectl exec -it init-pod -c init-container -- /bin/sh"}
{"type": "fewshot", "instruction": "List all jobs with the label batch=true.", "output": "bash\n kubectl get jobs -l batch=true"}
{"type": "fewshot", "instruction": "Delete the job cleanup-job in the batch namespace.", "output": "bash\n kubectl delete job cleanup-job -n batch"}
{"type": "fewshot", "instruction": "List all pods with custom columns showing name and restart count.", "output": "bash\n kubectl get pods -o custom-columns=NAME.metadata.name,RESTARTS.status.containerStatuses.restartCount"}
{"type": "fewshot", "instruction": "Watch changes for the replication controller rc-watch.", "output": "bash\n kubectl get rc rc-watch --watch"}
{"type": "fewshot", "instruction": "List all non-namespaced API resources.", "output": "bash\n kubectl api-resources --namespaced=false"}
{"type": "fewshot", "instruction": "View the kubeconfig details for the current context.", "output": "bash\n kubectl config view --minify"}
{"type": "fewshot", "instruction": "Add a new cluster new-cluster to your kubeconfig with an insecure connection.", "output": "bash\n kubectl config set-cluster new-cluster --server=https//new.cluster6443 --insecure-skip-tls-verify=true"}
{"type": "fewshot", "instruction": "Add a new user new-user to your kubeconfig with basic credentials.", "output": "bash\n kubectl config set-credentials new-user --username=new-user --password=pass123"}
{"type": "fewshot", "instruction": "Create a new context new-context using cluster new-cluster and user new-user.", "output": "bash\n kubectl config set-context new-context --cluster=new-cluster --user=new-user"}
{"type": "fewshot", "instruction": "Switch the current context to new-context.", "output": "bash\n kubectl config use-context new-context"}
{"type": "fewshot", "instruction": "List all contexts in the kubeconfig.", "output": "bash\n kubectl config get-contexts"}
{"type": "fewshot", "instruction": "Display the entire kubeconfig file in raw YAML format.", "output": "bash\n kubectl config view --raw"}
{"type": "fewshot", "instruction": "Update deployment backend to set its container backend image pull policy to Always.", "output": "bash\n kubectl patch deployment backend -p spectemplatespeccontainersnamebackend,imagePullPolicyAlways"}
{"type": "fewshot", "instruction": "Retrieve logs from a previously terminated container in pod failure-pod.", "output": "bash\n kubectl logs failure-pod --previous"}
{"type": "fewshot", "instruction": "Run a pod named hello using the busybox image that prints Hello, Kubernetes and sleeps.", "output": "bash\n kubectl run hello --image=busybox --restart=Never -- /bin/sh -c echo Hello, Kubernetes sleep 3600"}
{"type": "fewshot", "instruction": "Delete the pod hello after testing.", "output": "bash\n kubectl delete pod hello"}
{"type": "fewshot", "instruction": "Create a configmap named env-config from the environment file app.env.", "output": "bash\n kubectl create configmap env-config --from-env-file=app.env"}
{"type": "fewshot", "instruction": "Mount the configmap env-config into deployment app-deploy at the path /etc/config.", "output": "bash\n kubectl set volume deployment/app-deploy --add --name=config-volume --configmap-name=env-config --mount-path=/etc/config"}
{"type": "fewshot", "instruction": "Update the configmap env-config from the file app.env using a dry-run and apply.", "output": "bash\n kubectl create configmap env-config --from-env-file=app.env --dry-run=client -o yaml  kubectl apply -f -"}
{"type": "fewshot", "instruction": "Force delete a pod named stuck-pod without waiting for graceful termination.", "output": "bash\n kubectl delete pod stuck-pod --grace-period=0 --force"}
{"type": "fewshot", "instruction": "Annotate deployment web-deploy with the commit hash abc123.", "output": "bash\n kubectl annotate deployment web-deploy commit=abc123"}
{"type": "fewshot", "instruction": "Label the pod temp-pod with the label test=true.", "output": "bash\n kubectl label pod temp-pod test=true"}
{"type": "fewshot", "instruction": "Remove the test label from pod temp-pod.", "output": "bash\n kubectl label pod temp-pod test-"}
{"type": "fewshot", "instruction": "Export all deployments in the default namespace to a YAML file named deployments.yaml.", "output": "bash\n kubectl get deployments -n default -o yaml > deployments.yaml"}
{"type": "fewshot", "instruction": "List all pods in namespace custom", "output": "bash\n kubectl get pods -n custom"}
{"type": "fewshot", "instruction": "Get detailed information about deployment frontend in JSON format", "output": "bash\n kubectl get deployment frontend -o json"}
{"type": "fewshot", "instruction": "Watch live updates for statefulsets in namespace default", "output": "bash\n kubectl get statefulsets -n default --watch"}
{"type": "fewshot", "instruction": "Display all pods with the label env=staging", "output": "bash\n kubectl get pods -l env=staging"}
{"type": "fewshot", "instruction": "Describe the service account default in namespace kube-system", "output": "bash\n kubectl describe serviceaccount default -n kube-system"}
{"type": "fewshot", "instruction": "Set image pull policy for deployment app to Always using patch", "output": "bash\n kubectl patch deployment app -p spectemplatespeccontainersnameapp,imagePullPolicyAlways"}
{"type": "fewshot", "instruction": "Roll back deployment app to a previous revision", "output": "bash\n kubectl rollout undo deployment app"}
{"type": "fewshot", "instruction": "Get pods in namespace default with their IP addresses", "output": "bash\n kubectl get pods -n default -o wide"}
{"type": "fewshot", "instruction": "Delete all completed jobs in namespace batch", "output": "bash\n kubectl delete job --field-selector=status.successful=1 -n batch"}
{"type": "fewshot", "instruction": "Get endpoints for service myapp in namespace default", "output": "bash\n kubectl get endpoints myapp -n default"}
{"type": "fewshot", "instruction": "Describe configmap app-config in namespace default", "output": "bash\n kubectl describe configmap app-config -n default"}
{"type": "fewshot", "instruction": "Apply a configuration from a remote URL https//example.com/config.yaml", "output": "bash\n kubectl apply -f https//example.com/config.yaml"}
{"type": "fewshot", "instruction": "Show the differences between the live and local configuration of deployment api", "output": "bash\n kubectl diff -f api.yaml"}
{"type": "fewshot", "instruction": "List all resources of type ingress in namespace default", "output": "bash\n kubectl get ingress -n default"}
{"type": "fewshot", "instruction": "Describe persistent volume claim my-pvc in namespace default", "output": "bash\n kubectl describe pvc my-pvc -n default"}
{"type": "fewshot", "instruction": "Convert a manifest file service.yaml to JSON", "output": "bash\n kubectl convert -f service.yaml -o json"}
{"type": "fewshot", "instruction": "List pods with custom columns in namespace prod showing name and node", "output": "bash\n kubectl get pods -n prod -o custom-columns=NAME.metadata.name,NODE.spec.nodeName"}
{"type": "fewshot", "instruction": "Set resource limits on deployment worker from file resources.yaml", "output": "bash\n kubectl set resources deployment worker -f resources.yaml"}
{"type": "fewshot", "instruction": "Get events for a specific pod worker-123 in namespace prod", "output": "bash\n kubectl get events --field-selector involvedObject.name=worker-123 -n prod"}
{"type": "fewshot", "instruction": "Create a role binding for the read-only role in namespace dev", "output": "bash\n kubectl create rolebinding read-only-binding --role=read-only --serviceaccount=devdefault -n dev"}
{"type": "fewshot", "instruction": "Delete the role old-role from namespace default", "output": "bash\n kubectl delete role old-role -n default"}
{"type": "fewshot", "instruction": "Show annotations for pod test-pod in namespace default", "output": "bash\n kubectl get pod test-pod -n default -o jsonpath=.metadata.annotations"}
{"type": "fewshot", "instruction": "Set a label priority=high on deployment critical-app in namespace prod", "output": "bash\n kubectl label deployment critical-app priority=high -n prod"}
{"type": "fewshot", "instruction": "Remove the label deprecated from service old-service in namespace default", "output": "bash\n kubectl label service old-service deprecated- -n default"}
{"type": "fewshot", "instruction": "Expose a port from pod debug-pod to local machine port 9999", "output": "bash\n kubectl port-forward pod/debug-pod 999980"}
{"type": "fewshot", "instruction": "List all pods in all namespaces with wide output", "output": "bash\n kubectl get pods --all-namespaces -o wide"}
{"type": "fewshot", "instruction": "Display API resource definitions for cronjob", "output": "bash\n kubectl explain cronjob"}
{"type": "fewshot", "instruction": "Apply a patch to add a new environment variable to deployment worker", "output": "bash\n kubectl patch deployment worker -p spectemplatespeccontainersnameworker,envnameDEBUG,valuetrue"}
{"type": "fewshot", "instruction": "List all jobs in all namespaces with wide output", "output": "bash\n kubectl get jobs --all-namespaces -o wide"}
{"type": "fewshot", "instruction": "Show details of replica set frontend-abc123 in namespace default", "output": "bash\n kubectl describe rs frontend-abc123 -n default"}
{"type": "fewshot", "instruction": "Scale replica set frontend-abc123 to 8 replicas in namespace default", "output": "bash\n kubectl scale rs frontend-abc123 --replicas=8 -n default"}
{"type": "fewshot", "instruction": "Create a new secret from a literal value password=secret", "output": "bash\n kubectl create secret generic my-secret --from-literal=password=secret"}
{"type": "fewshot", "instruction": "Update secret my-secret with new literal data using dry-run", "output": "bash\n kubectl create secret generic my-secret --from-literal=password=newsecret --dry-run=client -o yaml  kubectl apply -f -"}
{"type": "fewshot", "instruction": "List all endpoints with the label app=backend", "output": "bash\n kubectl get endpoints -l app=backend"}
{"type": "fewshot", "instruction": "Show detailed information for service db-service in JSON format", "output": "bash\n kubectl get svc db-service -o json"}
{"type": "fewshot", "instruction": "Export the configuration of statefulset cache to a YAML file", "output": "bash\n kubectl get statefulset cache -o yaml > cache-statefulset.yaml"}
{"type": "fewshot", "instruction": "List pods using a custom output format showing name and status", "output": "bash\n kubectl get pods -o custom-columns=NAME.metadata.name,STATUS.status.phase"}
{"type": "fewshot", "instruction": "Show the last 50 log lines for container main in pod app-pod", "output": "bash\n kubectl logs app-pod -c main --tail=50"}
{"type": "fewshot", "instruction": "Run a temporary pod with image alpine to execute a command", "output": "bash\n kubectl run temp-alpine --image=alpine --restart=Never -- /bin/sh -c echo Temporary Pod"}
{"type": "fewshot", "instruction": "Create a namespace qa and set a label environment=qa", "output": "bash\n kubectl create namespace qa  kubectl label namespace qa environment=qa"}
{"type": "fewshot", "instruction": "Annotate namespace qa with owner=team-qa", "output": "bash\n kubectl annotate namespace qa owner=team-qa"}
{"type": "fewshot", "instruction": "Describe node node-5 and display its conditions", "output": "bash\n kubectl describe node node-5"}
{"type": "fewshot", "instruction": "Get all pods in namespace default with a custom output showing node name", "output": "bash\n kubectl get pods -n default -o custom-columns=NAME.metadata.name,NODE.spec.nodeName"}
{"type": "fewshot", "instruction": "Show the rolling update status for daemonset fluent-bit", "output": "bash\n kubectl rollout status daemonset fluent-bit"}
{"type": "fewshot", "instruction": "Apply changes in directory overlays/dev recursively", "output": "bash\n kubectl apply -R -f overlays/dev"}
{"type": "fewshot", "instruction": "List pods with the field status.phase=Pending in namespace default", "output": "bash\n kubectl get pods -n default --field-selector=status.phase=Pending"}
{"type": "fewshot", "instruction": "Create a secret from a file token.txt", "output": "bash\n kubectl create secret generic token-secret --from-file=token.txt"}
{"type": "fewshot", "instruction": "Delete a configmap named old-config from namespace dev", "output": "bash\n kubectl delete configmap old-config -n dev"}
{"type": "fewshot", "instruction": "Watch for new events in the kube-system namespace", "output": "bash\n kubectl get events -n kube-system --watch"}
{"type": "fewshot", "instruction": "Display logs for init container init in pod setup-pod", "output": "bash\n kubectl logs setup-pod -c init"}
{"type": "fewshot", "instruction": "Label node node-10 with zone=us-central1-a", "output": "bash\n kubectl label node node-10 zone=us-central1-a"}
{"type": "fewshot", "instruction": "Remove label zone from node node-10", "output": "bash\n kubectl label node node-10 zone-"}
{"type": "fewshot", "instruction": "Patch service frontend-svc to add a new port 8081", "output": "bash\n kubectl patch service frontend-svc -p specportsport8081,targetPort8081"}
{"type": "fewshot", "instruction": "Get a list of all resources in namespace monitoring", "output": "bash\n kubectl get all -n monitoring"}
{"type": "fewshot", "instruction": "Export deployment backend configuration to a file backend.yaml", "output": "bash\n kubectl get deployment backend -o yaml > backend.yaml"}
{"type": "fewshot", "instruction": "Create a new configmap game-config from a directory game-settings", "output": "bash\n kubectl create configmap game-config --from-file=game-settings"}
{"type": "fewshot", "instruction": "Annotate pod game-server with version v2.0", "output": "bash\n kubectl annotate pod game-server version=v2.0"}
{"type": "fewshot", "instruction": "Set environment variable MODE=debug on pod game-server using patch", "output": "bash\n kubectl patch pod game-server -p speccontainersnamegame-server,envnameMODE,valuedebug"}
{"type": "fewshot", "instruction": "Describe the endpoints for the service game-svc in namespace games", "output": "bash\n kubectl describe endpoints game-svc -n games"}
{"type": "fewshot", "instruction": "List all deployments sorted by creation timestamp in namespace default", "output": "bash\n kubectl get deployments -n default --sort-by=.metadata.creationTimestamp"}
{"type": "fewshot", "instruction": "Watch for changes in deployments in namespace prod", "output": "bash\n kubectl get deployments -n prod --watch"}
{"type": "fewshot", "instruction": "Scale deployment microservice to zero replicas to pause it", "output": "bash\n kubectl scale deployment microservice --replicas=0"}
{"type": "fewshot", "instruction": "Restart deployment microservice by rolling update", "output": "bash\n kubectl rollout restart deployment microservice"}
{"type": "fewshot", "instruction": "Set a new image for container service in statefulset db to postgres13", "output": "bash\n kubectl set image statefulset/db service=postgres13"}
{"type": "fewshot", "instruction": "Display the history of rollouts for statefulset db", "output": "bash\n kubectl rollout history statefulset db"}
{"type": "fewshot", "instruction": "Force a deployment to restart by patching its annotations", "output": "bash\n kubectl patch deployment app -p spectemplatemetadataannotationsdate(date)"}
{"type": "fewshot", "instruction": "Retrieve logs from the container worker in pod job-runner since 10 minutes ago", "output": "bash\n kubectl logs job-runner -c worker --since=10m"}
{"type": "fewshot", "instruction": "List all pods in namespace analytics with label tier=backend", "output": "bash\n kubectl get pods -n analytics -l tier=backend"}
{"type": "fewshot", "instruction": "Describe service analytics-svc in namespace analytics", "output": "bash\n kubectl describe service analytics-svc -n analytics"}
{"type": "fewshot", "instruction": "List all statefulsets with label role=database in namespace data", "output": "bash\n kubectl get statefulsets -n data -l role=database"}
{"type": "fewshot", "instruction": "Create a new secret db-credentials from multiple literal values", "output": "bash\n kubectl create secret generic db-credentials --from-literal=username=admin --from-literal=password=secret"}
{"type": "fewshot", "instruction": "Delete secret old-credentials from namespace data", "output": "bash\n kubectl delete secret old-credentials -n data"}
{"type": "fewshot", "instruction": "List all pods with a restart count greater than 0", "output": "bash\n kubectl get pods -o json  jq .items  select(.status.containerStatuses.restartCount > 0)  .metadata.name"}
{"type": "fewshot", "instruction": "Apply a label release=stable to all pods in namespace prod", "output": "bash\n kubectl label pods --all release=stable -n prod"}
{"type": "fewshot", "instruction": "Remove the label release from all pods in namespace prod", "output": "bash\n kubectl label pods --all release- -n prod"}
{"type": "fewshot", "instruction": "Fetch a list of all container images running in namespace default", "output": "bash\n kubectl get pods -n default -o jsonpath=..image"}
{"type": "fewshot", "instruction": "List all replication controllers in namespace legacy", "output": "bash\n kubectl get rc -n legacy"}
{"type": "fewshot", "instruction": "Describe replication controller old-rc in namespace legacy", "output": "bash\n kubectl describe rc old-rc -n legacy"}
{"type": "fewshot", "instruction": "Delete replication controller old-rc in namespace legacy", "output": "bash\n kubectl delete rc old-rc -n legacy"}
{"type": "fewshot", "instruction": "Export replication controller old-rc configuration to a file", "output": "bash\n kubectl get rc old-rc -n legacy -o yaml > old-rc.yaml"}
{"type": "fewshot", "instruction": "Show node resource usage in a custom table format", "output": "bash\n kubectl top nodes --no-headers  awk print 1, 3, 5"}
{"type": "fewshot", "instruction": "List all pods with owner references", "output": "bash\n kubectl get pods -o jsonpath=range .items.metadata.name.metadata.ownerReferences.name end"}
{"type": "fewshot", "instruction": "Create a secret from a directory ssl", "output": "bash\n kubectl create secret generic ssl-secret --from-file=ssl"}
{"type": "fewshot", "instruction": "Update deployment web to use a new image from a private registry", "output": "bash\n kubectl set image deployment/web web=private.registry.com/weblatest"}
{"type": "fewshot", "instruction": "Describe the resource quotas in namespace dev", "output": "bash\n kubectl describe quota -n dev"}
{"type": "fewshot", "instruction": "Get all pods using a JSONPath query to display name and node name", "output": "bash\n kubectl get pods -o jsonpath=range .items.metadata.name .spec.nodeNamenend"}
{"type": "fewshot", "instruction": "List all configmaps in namespace ops in YAML format", "output": "bash\n kubectl get configmaps -n ops -o yaml"}
{"type": "fewshot", "instruction": "Annotate deployment api-deploy with build=2025-02-04", "output": "bash\n kubectl annotate deployment api-deploy build=2025-02-04"}
{"type": "fewshot", "instruction": "Patch statefulset cache to update its updateStrategy to RollingUpdate", "output": "bash\n kubectl patch statefulset cache -p specupdateStrategytypeRollingUpdate"}
{"type": "fewshot", "instruction": "Scale the daemonset metrics-agent to 0 (not normally allowed)", "output": "bash\n kubectl scale daemonset metrics-agent --replicas=0"}
{"type": "fewshot", "instruction": "List all custom resource objects of type MyResource in all namespaces", "output": "bash\n kubectl get MyResource --all-namespaces"}
{"type": "fewshot", "instruction": "Get a specific field status.phase for pod example-pod in namespace default", "output": "bash\n kubectl get pod example-pod -n default -o jsonpath=.status.phase"}
{"type": "fewshot", "instruction": "View details of the nodes addresses in JSON", "output": "bash\n kubectl get node node-1 -o jsonpath=.status.addresses"}
{"type": "fewshot", "instruction": "Display services sorted by their cluster IP", "output": "bash\n kubectl get svc --sort-by=.spec.clusterIP"}
{"type": "fewshot", "instruction": "Describe the mutating webhook sidecar-injector", "output": "bash\n kubectl describe mutatingwebhookconfiguration sidecar-injector"}
{"type": "fewshot", "instruction": "Patch a service account builder to add an image pull secret", "output": "bash\n kubectl patch serviceaccount builder -p imagePullSecretsnameregcred"}
{"type": "fewshot", "instruction": "List all pods in namespace default that are not ready", "output": "bash\n kubectl get pods -n default --field-selector=status.phase!=Running"}
{"type": "fewshot", "instruction": "Create a job cleanup-temp from command line to remove temp files", "output": "bash\n kubectl run cleanup-temp --image=alpine --restart=Never -- /bin/sh -c rm -rf /tmp/"}
{"type": "fewshot", "instruction": "Delete the job cleanup-temp after completion", "output": "bash\n kubectl delete job cleanup-temp"}
{"type": "fewshot", "instruction": "Get the list of all pods with their restart counts in JSON format", "output": "bash\n kubectl get pods -o json  jq .items  name .metadata.name, restarts .status.containerStatuses0.restartCount"}
{"type": "fewshot", "instruction": "View the last 20 events in namespace default", "output": "bash\n kubectl get events -n default --sort-by=.metadata.creationTimestamp  tail -n 20"}
{"type": "fewshot", "instruction": "List all roles across all namespaces", "output": "bash\n kubectl get roles --all-namespaces"}
{"type": "fewshot", "instruction": "List all cluster roles", "output": "bash\n kubectl get clusterroles"}
{"type": "fewshot", "instruction": "Describe the cluster role cluster-admin", "output": "bash\n kubectl describe clusterrole cluster-admin"}
{"type": "fewshot", "instruction": "Create a cluster role binding for user alice to cluster-admin", "output": "bash\n kubectl create clusterrolebinding alice-admin --clusterrole=cluster-admin --user=alice"}
{"type": "fewshot", "instruction": "Delete the cluster role binding alice-admin", "output": "bash\n kubectl delete clusterrolebinding alice-admin"}
{"type": "fewshot", "instruction": "Export all secrets in namespace default to a JSON file", "output": "bash\n kubectl get secrets -n default -o json > secrets.json"}
{"type": "fewshot", "instruction": "List all nodes with labels in a custom format", "output": "bash\n kubectl get nodes -o custom-columns=NAME.metadata.name,LABELS.metadata.labels"}
{"type": "fewshot", "instruction": "Set the image for all containers in deployment multi-container to busyboxlatest", "output": "bash\n kubectl set image deployment/multi-container =busyboxlatest"}
{"type": "fewshot", "instruction": "Patch pod test-pod to add an annotation debug=true", "output": "bash\n kubectl patch pod test-pod -p metadataannotationsdebugtrue"}
{"type": "fewshot", "instruction": "Run an ephemeral container in pod test-pod for debugging", "output": "bash\n kubectl debug pod/test-pod --image=busybox"}
{"type": "fewshot", "instruction": "List all pods with a specific container name nginx", "output": "bash\n kubectl get pods -o jsonpath=.items?(.spec.containers.name==nginx).metadata.name"}
{"type": "fewshot", "instruction": "Create a pod with multiple containers using a multi-document YAML", "output": "bash\n kubectl apply -f multi-container-pod.yaml"}
{"type": "fewshot", "instruction": "Update deployment web using a strategic merge patch", "output": "bash\n kubectl patch deployment web -p spectemplatespeccontainersnameweb,resourceslimitscpu500m"}
{"type": "fewshot", "instruction": "List all available API groups", "output": "bash\n kubectl api-resources --api-group="}
{"type": "fewshot", "instruction": "Display a summary of current contexts from kubeconfig", "output": "bash\n kubectl config get-contexts"}
{"type": "fewshot", "instruction": "Set the current context to use user bob", "output": "bash\n kubectl config set-context --current --user=bob"}
{"type": "fewshot", "instruction": "Switch to context dev-context", "output": "bash\n kubectl config use-context dev-context"}
{"type": "fewshot", "instruction": "Get a list of all pods in namespace staging with their restart counts using custom-columns", "output": "bash\n kubectl get pods -n staging -o custom-columns=NAME.metadata.name,RESTARTS.status.containerStatuses.restartCount"}
{"type": "fewshot", "instruction": "Describe persistent volume pv-data in detail", "output": "bash\n kubectl describe pv pv-data"}
{"type": "fewshot", "instruction": "List all persistent volume claims across all namespaces", "output": "bash\n kubectl get pvc --all-namespaces"}
{"type": "fewshot", "instruction": "Create a new service from a YAML file service.yaml in namespace dev", "output": "bash\n kubectl create -f service.yaml -n dev"}
{"type": "fewshot", "instruction": "Replace the existing configmap app-config in namespace default using a file", "output": "bash\n kubectl replace -f app-config.yaml -n default"}
{"type": "fewshot", "instruction": "Run a one-off command in a new pod debug-tool using the image ubuntu", "output": "bash\n kubectl run debug-tool --rm -it --image=ubuntu -- /bin/bash"}
{"type": "fewshot", "instruction": "Get the list of all namespaces with their status", "output": "bash\n kubectl get namespaces"}
{"type": "fewshot", "instruction": "View detailed information for node master-node in JSON", "output": "bash\n kubectl get node master-node -o json"}
{"type": "fewshot", "instruction": "Create a new service account build-bot in namespace ci", "output": "bash\n kubectl create serviceaccount build-bot -n ci"}
{"type": "fewshot", "instruction": "Describe the service account build-bot in namespace ci", "output": "bash\n kubectl describe serviceaccount build-bot -n ci"}
{"type": "fewshot", "instruction": "Patch deployment ci-server to add an environment variable CI=true", "output": "bash\n kubectl patch deployment ci-server -p spectemplatespeccontainersnameci-server,envnameCI,valuetrue"}
{"type": "fewshot", "instruction": "List all custom resources of type Foo in namespace test", "output": "bash\n kubectl get Foo -n test"}
{"type": "fewshot", "instruction": "Get the OpenAPI schema for the Pod resource", "output": "bash\n kubectl get --raw /openapi/v2  jq .definitions.Pod"}
{"type": "fewshot", "instruction": "Apply a label team=dev to namespace development", "output": "bash\n kubectl label namespace development team=dev"}
{"type": "fewshot", "instruction": "Remove the label team from namespace development", "output": "bash\n kubectl label namespace development team-"}
{"type": "fewshot", "instruction": "Show only the names of cluster roles", "output": "bash\n kubectl get clusterroles -o custom-columns=NAME.metadata.name"}
{"type": "fewshot", "instruction": "Watch for new cluster role bindings", "output": "bash\n kubectl get clusterrolebindings --watch"}
{"type": "fewshot", "instruction": "Describe the role binding read-only-binding in namespace dev", "output": "bash\n kubectl describe rolebinding read-only-binding -n dev"}
{"type": "fewshot", "instruction": "Create a new replication controller from rc.yaml in namespace legacy", "output": "bash\n kubectl create -f rc.yaml -n legacy"}
{"type": "fewshot", "instruction": "List all API versions available in the cluster", "output": "bash\n kubectl api-versions"}
{"type": "fewshot", "instruction": "Update the image of pod single-container directly (not recommended)", "output": "bash\n kubectl set image pod/single-container single-container=myimagelatest"}
{"type": "fewshot", "instruction": "Retrieve logs from pod stream-pod and follow them in real time", "output": "bash\n kubectl logs stream-pod -f"}
{"type": "fewshot", "instruction": "Display detailed container statuses for pod status-pod", "output": "bash\n kubectl describe pod status-pod"}
{"type": "fewshot", "instruction": "Create a new ingress from file ingress.yaml in namespace web", "output": "bash\n kubectl create -f ingress.yaml -n web"}
{"type": "fewshot", "instruction": "Patch ingress web-ingress to update its backend service", "output": "bash\n kubectl patch ingress web-ingress -n web -p specruleshttppathsbackendserviceNamenew-service,servicePort80"}
{"type": "fewshot", "instruction": "List all endpoints for ingress web-ingress in namespace web", "output": "bash\n kubectl get endpoints -n web -l kubernetes.io/ingress-name=web-ingress"}
{"type": "fewshot", "instruction": "Display a summary of resource quotas in namespace production", "output": "bash\n kubectl get quota -n production"}
{"type": "fewshot", "instruction": "Describe resource quota compute-quota in namespace production", "output": "bash\n kubectl describe quota compute-quota -n production"}
{"type": "fewshot", "instruction": "Create a new resource quota from file quota.yaml in namespace production", "output": "bash\n kubectl create -f quota.yaml -n production"}
{"type": "fewshot", "instruction": "Delete resource quota temp-quota from namespace temp", "output": "bash\n kubectl delete quota temp-quota -n temp"}
{"type": "fewshot", "instruction": "List all persistent volumes with detailed output", "output": "bash\n kubectl get pv -o wide"}
{"type": "fewshot", "instruction": "Describe persistent volume pv-ssd in detail", "output": "bash\n kubectl describe pv pv-ssd"}
{"type": "fewshot", "instruction": "Set up port forwarding from service db-svc in namespace database port 5432 to local port 15432", "output": "bash\n kubectl port-forward service/db-svc 154325432 -n database"}
{"type": "fewshot", "instruction": "Execute a command in an init container of pod init-example", "output": "bash\n kubectl exec -it init-example -c init-container -- /bin/sh"}
{"type": "fewshot", "instruction": "Run a pod trace with image jaegertracing/all-in-one1.21", "output": "bash\n kubectl run trace --image=jaegertracing/all-in-one1.21 --restart=Never"}
{"type": "fewshot", "instruction": "Delete pod trace after troubleshooting", "output": "bash\n kubectl delete pod trace"}
{"type": "fewshot", "instruction": "List all pods with the annotation backup=true", "output": "bash\n kubectl get pods -A -o jsonpath=.items?(.metadata.annotations.backup==true).metadata.name"}
{"type": "fewshot", "instruction": "Describe the secret tls-cert in namespace web", "output": "bash\n kubectl describe secret tls-cert -n web"}
{"type": "fewshot", "instruction": "Create a TLS secret from files tls.crt and tls.key in namespace web", "output": "bash\n kubectl create secret tls tls-cert --cert=tls.crt --key=tls.key -n web"}
{"type": "fewshot", "instruction": "List all jobs in namespace ci with their completions", "output": "bash\n kubectl get jobs -n ci -o custom-columns=NAME.metadata.name,COMPLETIONS.status.succeeded"}
{"type": "fewshot", "instruction": "Describe job build-job in namespace ci", "output": "bash\n kubectl describe job build-job -n ci"}
{"type": "fewshot", "instruction": "Create a cronjob nightly-build from file cronjob.yaml in namespace ci", "output": "bash\n kubectl create -f cronjob.yaml -n ci"}
{"type": "fewshot", "instruction": "Suspend the cronjob nightly-build temporarily", "output": "bash\n kubectl patch cronjob nightly-build -n ci -p specsuspendtrue"}
{"type": "fewshot", "instruction": "Resume the cronjob nightly-build", "output": "bash\n kubectl patch cronjob nightly-build -n ci -p specsuspendfalse"}
{"type": "fewshot", "instruction": "Get the status of cronjob nightly-build in namespace ci", "output": "bash\n kubectl get cronjob nightly-build -n ci"}
{"type": "fewshot", "instruction": "Delete cronjob nightly-build from namespace ci", "output": "bash\n kubectl delete cronjob nightly-build -n ci"}
{"type": "fewshot", "instruction": "Label all deployments in namespace marketing with tier=frontend", "output": "bash\n kubectl label deployments --all tier=frontend -n marketing"}
{"type": "fewshot", "instruction": "Remove the label tier from all deployments in namespace marketing", "output": "bash\n kubectl label deployments --all tier- -n marketing"}
{"type": "fewshot", "instruction": "Get detailed rollout history for deployment ad-server in namespace ads", "output": "bash\n kubectl rollout history deployment ad-server -n ads"}
{"type": "fewshot", "instruction": "Rollback deployment ad-server in namespace ads to a previous revision", "output": "bash\n kubectl rollout undo deployment ad-server -n ads"}
{"type": "fewshot", "instruction": "Set the default namespace for kubectl commands to sandbox", "output": "bash\n kubectl config set-context --current --namespace=sandbox"}
{"type": "fewshot", "instruction": "Unset the default namespace in the current context", "output": "bash\n kubectl config set-context --current --namespace="}
{"type": "fewshot", "instruction": "List all pods in namespace sandbox with their restart policy", "output": "bash\n kubectl get pods -n sandbox -o custom-columns=NAME.metadata.name,RESTARTPOLICY.spec.restartPolicy"}
{"type": "fewshot", "instruction": "Display the YAML of the current context from kubeconfig", "output": "bash\n kubectl config view --minify -o yaml"}
{"type": "fewshot", "instruction": "Create a network policy from file netpolicy.yaml in namespace secure", "output": "bash\n kubectl create -f netpolicy.yaml -n secure"}
{"type": "fewshot", "instruction": "Describe the network policy deny-all in namespace secure", "output": "bash\n kubectl describe networkpolicy deny-all -n secure"}
{"type": "fewshot", "instruction": "Patch deployment api-gateway to update its number of replicas to 4", "output": "bash\n kubectl patch deployment api-gateway -p specreplicas4"}
{"type": "fewshot", "instruction": "Set node selector for deployment worker to use nodes with label role=worker", "output": "bash\n kubectl patch deployment worker -p spectemplatespecnodeSelectorroleworker"}
{"type": "fewshot", "instruction": "Display logs for pod multi-log for container sidecar with timestamps", "output": "bash\n kubectl logs multi-log -c sidecar --timestamps"}
{"type": "fewshot", "instruction": "Tail logs for pod app-log for container main with 100 lines", "output": "bash\n kubectl logs app-log -c main --tail=100"}
{"type": "fewshot", "instruction": "Run a privileged container in pod privileged-pod using the image centos", "output": "bash\n kubectl run privileged-pod --image=centos --privileged --restart=Never -- /bin/bash"}
{"type": "fewshot", "instruction": "List all deployments with selector app=nginx in namespace web", "output": "bash\n kubectl get deployments -n web -l app=nginx"}
{"type": "fewshot", "instruction": "Describe the deployment nginx-deploy in namespace web", "output": "bash\n kubectl describe deployment nginx-deploy -n web"}
{"type": "fewshot", "instruction": "Delete deployment temp-deploy in namespace dev", "output": "bash\n kubectl delete deployment temp-deploy -n dev"}
{"type": "fewshot", "instruction": "Get detailed information about pod cache-redis with JSON output", "output": "bash\n kubectl get pod cache-redis -o json"}
{"type": "fewshot", "instruction": "Apply a label version=v2 to service api-service in namespace prod", "output": "bash\n kubectl label service api-service version=v2 -n prod"}
{"type": "fewshot", "instruction": "Remove label version from service api-service in namespace prod", "output": "bash\n kubectl label service api-service version- -n prod"}
{"type": "fewshot", "instruction": "Patch pod db-pod to add a toleration for key database", "output": "bash\n kubectl patch pod db-pod -p spectolerationskeydatabase,operatorExists,effectNoSchedule"}
{"type": "fewshot", "instruction": "List all pods in namespace default sorted by restart count", "output": "bash\n kubectl get pods -n default --sort-by=.status.containerStatuses0.restartCount"}
{"type": "fewshot", "instruction": "Set the log level for kubectl to debug", "output": "bash\n kubectl --v=9 get pods"}
{"type": "fewshot", "instruction": "Get the CPU and memory usage of pods with label app=worker in namespace default", "output": "bash\n kubectl top pod -l app=worker -n default"}
{"type": "fewshot", "instruction": "Watch for changes in replica set frontend-abc123 in real time", "output": "bash\n kubectl get rs frontend-abc123 -n default --watch"}
{"type": "fewshot", "instruction": "List all service accounts in namespace default", "output": "bash\n kubectl get serviceaccounts -n default"}
{"type": "fewshot", "instruction": "Describe the role view in namespace default", "output": "bash\n kubectl describe role view -n default"}
{"type": "fewshot", "instruction": "List all volume attachments in the cluster", "output": "bash\n kubectl get volumeattachments"}
{"type": "fewshot", "instruction": "Show the endpoints for deployment api in namespace prod", "output": "bash\n kubectl get endpoints api -n prod"}
{"type": "fewshot", "instruction": "Watch for changes in persistent volume claims in namespace data", "output": "bash\n kubectl get pvc -n data --watch"}
{"type": "fewshot", "instruction": "Patch service web-svc to add an external IP using a JSON patch", "output": "bash\n kubectl patch service web-svc -p op add, path /spec/externalIPs, value 192.168.1.100"}
{"type": "explanation", "instruction": "User List all namespaces.\n Assistant Sure, here is the list of all namespaces.\n User Great, thanks.", "output": "bash\n kubectl get namespaces"}
{"type": "explanation", "instruction": "User I need to see pods across all namespaces.\n Assistant Retrieving pods from every namespace.\n User Perfect.", "output": "bash\n kubectl get pods --all-namespaces"}
{"type": "explanation", "instruction": "User Show me detailed pod information.\n Assistant Displaying pods in wide format for more details.\n User Thanks.", "output": "bash\n kubectl get pods -o wide"}
{"type": "explanation", "instruction": "User List all deployments across all namespaces.\n Assistant Here are the deployments in every namespace.\n User Awesome.", "output": "bash\n kubectl get deployments --all-namespaces"}
{"type": "explanation", "instruction": "User I want to view node information in JSON format.\n Assistant Fetching node details as JSON.\n User Thats exactly what I need.", "output": "bash\n kubectl get nodes -o json"}
{"type": "explanation", "instruction": "User Show me my current kubeconfig settings.\n Assistant Displaying the current configuration view.\n User Great.", "output": "bash\n kubectl config view"}
{"type": "explanation", "instruction": "User I need to modify a deployment interactively.\n Assistant Opening the editor for deployment my-deployment.\n User Proceed.", "output": "bash\n kubectl edit deployment my-deployment"}
{"type": "explanation", "instruction": "User Scale a replicaset for me.\n Assistant Which replicaset should be scaled?\n User my-replicaset to 3 replicas.", "output": "bash\n kubectl scale replicaset my-replicaset --replicas=3"}
{"type": "explanation", "instruction": "User Update the image for a deployment.\n Assistant Changing image for container in deployment my-deployment.\n User Set it to myimagelatest.", "output": "bash\n kubectl set image deployment/my-deployment my-container=myimagelatest"}
{"type": "explanation", "instruction": "User I want to see the rollout history of my deployment.\n Assistant Retrieving rollout history for my-deployment.\n User Thanks.", "output": "bash\n kubectl rollout history deployment/my-deployment"}
{"type": "explanation", "instruction": "User Can you revert my deployment to a previous state?\n Assistant Rolling back my-deployment to its previous revision.\n User Please do that.", "output": "bash\n kubectl rollout undo deployment/my-deployment"}
{"type": "explanation", "instruction": "User Show me the persistent volumes available.\n Assistant Listing all persistent volumes.\n User Great.", "output": "bash\n kubectl get pv"}
{"type": "explanation", "instruction": "User I need to list all persistent volume claims.\n Assistant Fetching all PVCs.\n User Thanks.", "output": "bash\n kubectl get pvc"}
{"type": "explanation", "instruction": "User Create a secret from a file for me.\n Assistant Which file should be used?\n User Use secret.txt for my-secret.", "output": "bash\n kubectl create secret generic my-secret --from-file=secret.txt"}
{"type": "explanation", "instruction": "User I want to create a secret from an environment file.\n Assistant Creating env-secret from .env file.\n User Go ahead.", "output": "bash\n kubectl create secret generic env-secret --from-env-file=.env"}
{"type": "explanation", "instruction": "User Apply all manifests in the current directory.\n Assistant Applying manifests from ./manifests.\n User Perfect.", "output": "bash\n kubectl apply -f ./manifests"}
{"type": "explanation", "instruction": "User Remove a service from my cluster.\n Assistant Deleting service my-service.\n User Please delete it.", "output": "bash\n kubectl delete service my-service"}
{"type": "explanation", "instruction": "User I need to modify a configmap interactively.\n Assistant Opening editor for configmap my-config.\n User Thanks.", "output": "bash\n kubectl edit configmap my-config"}
{"type": "explanation", "instruction": "User Describe a service account for me.\n Assistant Showing details for serviceaccount my-sa.\n User Excellent.", "output": "bash\n kubectl describe serviceaccount my-sa"}
{"type": "explanation", "instruction": "User List all roles in a specific namespace.\n Assistant Retrieving roles in namespace my-namespace.\n User Thanks.", "output": "bash\n kubectl get roles -n my-namespace"}
{"type": "explanation", "instruction": "User I need to list the rolebindings in a namespace.\n Assistant Fetching rolebindings from my-namespace.\n User That works.", "output": "bash\n kubectl get rolebindings -n my-namespace"}
{"type": "explanation", "instruction": "User Create a role that allows reading pods.\n Assistant Creating role pod-reader with get, list, watch permissions in my-namespace.\n User Go ahead.", "output": "bash\n kubectl create role pod-reader --verb=get,list,watch --resource=pods -n my-namespace"}
{"type": "explanation", "instruction": "User Now bind that role to the default service account.\n Assistant Creating a rolebinding named read-pods.\n User Thanks.", "output": "bash\n kubectl create rolebinding read-pods --role=pod-reader --serviceaccount=my-namespacedefault -n my-namespace"}
{"type": "explanation", "instruction": "User I want to check a cluster role called admin.\n Assistant Retrieving the clusterrole admin.\n User Thanks.", "output": "bash\n kubectl get clusterrole admin"}
{"type": "explanation", "instruction": "User List all cluster rolebindings.\n Assistant Here are the cluster rolebindings.\n User Perfect.", "output": "bash\n kubectl get clusterrolebinding"}
{"type": "explanation", "instruction": "User Cordon a node for maintenance.\n Assistant Cordon node node-1 to prevent new pods.\n User Please do it.", "output": "bash\n kubectl cordon node-1"}
{"type": "explanation", "instruction": "User I need to drain a node.\n Assistant Draining node node-2 and ignoring daemonsets.\n User Proceed.", "output": "bash\n kubectl drain node-2 --ignore-daemonsets"}
{"type": "explanation", "instruction": "User Describe node node-1 for more details.\n Assistant Fetching detailed information about node node-1.\n User Thank you.", "output": "bash\n kubectl describe node node-1"}
{"type": "explanation", "instruction": "User Add a label to my deployment.\n Assistant Labeling my-deployment with env=staging.\n User Thanks.", "output": "bash\n kubectl label deployment my-deployment env=staging"}
{"type": "explanation", "instruction": "User Can you annotate my deployment with a description?\n Assistant Adding annotation description=Staging deployment to my-deployment.\n User Great.", "output": "bash\n kubectl annotate deployment my-deployment description=Staging deployment"}
{"type": "explanation", "instruction": "User Set resource limits for a pod, please.\n Assistant Setting limits of cpu=200m and memory=512Mi for my-pod.\n User Execute that.", "output": "bash\n kubectl set resources pod my-pod --limits=cpu=200m,memory=512Mi"}
{"type": "explanation", "instruction": "User Show me events in the my-namespace namespace.\n Assistant Listing events in namespace my-namespace.\n User Thanks.", "output": "bash\n kubectl get events -n my-namespace"}
{"type": "explanation", "instruction": "User I need the YAML output for a pod.\n Assistant Retrieving YAML for my-pod.\n User Thats helpful.", "output": "bash\n kubectl get pod my-pod -o yaml"}
{"type": "explanation", "instruction": "User Show me the YAML for a deployment.\n Assistant Here is the YAML for my-deployment.\n User Good.", "output": "bash\n kubectl get deployment my-deployment -o yaml"}
{"type": "explanation", "instruction": "User I want the service YAML details.\n Assistant Fetching YAML for service my-service.\n User Thanks.", "output": "bash\n kubectl get service my-service -o yaml"}
{"type": "explanation", "instruction": "User Patch a pod to add a new label.\n Assistant Patching my-pod to include label patched=true.\n User Do it.", "output": "bash\n kubectl patch pod my-pod -p metadatalabelspatchedtrue"}
{"type": "explanation", "instruction": "User Run a temporary pod for testing.\n Assistant Running temp-pod using the alpine image interactively.\n User Start it.", "output": "bash\n kubectl run temp-pod --rm -it --image=alpine -- /bin/sh"}
{"type": "explanation", "instruction": "User I need to debug a failing pod.\n Assistant Launching a debug container from pod my-pod using busybox.\n User Proceed.", "output": "bash\n kubectl debug pod/my-pod --image=busybox --copy-to=debug-pod --container=debug"}
{"type": "explanation", "instruction": "User Show me the last 50 lines of my pod logs.\n Assistant Fetching tail of my-pod logs.\n User Thanks.", "output": "bash\n kubectl logs my-pod --tail=50"}
{"type": "explanation", "instruction": "User Follow the logs of my pod.\n Assistant Streaming logs for my-pod.\n User Alright.", "output": "bash\n kubectl logs my-pod -f"}
{"type": "explanation", "instruction": "User I want to stream logs from a specific container in my pod.\n Assistant Following logs for container my-container in my-pod.\n User Start streaming.", "output": "bash\n kubectl logs my-pod -c my-container -f"}
{"type": "explanation", "instruction": "User Check the rollout status of my deployment.\n Assistant Monitoring rollout status for my-deployment.\n User Waiting.", "output": "bash\n kubectl rollout status deployment/my-deployment"}
{"type": "explanation", "instruction": "User Label my pod with a new version.\n Assistant Labeling my-pod with version=v2.\n User Proceed.", "output": "bash\n kubectl label pod my-pod version=v2"}
{"type": "explanation", "instruction": "User Annotate a node for maintenance.\n Assistant Adding maintenance=scheduled annotation to node node-1.\n User Do it.", "output": "bash\n kubectl annotate node node-1 maintenance=scheduled"}
{"type": "explanation", "instruction": "User I need to list my custom resources.\n Assistant Listing all resources of type myresource.\n User Great.", "output": "bash\n kubectl get myresource"}
{"type": "explanation", "instruction": "User Provide details about a custom resource instance.\n Assistant Describing my-resource-instance of type myresource.\n User Thanks.", "output": "bash\n kubectl describe myresource my-resource-instance"}
{"type": "explanation", "instruction": "User Apply a configuration file.\n Assistant Applying configuration from config.yaml.\n User Please do so.", "output": "bash\n kubectl apply -f config.yaml"}
{"type": "explanation", "instruction": "User Delete a persistent volume claim.\n Assistant Removing PVC my-pvc.\n User Execute that.", "output": "bash\n kubectl delete pvc my-pvc"}
{"type": "explanation", "instruction": "User Delete a persistent volume.\n Assistant Deleting persistent volume my-pv.\n User Remove it.", "output": "bash\n kubectl delete pv my-pv"}
{"type": "explanation", "instruction": "User List all secrets in my cluster.\n Assistant Fetching list of secrets.\n User Thanks.", "output": "bash\n kubectl get secrets"}
{"type": "explanation", "instruction": "User Show me all configmaps in every namespace.\n Assistant Listing configmaps across all namespaces.\n User Good.", "output": "bash\n kubectl get configmaps -A"}
{"type": "explanation", "instruction": "User Restart my daemonset rollout.\n Assistant Rolling out restart for daemonset my-daemonset.\n User Please do that.", "output": "bash\n kubectl rollout restart daemonset my-daemonset"}
{"type": "explanation", "instruction": "User Scale my daemonset.\n Assistant Scaling daemonset my-daemonset to 2 replicas.\n User Execute.", "output": "bash\n kubectl scale daemonset my-daemonset --replicas=2"}
{"type": "explanation", "instruction": "User Remove the daemonset from my cluster.\n Assistant Deleting daemonset my-daemonset.\n User Remove it.", "output": "bash\n kubectl delete daemonset my-daemonset"}
{"type": "explanation", "instruction": "User List all custom resource definitions.\n Assistant Retrieving all CRDs in the cluster.\n User Thanks.", "output": "bash\n kubectl get crd"}
{"type": "explanation", "instruction": "User I want details about a specific CRD.\n Assistant Describing CRD my-crd.\n User Go ahead.", "output": "bash\n kubectl describe crd my-crd"}
{"type": "explanation", "instruction": "User What resource quotas are set in my namespace?\n Assistant Listing resource quotas in my-namespace.\n User Show me.", "output": "bash\n kubectl get resourcequotas -n my-namespace"}
{"type": "explanation", "instruction": "User I need to modify a resource quota.\n Assistant Editing resource quota my-quota in my-namespace.\n User Proceed.", "output": "bash\n kubectl edit resourcequota my-quota -n my-namespace"}
{"type": "explanation", "instruction": "User Apply a secret manifest file.\n Assistant Applying secret configuration from secret.yaml.\n User Do that.", "output": "bash\n kubectl apply -f secret.yaml"}
{"type": "explanation", "instruction": "User Now apply my configmap manifest.\n Assistant Applying configmap from configmap.yaml.\n User Go ahead.", "output": "bash\n kubectl apply -f configmap.yaml"}
{"type": "explanation", "instruction": "User Show me all nodes with their labels.\n Assistant Displaying nodes along with their labels.\n User Perfect.", "output": "bash\n kubectl get nodes --show-labels"}
{"type": "explanation", "instruction": "User I want to add a tier label to my service.\n Assistant Labeling service my-service with tier=backend.\n User Thanks.", "output": "bash\n kubectl label service my-service tier=backend"}
{"type": "explanation", "instruction": "User Please annotate my service with an owner.\n Assistant Annotating service my-service with owner=teamA.\n User Go ahead.", "output": "bash\n kubectl annotate service my-service owner=teamA"}
{"type": "explanation", "instruction": "User Describe the replicaset details.\n Assistant Fetching detailed information for replicaset my-replicaset.\n User Show me.", "output": "bash\n kubectl describe rs my-replicaset"}
{"type": "explanation", "instruction": "User List pods created by a replicaset.\n Assistant Getting pods with label app=my-app.\n User Thats fine.", "output": "bash\n kubectl get pods -l app=my-app"}
{"type": "explanation", "instruction": "User Scale my statefulset, please.\n Assistant Scaling statefulset my-statefulset to 3 replicas.\n User Execute.", "output": "bash\n kubectl scale statefulset my-statefulset --replicas=3"}
{"type": "explanation", "instruction": "User Edit my statefulset.\n Assistant Opening the editor for statefulset my-statefulset.\n User Please open.", "output": "bash\n kubectl edit statefulset my-statefulset"}
{"type": "explanation", "instruction": "User Describe my statefulset for details.\n Assistant Displaying detailed info for statefulset my-statefulset.\n User Thanks.", "output": "bash\n kubectl describe statefulset my-statefulset"}
{"type": "explanation", "instruction": "User Update the image in my statefulset.\n Assistant Setting new image myimage1.1 for container my-container in my-statefulset.\n User Go ahead.", "output": "bash\n kubectl set image statefulset/my-statefulset my-container=myimage1.1"}
{"type": "explanation", "instruction": "User Check the rollout status of my statefulset.\n Assistant Monitoring statefulset my-statefulset.\n User Waiting.", "output": "bash\n kubectl rollout status statefulset/my-statefulset"}
{"type": "explanation", "instruction": "User Create a new cronjob for periodic tasks.\n Assistant Creating cronjob my-cronjob with a schedule of every 5 minutes.\n User Set it up.", "output": "bash\n kubectl create cronjob my-cronjob --image=busybox --schedule=/5     -- /bin/sh -c date"}
{"type": "explanation", "instruction": "User List all cronjobs in the cluster.\n Assistant Displaying all cronjobs.\n User Show me.", "output": "bash\n kubectl get cronjobs"}
{"type": "explanation", "instruction": "User Describe the cronjob in detail.\n Assistant Describing cronjob my-cronjob.\n User Please provide details.", "output": "bash\n kubectl describe cronjob my-cronjob"}
{"type": "explanation", "instruction": "User Delete the cronjob after its no longer needed.\n Assistant Deleting cronjob my-cronjob.\n User Remove it.", "output": "bash\n kubectl delete cronjob my-cronjob"}
{"type": "explanation", "instruction": "User Create a job that runs once.\n Assistant Creating job my-job with the busybox image.\n User Execute the job.", "output": "bash\n kubectl create job my-job --image=busybox -- /bin/sh -c echo Hello"}
{"type": "explanation", "instruction": "User List all jobs.\n Assistant Fetching the list of jobs.\n User Show me.", "output": "bash\n kubectl get jobs"}
{"type": "explanation", "instruction": "User Describe my job.\n Assistant Providing details for job my-job.\n User Thanks.", "output": "bash\n kubectl describe job my-job"}
{"type": "explanation", "instruction": "User Remove the job from my cluster.\n Assistant Deleting job my-job.\n User Please delete it.", "output": "bash\n kubectl delete job my-job"}
{"type": "explanation", "instruction": "User What API resources are available?\n Assistant Listing all API resources.\n User Thats useful.", "output": "bash\n kubectl api-resources"}
{"type": "explanation", "instruction": "User List all available API versions.\n Assistant Here are the API versions.\n User Thanks.", "output": "bash\n kubectl api-versions"}
{"type": "explanation", "instruction": "User Filter the API versions for v1 resources.\n Assistant Searching API versions for v1.\n User Please show.", "output": "bash\n kubectl api-versions  grep v1"}
{"type": "explanation", "instruction": "User Validate my deployment manifest without applying.\n Assistant Running a client-side dry run on deployment.yaml.\n User Great.", "output": "bash\n kubectl apply -f deployment.yaml --dry-run=client"}
{"type": "explanation", "instruction": "User Show me the differences in my deployment configuration.\n Assistant Displaying diff for deployment.yaml.\n User Thats helpful.", "output": "bash\n kubectl diff -f deployment.yaml"}
{"type": "explanation", "instruction": "User Wait for my pod to become ready.\n Assistant Waiting until pod my-pod meets the ready condition (timeout 60s).\n User Waiting...", "output": "bash\n kubectl wait --for=condition=ready pod/my-pod --timeout=60s"}
{"type": "explanation", "instruction": "User Wait until my deployment is available.\n Assistant Waiting for my-deployment to become available (timeout 120s).\n User Thanks.", "output": "bash\n kubectl wait --for=condition=available deployment/my-deployment --timeout=120s"}
{"type": "explanation", "instruction": "User I need to port-forward a service.\n Assistant Forwarding local port 8080 to port 80 of service my-service.\n User Set it up.", "output": "bash\n kubectl port-forward service/my-service 808080"}
{"type": "explanation", "instruction": "User Expose a pod externally.\n Assistant Exposing pod my-pod on port 80 and targeting container port 8080.\n User Do that.", "output": "bash\n kubectl expose pod my-pod --port=80 --target-port=8080"}
{"type": "explanation", "instruction": "User List all ingress resources in my namespace.\n Assistant Retrieving ingresses in namespace my-namespace.\n User Show me.", "output": "bash\n kubectl get ingress -n my-namespace"}
{"type": "explanation", "instruction": "User Describe my ingress details.\n Assistant Describing ingress my-ingress in my-namespace.\n User Thanks.", "output": "bash\n kubectl describe ingress my-ingress -n my-namespace"}
{"type": "explanation", "instruction": "User Create an ingress from a manifest.\n Assistant Applying ingress configuration from ingress.yaml.\n User Go ahead.", "output": "bash\n kubectl apply -f ingress.yaml"}
{"type": "explanation", "instruction": "User Delete an ingress in my namespace.\n Assistant Removing ingress my-ingress from my-namespace.\n User Delete it.", "output": "bash\n kubectl delete ingress my-ingress -n my-namespace"}
{"type": "explanation", "instruction": "User Patch my deployment to change replica count using a strategic merge.\n Assistant Patching my-deployment to set replicas to 2.\n User Apply patch.", "output": "bash\n kubectl patch deployment my-deployment -p specreplicas2"}
{"type": "explanation", "instruction": "User Add an annotation to my replicaset.\n Assistant Annotating replicaset my-replicaset with team=devops.\n User Do it.", "output": "bash\n kubectl annotate rs my-replicaset team=devops"}
{"type": "explanation", "instruction": "User Update the selector on my service.\n Assistant Patching service my-service to use selector app=my-app.\n User Please update.", "output": "bash\n kubectl patch service my-service -p spec selector app my-app"}
{"type": "explanation", "instruction": "User List the endpoints for my service.\n Assistant Displaying endpoints for my-service.\n User Show endpoints.", "output": "bash\n kubectl get endpoints my-service"}
{"type": "explanation", "instruction": "User Describe the endpoints of my service.\n Assistant Providing detailed information for endpoints of my-service.\n User Thanks.", "output": "bash\n kubectl describe endpoints my-service"}
{"type": "explanation", "instruction": "User Create a new pod using the nginx image.\n Assistant Running pod test-pod with the nginx image.\n User Start it.", "output": "bash\n kubectl run test-pod --image=nginx"}
{"type": "explanation", "instruction": "User Force delete a pod if it is stuck.\n Assistant Force deleting pod test-pod immediately.\n User Delete now.", "output": "bash\n kubectl delete pod test-pod --grace-period=0 --force"}
{"type": "explanation", "instruction": "User I need to evict a misbehaving pod.\n Assistant Evicting pod my-pod from its node.\n User Evict it.", "output": "bash\n kubectl evict pod my-pod"}
{"type": "explanation", "instruction": "User Add a label to all pods in the cluster.\n Assistant Labeling every pod with env=production.\n User Apply label.", "output": "bash\n kubectl label pods --all env=production"}
{"type": "explanation", "instruction": "User Remove a specific label from my pod.\n Assistant Removing the env label from my-pod.\n User Do that.", "output": "bash\n kubectl label pod my-pod env-"}
{"type": "explanation", "instruction": "User Show pod logs with timestamps.\n Assistant Displaying logs for my-pod with time stamps.\n User Show logs.", "output": "bash\n kubectl logs my-pod --timestamps"}
{"type": "explanation", "instruction": "User Run a pod with a restart policy of Never.\n Assistant Creating a one-time pod one-time using alpine.\n User Execute command.", "output": "bash\n kubectl run one-time --image=alpine --restart=Never -- /bin/sh -c echo Hello"}
{"type": "explanation", "instruction": "User I want to see a specific revisions history for my deployment.\n Assistant Showing rollout history for my-deployment at revision 2.\n User Provide details.", "output": "bash\n kubectl rollout history deployment/my-deployment --revision=2"}
{"type": "explanation", "instruction": "User Rollback my deployment to revision 1.\n Assistant Undoing rollout for my-deployment to revision 1.\n User Proceed.", "output": "bash\n kubectl rollout undo deployment/my-deployment --to-revision=1"}
{"type": "explanation", "instruction": "User Label the default service account.\n Assistant Labeling the default serviceaccount with team=backend.\n User Apply label.", "output": "bash\n kubectl label serviceaccount default team=backend"}
{"type": "explanation", "instruction": "User Annotate the default service account.\n Assistant Adding description Default SA to serviceaccount default.\n User Do it.", "output": "bash\n kubectl annotate serviceaccount default description=Default SA"}
{"type": "explanation", "instruction": "User List all secrets in my-namespace.\n Assistant Fetching secrets from namespace my-namespace.\n User Show them.", "output": "bash\n kubectl get secrets -n my-namespace"}
{"type": "explanation", "instruction": "User Provide details for a specific secret.\n Assistant Describing secret my-secret in namespace my-namespace.\n User Thanks.", "output": "bash\n kubectl describe secret my-secret -n my-namespace"}
{"type": "explanation", "instruction": "User Create a secret from a literal value.\n Assistant Creating secret token-secret with token=abc123.\n User Please create it.", "output": "bash\n kubectl create secret generic token-secret --from-literal=token=abc123"}
{"type": "explanation", "instruction": "User Set an environment variable for my deployment.\n Assistant Adding ENV=production to my-deployment.\n User Update it.", "output": "bash\n kubectl set env deployment/my-deployment ENV=production"}
{"type": "explanation", "instruction": "User Remove an environment variable from my deployment.\n Assistant Unsetting ENV variable from my-deployment.\n User Remove it.", "output": "bash\n kubectl set env deployment/my-deployment ENV-"}
{"type": "explanation", "instruction": "User List container images used by my pod.\n Assistant Fetching image list from my-pod.\n User Show images.", "output": "bash\n kubectl get pod my-pod -o jsonpath=.spec.containers.image"}
{"type": "explanation", "instruction": "User Retrieve the IP address of my pod.\n Assistant Displaying pod IP for my-pod.\n User Thanks.", "output": "bash\n kubectl get pod my-pod -o jsonpath=.status.podIP"}
{"type": "explanation", "instruction": "User Get the CPU and memory usage for a node.\n Assistant Displaying resource usage for node node-1.\n User Show me.", "output": "bash\n kubectl top node node-1"}
{"type": "explanation", "instruction": "User What is the resource usage of my pod?\n Assistant Showing resource usage for my-pod.\n User Provide details.", "output": "bash\n kubectl top pod my-pod"}
{"type": "explanation", "instruction": "User Describe my statefulset in detail.\n Assistant Providing a detailed description for my-statefulset.\n User Thanks.", "output": "bash\n kubectl describe statefulset my-statefulset"}
{"type": "explanation", "instruction": "User Add a new environment variable to my deployment.\n Assistant Updating my-deployment with NEW_VAR=value.\n User Update it.", "output": "bash\n kubectl set env deployment/my-deployment NEW_VAR=value"}
{"type": "explanation", "instruction": "User List every resource in my namespace.\n Assistant Fetching all resources in my-namespace.\n User List them.", "output": "bash\n kubectl get all -n my-namespace"}
{"type": "explanation", "instruction": "User Show me all resource types available in the cluster.\n Assistant Listing all API resource types.\n User Thanks.", "output": "bash\n kubectl api-resources"}
{"type": "explanation", "instruction": "User Convert my deployment manifest to JSON.\n Assistant Converting deployment.yaml to JSON using output version v1.\n User Please convert.", "output": "bash\n kubectl convert -f deployment.yaml --output-version=v1"}
{"type": "explanation", "instruction": "User I need help with the apply command.\n Assistant Displaying help information for kubectl apply.\n User Show help.", "output": "bash\n kubectl apply --help"}
{"type": "explanation", "instruction": "User Show me help for the get command.\n Assistant Here is the help for kubectl get.\n User Thanks.", "output": "bash\n kubectl get --help"}
{"type": "explanation", "instruction": "User List pods with specific custom columns.\n Assistant Displaying pods with columns for name and status.\n User Show output.", "output": "bash\n kubectl get pods -o=custom-columns=NAME.metadata.name,STATUS.status.phase"}
{"type": "explanation", "instruction": "User I want to watch the pods in my namespace.\n Assistant Watching pods in my-namespace.\n User Start watch.", "output": "bash\n kubectl get pods -n my-namespace --watch"}
{"type": "explanation", "instruction": "User Provide the YAML output for a service account.\n Assistant Fetching YAML for serviceaccount my-sa.\n User Thanks.", "output": "bash\n kubectl get serviceaccount my-sa -o yaml"}
{"type": "explanation", "instruction": "User Create a configmap using literal values.\n Assistant Creating configmap literal-config with key1=value1.\n User Please create.", "output": "bash\n kubectl create configmap literal-config --from-literal=key1=value1"}
{"type": "explanation", "instruction": "User Delete the literal configmap.\n Assistant Deleting configmap literal-config.\n User Remove it.", "output": "bash\n kubectl delete configmap literal-config"}
{"type": "explanation", "instruction": "User Patch my configmap to update a key.\n Assistant Updating my-config to set key=new-value.\n User Apply patch.", "output": "bash\n kubectl patch configmap my-config -p datakeynew-value"}
{"type": "explanation", "instruction": "User I need to edit a pod interactively.\n Assistant Opening editor for pod my-pod.\n User Please open.", "output": "bash\n kubectl edit pod my-pod"}
{"type": "explanation", "instruction": "User Add a role label to a node.\n Assistant Labeling node node-3 with role=database.\n User Apply label.", "output": "bash\n kubectl label node node-3 role=database"}
{"type": "explanation", "instruction": "User Annotate node node-3 with a maintenance window.\n Assistant Annotating node node-3 with maintenance=2025-02-05.\n User Proceed.", "output": "bash\n kubectl annotate node node-3 maintenance=2025-02-05"}
{"type": "explanation", "instruction": "User Watch my deployment rollout status in real time.\n Assistant Monitoring rollout status for my-deployment.\n User Watching.", "output": "bash\n kubectl rollout status deployment/my-deployment --watch"}
{"type": "explanation", "instruction": "User Run a pod with elevated privileges.\n Assistant Running privileged-pod using busybox with privileged mode.\n User Start it.", "output": "bash\n kubectl run privileged-pod --image=busybox --privileged -it -- /bin/sh"}
{"type": "explanation", "instruction": "User Create a new namespace for my project.\n Assistant Creating namespace new-namespace.\n User Please create.", "output": "bash\n kubectl create namespace new-namespace"}
{"type": "explanation", "instruction": "User Change my current context to use the new namespace.\n Assistant Setting current contexts namespace to new-namespace.\n User Switch it.", "output": "bash\n kubectl config set-context --current --namespace=new-namespace"}
{"type": "explanation", "instruction": "User Force delete a namespace immediately.\n Assistant Deleting namespace new-namespace with force and zero grace period.\n User Delete it.", "output": "bash\n kubectl delete namespace new-namespace --force --grace-period=0"}
{"type": "explanation", "instruction": "User List API resources for the apps group.\n Assistant Displaying API resources in the apps group.\n User Show them.", "output": "bash\n kubectl api-resources --api-group=apps"}
{"type": "explanation", "instruction": "User Get endpoints from all namespaces.\n Assistant Listing endpoints across the entire cluster.\n User List them.", "output": "bash\n kubectl get endpoints --all-namespaces"}
{"type": "explanation", "instruction": "User Describe a service in a different namespace.\n Assistant Describing service my-service in namespace another-namespace.\n User Provide details.", "output": "bash\n kubectl describe service my-service -n another-namespace"}
{"type": "explanation", "instruction": "User Patch my service to update its port settings.\n Assistant Changing service my-service port to 8080 with targetPort 80.\n User Patch it.", "output": "bash\n kubectl patch service my-service -p specportsport8080,targetPort80"}
{"type": "explanation", "instruction": "User Annotate my deployment with the latest git commit hash.\n Assistant Adding annotation gitCommit=abcdef1234 to my-deployment.\n User Annotate it.", "output": "bash\n kubectl annotate deployment my-deployment gitCommit=abcdef1234"}
{"type": "explanation", "instruction": "User Mark my deployment as stable with a label.\n Assistant Labeling my-deployment with status=stable (overwrite if exists).\n User Label it.", "output": "bash\n kubectl label deployment my-deployment status=stable --overwrite"}
{"type": "explanation", "instruction": "User Run a command in one of the pods of my deployment.\n Assistant Executing ls /app in a pod from my-deployment.\n User Run the command.", "output": "bash\n kubectl exec deployment/my-deployment -- ls /app"}
{"type": "explanation", "instruction": "User Get logs from the previous instance of my pod.\n Assistant Fetching previous logs for my-pod.\n User Retrieve logs.", "output": "bash\n kubectl logs my-pod --previous"}
{"type": "explanation", "instruction": "User Stream logs from the sidecar container in my pod.\n Assistant Following logs for container sidecar in my-pod.\n User Start streaming.", "output": "bash\n kubectl logs my-pod -c sidecar -f"}
{"type": "explanation", "instruction": "User Get the deployment status as raw JSON.\n Assistant Retrieving my-deployment in JSON format.\n User Show JSON.", "output": "bash\n kubectl get deployment my-deployment -o json"}
{"type": "explanation", "instruction": "User I need the secret details in YAML format.\n Assistant Fetching secret my-secret output as YAML.\n User Show YAML.", "output": "bash\n kubectl get secret my-secret -o yaml"}
{"type": "explanation", "instruction": "User Run a one-off command in a new pod and remove it after execution.\n Assistant Running temporary pod temp with alpine to echo a message.\n User Execute command.", "output": "bash\n kubectl run --rm -i temp --image=alpine -- /bin/sh -c echo One-off"}
{"type": "explanation", "instruction": "User Create a configmap from a file input.\n Assistant Creating configmap file-config from config.txt.\n User Create it.", "output": "bash\n kubectl create configmap file-config --from-file=config.txt"}
{"type": "explanation", "instruction": "User Delete the secret I no longer need.\n Assistant Deleting secret token-secret.\n User Remove it.", "output": "bash\n kubectl delete secret token-secret"}
{"type": "explanation", "instruction": "User List my custom resources in my-namespace.\n Assistant Retrieving custom resource myresource from my-namespace.\n User Show them.", "output": "bash\n kubectl get myresource -n my-namespace"}
{"type": "explanation", "instruction": "User Describe the CRD details of my custom resource.\n Assistant Providing a detailed description for CRD my-crd.\n User Thanks.", "output": "bash\n kubectl describe crd my-crd"}
{"type": "explanation", "instruction": "User Apply a new version of my deployment configuration.\n Assistant Updating deployment using new-deployment.yaml.\n User Please apply.", "output": "bash\n kubectl apply -f new-deployment.yaml"}
{"type": "explanation", "instruction": "User Pause the rollout of my deployment temporarily.\n Assistant Pausing rollout for my-deployment.\n User Pause it.", "output": "bash\n kubectl rollout pause deployment/my-deployment"}
{"type": "explanation", "instruction": "User Resume the paused rollout of my deployment.\n Assistant Resuming rollout for my-deployment.\n User Resume it.", "output": "bash\n kubectl rollout resume deployment/my-deployment"}
{"type": "explanation", "instruction": "User Show me resource usage for my pod again.\n Assistant Displaying current resource usage for my-pod.\n User Thanks.", "output": "bash\n kubectl top pod my-pod"}
{"type": "explanation", "instruction": "User List resource usage for all nodes in the cluster.\n Assistant Fetching top nodes by resource usage.\n User Show them.", "output": "bash\n kubectl top nodes"}
{"type": "explanation", "instruction": "User List pods along with the nodes they are running on.\n Assistant Displaying pods with associated node names.\n User Perfect.", "output": "bash\n kubectl get pods -o=custom-columns=POD.metadata.name,NODE.spec.nodeName"}
{"type": "explanation", "instruction": "User Execute a command to print environment variables in a specific container.\n Assistant Running printenv in container my-container of my-pod.\n User Execute command.", "output": "bash\n kubectl exec my-pod -c my-container -- printenv"}
{"type": "explanation", "instruction": "User Run a network troubleshooting pod interactively.\n Assistant Launching net-tool pod using busybox for network diagnostics.\n User Start it.", "output": "bash\n kubectl run net-tool --rm -it --image=busybox -- /bin/sh"}
{"type": "explanation", "instruction": "User Expose my deployment using NodePort.\n Assistant Exposing my-deployment as a NodePort service on port 80.\n User Set it up.", "output": "bash\n kubectl expose deployment my-deployment --type=NodePort --port=80"}
{"type": "explanation", "instruction": "User Update the image for my replicaset.\n Assistant Setting new image myimage2.0 for replicaset my-replicaset.\n User Update it.", "output": "bash\n kubectl set image rs/my-replicaset my-container=myimage2.0"}
{"type": "explanation", "instruction": "User List all pods sorted by their restart count.\n Assistant Displaying pods sorted by .status.containerStatuses0.restartCount.\n User List them.", "output": "bash\n kubectl get pods --sort-by=.status.containerStatuses0.restartCount"}
{"type": "explanation", "instruction": "User Delete my replicaset from the cluster.\n Assistant Deleting replicaset my-replicaset.\n User Remove it.", "output": "bash\n kubectl delete rs my-replicaset"}
{"type": "explanation", "instruction": "User Create a job manually from an existing cronjob.\n Assistant Creating job my-manual-job from cronjob my-cronjob.\n User Please create.", "output": "bash\n kubectl create job --from=cronjob/my-cronjob my-manual-job"}
{"type": "explanation", "instruction": "User List pods with label filtering and wide output.\n Assistant Retrieving pods with label app=my-app in wide format.\n User Show results.", "output": "bash\n kubectl get pods -l app=my-app -o wide"}
{"type": "explanation", "instruction": "User Provide detailed information about my namespace.\n Assistant Describing namespace my-namespace.\n User Give details.", "output": "bash\n kubectl describe namespace my-namespace"}
{"type": "explanation", "instruction": "User Patch my namespace to add a production label.\n Assistant Updating namespace my-namespace with label env=production.\n User Patch it.", "output": "bash\n kubectl patch namespace my-namespace -p metadatalabelsenvproduction"}
{"type": "explanation", "instruction": "User Show logs for a container that failed in my pod.\n Assistant Retrieving logs for container failed-container in my-pod.\n User Fetch logs.", "output": "bash\n kubectl logs my-pod -c failed-container"}
{"type": "explanation", "instruction": "User List deployments sorted by creation timestamp.\n Assistant Sorting deployments based on creation time.\n User List them.", "output": "bash\n kubectl get deployments --sort-by=.metadata.creationTimestamp"}
{"type": "explanation", "instruction": "User I want to modify a service interactively.\n Assistant Opening editor for service my-service.\n User Please edit.", "output": "bash\n kubectl edit service my-service"}
{"type": "explanation", "instruction": "User Run a pod with a privileged container using an override.\n Assistant Launching admin-pod with alpine in privileged mode using an override.\n User Execute command.", "output": "bash\n kubectl run admin-pod --image=alpine --overrides=spec containers name admin, image alpine, securityContext privileged true -it --rm -- /bin/sh"}
{"type": "explanation", "instruction": "User Annotate my pod with a checksum value.\n Assistant Adding annotation checksum=12345abcde to my-pod.\n User Annotate it.", "output": "bash\n kubectl annotate pod my-pod checksum=12345abcde"}
{"type": "explanation", "instruction": "User Create a configmap that includes multiple files from a directory.\n Assistant Creating configmap multi-config from directory dir/.\n User Create it.", "output": "bash\n kubectl create configmap multi-config --from-file=dir/"}
{"type": "explanation", "instruction": "User Delete all pods that match a certain label.\n Assistant Deleting pods with label app=my-app.\n User Delete them.", "output": "bash\n kubectl delete pods -l app=my-app"}
{"type": "explanation", "instruction": "User Force delete a node from the cluster.\n Assistant Forcibly deleting node node-5.\n User Delete it now.", "output": "bash\n kubectl delete node node-5 --force"}
{"type": "explanation", "instruction": "User Set resource requests for my deployment.\n Assistant Updating my-deployment with requests cpu=100m and memory=256Mi.\n User Update it.", "output": "bash\n kubectl set resources deployment my-deployment --requests=cpu=100m,memory=256Mi"}
{"type": "explanation", "instruction": "User Remove resource limits from my deployment.\n Assistant Unsetting limits on my-deployment.\n User Remove limits.", "output": "bash\n kubectl set resources deployment my-deployment --limits="}
{"type": "explanation", "instruction": "User Run a pod with a custom command.\n Assistant Running custom-pod using ubuntu and executing a custom command.\n User Execute it.", "output": "bash\n kubectl run custom-pod --image=ubuntu -- /bin/bash -c echo Custom Command"}
{"type": "explanation", "instruction": "User I need detailed information about my job.\n Assistant Describing job my-job for full details.\n User Show me.", "output": "bash\n kubectl describe job my-job"}
{"type": "explanation", "instruction": "User Annotate my namespace with the owner information.\n Assistant Adding annotation owner=teamB to my-namespace.\n User Annotate it.", "output": "bash\n kubectl annotate namespace my-namespace owner=teamB"}
{"type": "explanation", "instruction": "User Label my pod with a version, overwriting if necessary.\n Assistant Labeling my-pod with version=1.0.\n User Apply label.", "output": "bash\n kubectl label pod my-pod version=1.0 --overwrite"}
{"type": "explanation", "instruction": "User Patch my service account to include an image pull secret.\n Assistant Patching the default serviceaccount to add my-registry-key.\n User Patch it.", "output": "bash\n kubectl patch serviceaccount default -p imagePullSecrets name my-registry-key"}
{"type": "explanation", "instruction": "User Get logs from my container with timestamps and limit to 100 lines.\n Assistant Displaying the last 100 lines of logs with timestamps for container my-container in my-pod.\n User Show logs.", "output": "bash\n kubectl logs my-pod -c my-container --timestamps --tail=100"}
{"type": "explanation", "instruction": "User Describe node node-1 and output in JSON format.\n Assistant Fetching node node-1 details in JSON.\n User Show JSON.", "output": "bash\n kubectl get node node-1 -o json"}
{"type": "explanation", "instruction": "User Set a node selector for my deployment.\n Assistant Patching my-deployment to add nodeSelector disktype=ssd.\n User Update it.", "output": "bash\n kubectl patch deployment my-deployment -p spec template spec nodeSelector disktype ssd"}
{"type": "explanation", "instruction": "User Annotate my statefulset with a version number.\n Assistant Adding annotation version=2.1 to my-statefulset.\n User Annotate it.", "output": "bash\n kubectl annotate statefulset my-statefulset version=2.1"}
{"type": "explanation", "instruction": "User Label my cronjob for easier identification.\n Assistant Labeling my-cronjob with schedule=frequent.\n User Label it.", "output": "bash\n kubectl label cronjob my-cronjob schedule=frequent"}
{"type": "explanation", "instruction": "User Create a secret using a file but override the key name.\n Assistant Creating secret file-secret using customKey from config.txt.\n User Create it.", "output": "bash\n kubectl create secret generic file-secret --from-file=customKey=config.txt"}
{"type": "explanation", "instruction": "User Apply a patch file to update my configmap.\n Assistant Patching my-config using the file config-patch.yaml.\n User Apply patch.", "output": "bash\n kubectl patch configmap my-config --patch-file=config-patch.yaml"}
{"type": "explanation", "instruction": "User I need to open an interactive shell inside my pod.\n Assistant Executing an interactive shell in my-pod.\n User Open shell.", "output": "bash\n kubectl exec -it my-pod -- /bin/sh"}
{"type": "explanation", "instruction": "User Describe the replicaset in full detail.\n Assistant Providing a detailed description of replicaset my-replicaset.\n User Show details.", "output": "bash\n kubectl describe replicaset my-replicaset"}
{"type": "explanation", "instruction": "User List only the running pods using a field selector.\n Assistant Fetching pods where status.phase equals Running.\n User List them.", "output": "bash\n kubectl get pods --field-selector=status.phase=Running"}
{"type": "explanation", "instruction": "User List all services with a specific label.\n Assistant Retrieving services labeled tier=backend.\n User Show me the list.", "output": "bash\n kubectl get services -l tier=backend"}
{"type": "explanation", "instruction": "User Restart my deployment with a specific timeout.\n Assistant Rolling out restart for my-deployment with a timeout of 60s.\n User Restart it.", "output": "bash\n kubectl rollout restart deployment/my-deployment --timeout=60s"}
{"type": "explanation", "instruction": "User Show events related to a specific node.\n Assistant Fetching events for node node-1.\n User Provide events.", "output": "bash\n kubectl get events --field-selector=involvedObject.kind=Node,involvedObject.name=node-1"}
{"type": "explanation", "instruction": "User List pods with their readiness status using custom columns.\n Assistant Displaying pod name and readiness state.\n User Show output.", "output": "bash\n kubectl get pods -o=custom-columns=NAME.metadata.name,READY.status.containerStatuses.ready"}
{"type": "explanation", "instruction": "User Patch my deployment to add an environment variable for debugging.\n Assistant Updating my-deployment to include DEBUG=true in container my-container.\n User Patch it.", "output": "bash\n kubectl patch deployment my-deployment -p spec template spec containers name my-container, env name DEBUG, value true"}
{"type": "explanation", "instruction": "User Delete all resources that are marked temporary.\n Assistant Removing all resources with label temporary=true.\n User Delete them.", "output": "bash\n kubectl delete all -l temporary=true"}
{"type": "explanation", "instruction": "User I want to see the logs.\n Assistant Which pods logs would you like to see?\n User The payment-pod.", "output": "bash\n kubectl logs payment-pod"}
{"type": "explanation", "instruction": "User Scale a deployment for me.\n Assistant Sure, which deployment do you want to scale?\n User analytics-service.\n Assistant To how many replicas?\n User 4.", "output": "bash\n kubectl scale deployment analytics-service --replicas=4"}
{"type": "explanation", "instruction": "User Delete a pod.\n Assistant Can you specify the name of the pod?\n User Yes, temp-pod.", "output": "bash\n kubectl delete pod temp-pod"}
{"type": "explanation", "instruction": "User Expose my app.\n Assistant Could you provide the name of the deployment?\n User web-app.\n Assistant What port would you like to expose?\n User Port 80.", "output": "bash\n kubectl expose deployment web-app --port=80"}
{"type": "explanation", "instruction": "User Get the configmap.\n Assistant Please specify the name of the configmap.\n User app-config.", "output": "bash\n kubectl get configmap app-config"}
{"type": "explanation", "instruction": "User I need to run a command in a pod.\n Assistant Whats the name of the pod?\n User utility-pod.\n Assistant What command do you want to run?\n User ls /data.", "output": "bash\n kubectl exec utility-pod -- ls /data"}
{"type": "explanation", "instruction": "User Show me the services.\n Assistant Do you want to see services in a specific namespace?\n User Yes, in prod.", "output": "bash\n kubectl get services -n prod"}
{"type": "explanation", "instruction": "User Describe the deployment.\n Assistant Could you specify the name of the deployment?\n User auth-service.", "output": "bash\n kubectl describe deployment auth-service"}
{"type": "explanation", "instruction": "User Roll out restart.\n Assistant Which deployment would you like to restart?\n User cache.", "output": "bash\n kubectl rollout restart deployment cache"}
{"type": "explanation", "instruction": "User Delete all pods.\n Assistant Do you want to delete all pods in a specific namespace?\n User Yes, in test.", "output": "bash\n kubectl delete pods --all -n test"}
{"type": "explanation", "instruction": "User Get logs.\n Assistant Which pods logs do you want to retrieve?\n User api-pod.\n Assistant Do you want to follow the logs?\n User Yes.", "output": "bash\n kubectl logs api-pod -f"}
{"type": "explanation", "instruction": "User Create a configmap.\n Assistant What name should the configmap have?\n User settings.\n Assistant Do you want to create it from a file or literal values?\n User From file settings.conf.", "output": "bash\n kubectl create configmap settings --from-file=settings.conf"}
{"type": "explanation", "instruction": "User Show events.\n Assistant Do you want to see events in a specific namespace?\n User No, all namespaces.", "output": "bash\n kubectl get events --all-namespaces"}
{"type": "explanation", "instruction": "User Apply configurations.\n Assistant Which file or directory contains the configurations?\n User The k8s-manifests directory.", "output": "bash\n kubectl apply -f k8s-manifests/"}
{"type": "explanation", "instruction": "User Whats using my node resources?\n Assistant Do you want to see the resource usage of all nodes?\n User Yes.", "output": "bash\n kubectl top nodes"}
{"type": "explanation", "instruction": "User Get pods with label.\n Assistant What label selector should be used?\n User app=web.", "output": "bash\n kubectl get pods -l app=web"}
{"type": "explanation", "instruction": "User Delete a namespace.\n Assistant Which namespace would you like to delete?\n User old-env.", "output": "bash\n kubectl delete namespace old-env"}
{"type": "explanation", "instruction": "User Port forward.\n Assistant Which pod do you want to port-forward?\n User db-pod.\n Assistant Which ports should be forwarded?\n User From local port 5432 to container port 5432.", "output": "bash\n kubectl port-forward db-pod 54325432"}
{"type": "explanation", "instruction": "User Run a command in a pod.\n Assistant Whats the name of the pod?\n User debug-pod.\n Assistant What command do you want to run?\n User /bin/bash.", "output": "bash\n kubectl exec -it debug-pod -- /bin/bash"}
{"type": "explanation", "instruction": "User Show me the deployments.\n Assistant Do you want to see deployments in a specific namespace?\n User Yes, in development.", "output": "bash\n kubectl get deployments -n development"}
{"type": "explanation", "instruction": "User Get service details.\n Assistant Which service do you want to describe?\n User frontend-service.", "output": "bash\n kubectl describe service frontend-service"}
{"type": "explanation", "instruction": "User Explain resource.\n Assistant Which resource do you want to explain?\n User persistentvolumeclaim.", "output": "bash\n kubectl explain persistentvolumeclaim"}
{"type": "explanation", "instruction": "User Create a secret.\n Assistant What is the name of the secret?\n User db-credentials.\n Assistant Do you want to create it from literal values or a file?\n User From literals user=admin and password=pass123.", "output": "bash\n kubectl create secret generic db-credentials --from-literal=user=admin --from-literal=password=pass123"}
{"type": "explanation", "instruction": "User Get nodes.\n Assistant Do you want detailed information?\n User Yes, describe them.", "output": "bash\n kubectl describe nodes"}
{"type": "explanation", "instruction": "User Delete pods with label.\n Assistant What label should be used for deletion?\n User env=dev.", "output": "bash\n kubectl delete pods -l env=dev"}
{"type": "explanation", "instruction": "User Scale statefulset.\n Assistant Which statefulset do you want to scale?\n User zookeeper.\n Assistant To how many replicas?\n User 5.", "output": "bash\n kubectl scale statefulset zookeeper --replicas=5"}
{"type": "explanation", "instruction": "User Patch a deployment.\n Assistant Which deployment do you want to patch?\n User api-deployment.\n Assistant Which patch file should be used?\n User api-patch.yaml.", "output": "bash\n kubectl patch deployment api-deployment --patch-file=api-patch.yaml"}
{"type": "explanation", "instruction": "User Get CRDs.\n Assistant Do you want to list all Custom Resource Definitions?\n User Yes.", "output": "bash\n kubectl get crds"}
{"type": "explanation", "instruction": "User Create a namespace.\n Assistant What should be the name of the namespace?\n User integration-test.", "output": "bash\n kubectl create namespace integration-test"}
{"type": "explanation", "instruction": "User Get the current context.\n Assistant Do you want to display the current Kubernetes context?\n User Yes.", "output": "bash\n kubectl config current-context"}
{"type": "explanation", "instruction": "User Set context.\n Assistant Which context do you want to switch to?\n User staging.", "output": "bash\n kubectl config use-context staging"}
{"type": "explanation", "instruction": "User Run a busybox pod.\n Assistant Do you want to run it interactively?\n User Yes.\n Assistant What name should the pod have?\n User busybox-test.", "output": "bash\n kubectl run busybox-test --image=busybox -it -- /bin/sh"}
{"type": "explanation", "instruction": "User Delete all resources.\n Assistant Are you sure you want to delete all resources in the cluster?\n User No, just in dev namespace.", "output": "bash\n kubectl delete all --all -n dev"}
{"type": "explanation", "instruction": "User Get events.\n Assistant Do you want to see recent events?\n User Yes, from the last hour.", "output": "bash\n kubectl get events --since=1h"}
{"type": "explanation", "instruction": "User Explain ingress.\n Assistant Do you want to explain the ingress resource?\n User Yes.", "output": "bash\n kubectl explain ingress"}
{"type": "explanation", "instruction": "User Save pod logs.\n Assistant Which pods logs do you want to save?\n User web-pod.\n Assistant What is the filename?\n User web-pod.log.", "output": "bash\n kubectl logs web-pod > web-pod.log"}
{"type": "explanation", "instruction": "User View pod CPU usage.\n Assistant Do you want to see CPU usage for all pods?\n User Yes.", "output": "bash\n kubectl top pods"}
{"type": "explanation", "instruction": "User Describe node.\n Assistant Which node would you like to describe?\n User node-worker-3.", "output": "bash\n kubectl describe node node-worker-3"}
{"type": "explanation", "instruction": "User Get service accounts.\n Assistant In which namespace?\n User kube-system.", "output": "bash\n kubectl get serviceaccounts -n kube-system"}
{"type": "explanation", "instruction": "User Delete job.\n Assistant What is the name of the job?\n User data-import.", "output": "bash\n kubectl delete job data-import"}
{"type": "explanation", "instruction": "User Create persistent volume claim.\n Assistant What is the name of the PVC?\n User data-pvc.\n Assistant Do you have a YAML file or specifications?\n User I have pvc.yaml.", "output": "bash\n kubectl apply -f pvc.yaml"}
{"type": "explanation", "instruction": "User Get pods in wide format.\n Assistant In which namespace?\n User production.", "output": "bash\n kubectl get pods -n production -o wide"}
{"type": "explanation", "instruction": "User Label a node.\n Assistant Which node do you want to label?\n User node-2.\n Assistant What label do you want to apply?\n User disk=ssd.", "output": "bash\n kubectl label nodes node-2 disk=ssd"}
{"type": "explanation", "instruction": "User Annotate a pod.\n Assistant Which pod?\n User app-pod.\n Assistant What annotation?\n User description=Main application pod.", "output": "bash\n kubectl annotate pod app-pod description=Main application pod"}
{"type": "explanation", "instruction": "User Get cluster info.\n Assistant Do you want to retrieve cluster information?\n User Yes.", "output": "bash\n kubectl cluster-info"}
{"type": "explanation", "instruction": "User Delete deployment.\n Assistant Which deployment should be deleted?\n User old-service.", "output": "bash\n kubectl delete deployment old-service"}
{"type": "explanation", "instruction": "User Get volume attachments.\n Assistant Do you want to list all volume attachments?\n User Yes.", "output": "bash\n kubectl get volumeattachments"}
{"type": "explanation", "instruction": "User Uncordon node.\n Assistant Which node do you want to uncordon?\n User node-4.", "output": "bash\n kubectl uncordon node-4"}
{"type": "explanation", "instruction": "User Get pod logs.\n Assistant Which pod?\n User scheduler-pod.\n Assistant Do you want previous logs?\n User Yes.", "output": "bash\n kubectl logs scheduler-pod --previous"}
{"type": "explanation", "instruction": "User Show me logs.\n Assistant Which pods logs would you like to see?\n User For web-pod.\n Assistant Here are the logs for web-pod.", "output": "bash\n kubectl logs web-pod"}
{"type": "explanation", "instruction": "User Get the configmap.\n Assistant Could you specify the name of the configmap?\n User Its app-settings.\n Assistant Fetching app-settings configmap.", "output": "bash\n kubectl get configmap app-settings"}
{"type": "explanation", "instruction": "User Delete a pod.\n Assistant Please provide the name of the pod you wish to delete.\n User Delete test-pod.\n Assistant Deleting test-pod.", "output": "bash\n kubectl delete pod test-pod"}
{"type": "explanation", "instruction": "User Expose my app.\n Assistant Which deployment should be exposed?\n User The backend.\n Assistant On which port would you like to expose it?\n User Port 8080.\n Assistant Exposing deployment backend on port 8080.", "output": "bash\n kubectl expose deployment backend --port=8080"}
{"type": "explanation", "instruction": "User Get the configmap.\n Assistant Which configmap do you want to retrieve?\n User database-config.\n Assistant Retrieving database-config.", "output": "bash\n kubectl get configmap database-config"}
{"type": "explanation", "instruction": "User I need to run a command in a pod.\n Assistant Could you specify the pods name?\n User toolbox.\n Assistant What command would you like to run?\n User df -h.\n Assistant Running df -h in toolbox.", "output": "bash\n kubectl exec toolbox -- df -h"}
{"type": "explanation", "instruction": "User Show me the services.\n Assistant Do you want to list services in all namespaces or a specific one?\n User In development.\n Assistant Listing services in development namespace.", "output": "bash\n kubectl get services -n development"}
{"type": "explanation", "instruction": "User Describe the deployment.\n Assistant Please provide the deployment name.\n User frontend.\n Assistant Describing deployment frontend.", "output": "bash\n kubectl describe deployment frontend"}
{"type": "explanation", "instruction": "User Roll out restart.\n Assistant Which deployment would you like to restart?\n User api-server.\n Assistant Restarting deployment api-server.", "output": "bash\n kubectl rollout restart deployment api-server"}
{"type": "explanation", "instruction": "User Delete all pods.\n Assistant Do you want to delete all pods in the current namespace or a specific one?\n User All pods in staging.\n Assistant Deleting all pods in staging namespace.", "output": "bash\n kubectl delete pods --all -n staging"}
{"type": "explanation", "instruction": "User Get logs.\n Assistant Which pods logs do you want to retrieve?\n User scheduler-pod.\n Assistant Do you need logs from a specific container?\n User No, just the pod logs.\n Assistant Here are the logs for scheduler-pod.", "output": "bash\n kubectl logs scheduler-pod"}
{"type": "explanation", "instruction": "User Create a configmap.\n Assistant What should be the name of the configmap?\n User app-config.\n Assistant Will it be from a file or literal values?\n User From file config.properties.\n Assistant Creating configmap app-config from config.properties.", "output": "bash\n kubectl create configmap app-config --from-file=config.properties"}
{"type": "explanation", "instruction": "User Show events.\n Assistant Do you want to see events for a particular namespace?\n User Yes, for production.\n Assistant Displaying events in production namespace.", "output": "bash\n kubectl get events -n production"}
{"type": "explanation", "instruction": "User Apply configurations.\n Assistant Which file or directory contains the configurations?\n User The deployments directory.\n Assistant Applying configurations from deployments.", "output": "bash\n kubectl apply -f deployments/"}
{"type": "explanation", "instruction": "User Whats using my node resources?\n Assistant Would you like to view resource usage for all nodes?\n User Yes, please.\n Assistant Showing resource usage for all nodes.", "output": "bash\n kubectl top nodes"}
{"type": "explanation", "instruction": "User Get pods with label.\n Assistant What label should be used for filtering?\n User tier=frontend.\n Assistant Listing pods with label tier=frontend.", "output": "bash\n kubectl get pods -l tier=frontend"}
{"type": "explanation", "instruction": "User Delete a namespace.\n Assistant Which namespace do you want to delete?\n User test-environment.\n Assistant Deleting namespace test-environment.", "output": "bash\n kubectl delete namespace test-environment"}
{"type": "explanation", "instruction": "User Port forward.\n Assistant Which resource do you want to port-forward, a pod or service?\n User A pod named db-pod.\n Assistant Which ports should be forwarded?\n User Local port 3306 to container port 3306.\n Assistant Setting up port forwarding for db-pod.", "output": "bash\n kubectl port-forward pod/db-pod 33063306"}
{"type": "explanation", "instruction": "User Run a command in a pod.\n Assistant Whats the name of the pod?\n User maintenance-pod.\n Assistant What command do you want to execute?\n User top.\n Assistant Running top in maintenance-pod.", "output": "bash\n kubectl exec -it maintenance-pod -- top"}
{"type": "explanation", "instruction": "User Show me the deployments.\n Assistant Do you wish to see deployments in a specific namespace?\n User Yes, in testing.\n Assistant Listing deployments in testing namespace.", "output": "bash\n kubectl get deployments -n testing"}
{"type": "explanation", "instruction": "User Get service details.\n Assistant Which service would you like to describe?\n User payment-service.\n Assistant Describing payment-service.", "output": "bash\n kubectl describe service payment-service"}
{"type": "explanation", "instruction": "User Explain resource.\n Assistant What resource do you want to explain?\n User statefulset.\n Assistant Explaining statefulset resource.", "output": "bash\n kubectl explain statefulset"}
{"type": "explanation", "instruction": "User Create a secret.\n Assistant What is the name of the secret?\n User api-keys.\n Assistant Will it be from literals or a file?\n User From literal key=abcd1234.\n Assistant Creating secret api-keys.", "output": "bash\n kubectl create secret generic api-keys --from-literal=key=abcd1234"}
{"type": "explanation", "instruction": "User Get nodes.\n Assistant Do you want a detailed description or a list?\n User Just a list.\n Assistant Listing all nodes.", "output": "bash\n kubectl get nodes"}
{"type": "explanation", "instruction": "User Delete pods with label.\n Assistant Which label should be used to select pods?\n User temp=true.\n Assistant Deleting pods with label temp=true.", "output": "bash\n kubectl delete pods -l temp=true"}
{"type": "explanation", "instruction": "User Scale statefulset.\n Assistant Which statefulset do you want to scale?\n User database.\n Assistant To how many replicas?\n User 3 replicas.\n Assistant Scaling statefulset database to 3 replicas.", "output": "bash\n kubectl scale statefulset database --replicas=3"}
{"type": "explanation", "instruction": "User Patch a deployment.\n Assistant What is the name of the deployment?\n User web-deploy.\n Assistant Do you have a patch file?\n User Yes, web-patch.yaml.\n Assistant Patching deployment web-deploy with web-patch.yaml.", "output": "bash\n kubectl patch deployment web-deploy --patch-file=web-patch.yaml"}
{"type": "explanation", "instruction": "User Get CRDs.\n Assistant Do you want to list all Custom Resource Definitions?\n User Yes, please.\n Assistant Listing all CRDs.", "output": "bash\n kubectl get crds"}
{"type": "explanation", "instruction": "User Create a namespace.\n Assistant What should be the name of the namespace?\n User qa-environment.\n Assistant Creating namespace qa-environment.", "output": "bash\n kubectl create namespace qa-environment"}
{"type": "explanation", "instruction": "User Get the current context.\n Assistant Displaying the current Kubernetes context.", "output": "bash\n kubectl config current-context"}
{"type": "explanation", "instruction": "User Set context.\n Assistant Which context do you want to switch to?\n User production-cluster.\n Assistant Switching to context production-cluster.", "output": "bash\n kubectl config use-context production-cluster"}
{"type": "explanation", "instruction": "User Run a busybox pod.\n Assistant Would you like to run it interactively?\n User Yes.\n Assistant What should be the pod name?\n User busybox-test.\n Assistant Running busybox-test interactively.", "output": "bash\n kubectl run busybox-test --image=busybox -it -- /bin/sh"}
{"type": "explanation", "instruction": "User Delete all resources.\n Assistant Do you want to delete all resources in a particular namespace?\n User Yes, in temp.\n Assistant Deleting all resources in temp namespace.", "output": "bash\n kubectl delete all --all -n temp"}
{"type": "explanation", "instruction": "User Get events.\n Assistant Would you like to see events for a specific namespace or all?\n User For default namespace, please.\n Assistant Showing events in default namespace.", "output": "bash\n kubectl get events -n default"}
{"type": "explanation", "instruction": "User Explain ingress.\n Assistant Providing explanation for the ingress resource.", "output": "bash\n kubectl explain ingress"}
{"type": "explanation", "instruction": "User Save pod logs.\n Assistant Which pods logs do you want to save?\n User app-pod.\n Assistant Whats the filename?\n User app-pod.log.\n Assistant Saving logs of app-pod to app-pod.log.", "output": "bash\n kubectl logs app-pod > app-pod.log"}
{"type": "explanation", "instruction": "User View pod CPU usage.\n Assistant Do you want to see CPU usage for all pods or a specific one?\n User For all pods.\n Assistant Displaying CPU usage for all pods.", "output": "bash\n kubectl top pods"}
{"type": "explanation", "instruction": "User Describe node.\n Assistant Which node would you like to describe?\n User node-1.\n Assistant Describing node-1.", "output": "bash\n kubectl describe node node-1"}
{"type": "explanation", "instruction": "User Get service accounts.\n Assistant In which namespace?\n User kube-public.\n Assistant Listing service accounts in kube-public.", "output": "bash\n kubectl get serviceaccounts -n kube-public"}
{"type": "explanation", "instruction": "User Delete job.\n Assistant What is the name of the job?\n User cleanup-job.\n Assistant Deleting job cleanup-job.", "output": "bash\n kubectl delete job cleanup-job"}
{"type": "explanation", "instruction": "User Create persistent volume claim.\n Assistant What is the name of the PVC?\n User storage-pvc.\n Assistant Do you have a YAML file?\n User Yes, pvc.yaml.\n Assistant Creating PVC storage-pvc from pvc.yaml.", "output": "bash\n kubectl apply -f pvc.yaml"}
{"type": "explanation", "instruction": "User Get pods in wide format.\n Assistant In which namespace?\n User apps.\n Assistant Listing pods in apps namespace with wide output.", "output": "bash\n kubectl get pods -n apps -o wide"}
{"type": "explanation", "instruction": "User Label a node.\n Assistant Which node do you want to label?\n User node-10.\n Assistant What label would you like to add?\n User zone=us-east-1a.\n Assistant Labeling node-10 with zone=us-east-1a.", "output": "bash\n kubectl label nodes node-10 zone=us-east-1a"}
{"type": "explanation", "instruction": "User Annotate a pod.\n Assistant Which pod should be annotated?\n User backend-pod.\n Assistant Whats the annotation?\n User description=Backend application pod.\n Assistant Annotating backend-pod.", "output": "bash\n kubectl annotate pod backend-pod description=Backend application pod"}
{"type": "explanation", "instruction": "User Get cluster info.\n Assistant Retrieving cluster information.", "output": "bash\n kubectl cluster-info"}
{"type": "explanation", "instruction": "User Delete deployment.\n Assistant Which deployment would you like to delete?\n User old-api.\n Assistant Deleting deployment old-api.", "output": "bash\n kubectl delete deployment old-api"}
{"type": "explanation", "instruction": "User Get volume attachments.\n Assistant Do you want to list all volume attachments in the cluster?\n User Yes.\n Assistant Listing all volume attachments.", "output": "bash\n kubectl get volumeattachments"}
{"type": "explanation", "instruction": "User Uncordon node.\n Assistant Which node do you want to uncordon?\n User node-3.\n Assistant Uncordoning node-3.", "output": "bash\n kubectl uncordon node-3"}
{"type": "explanation", "instruction": "User Get pod logs.\n Assistant Which pods logs are you interested in?\n User worker-pod.\n Assistant Do you need logs from a specific container?\n User Yes, app-container.\n Assistant Retrieving logs from app-container in worker-pod.", "output": "bash\n kubectl logs worker-pod -c app-container"}
{"type": "explanation", "instruction": "User Show me the configmaps.\n Assistant Do you want to list configmaps in a specific namespace?\n User Yes, in default.\n Assistant Listing configmaps in default namespace.", "output": "bash\n kubectl get configmaps -n default"}
{"type": "explanation", "instruction": "User Delete a service.\n Assistant Which service should be deleted?\n User redis-service.\n Assistant Deleting service redis-service.", "output": "bash\n kubectl delete service redis-service"}
{"type": "explanation", "instruction": "User Describe a pod.\n Assistant Please provide the pods name.\n User batch-worker.\n Assistant Describing pod batch-worker.", "output": "bash\n kubectl describe pod batch-worker"}
{"type": "explanation", "instruction": "User List all namespaces.\n Assistant Displaying all namespaces.", "output": "bash\n kubectl get namespaces"}
{"type": "explanation", "instruction": "User Apply a configuration.\n Assistant What is the path to the configuration file or directory?\n User service.yaml.\n Assistant Applying configuration from service.yaml.", "output": "bash\n kubectl apply -f service.yaml"}
{"type": "explanation", "instruction": "User Roll back deployment.\n Assistant Which deployment do you want to roll back?\n User frontend.\n Assistant Rolling back deployment frontend.", "output": "bash\n kubectl rollout undo deployment frontend"}
{"type": "explanation", "instruction": "User Get daemonsets.\n Assistant Do you want to list daemonsets in all namespaces or a specific one?\n User All namespaces.\n Assistant Listing daemonsets in all namespaces.", "output": "bash\n kubectl get daemonsets --all-namespaces"}
{"type": "explanation", "instruction": "User Backup etcd.\n Assistant Are you looking for the command to back up etcd data?\n User Yes, please.\n Assistant Heres how to back up etcd.", "output": "bash\n ETCDCTL_API=3 etcdctl snapshot save snapshot.db --endpoints=<Endpoints> --cacert=<CA Certificate> --cert=<Certificate> --key=<Key>"}
{"type": "explanation", "instruction": "User Scale replicaset.\n Assistant Which replicaset do you want to scale?\n User web-rs.\n Assistant To how many replicas?\n User 2.\n Assistant Scaling replicaset web-rs to 2 replicas.", "output": "bash\n kubectl scale rs web-rs --replicas=2"}
{"type": "explanation", "instruction": "User Create a cronjob.\n Assistant Whats the name of the cronjob?\n User data-sync.\n Assistant Whats the schedule?\n User Every day at midnight.\n Assistant Creating cronjob data-sync with specified schedule.", "output": "bash\n kubectl create cronjob data-sync --image=busybox --schedule=0 0    -- /bin/sh -c echo Data sync"}
{"type": "explanation", "instruction": "User Get cluster roles.\n Assistant Listing all cluster roles.", "output": "bash\n kubectl get clusterroles"}
{"type": "explanation", "instruction": "User Run a job.\n Assistant Whats the name of the job?\n User batch-process.\n Assistant Do you have a YAML file?\n User No, create it with the image alpine.\n Assistant Running job batch-process using alpine image.", "output": "bash\n kubectl create job batch-process --image=alpine -- /bin/sh -c echo Processing"}
{"type": "explanation", "instruction": "User Drain a node.\n Assistant Which node would you like to drain?\n User node-5.\n Assistant Draining node-5.", "output": "bash\n kubectl drain node-5 --ignore-daemonsets --delete-local-data"}
{"type": "explanation", "instruction": "User Install metrics server.\n Assistant Are you looking for the command to install metrics server?\n User Yes.\n Assistant You can apply the metrics server manifest.", "output": "bash\n kubectl apply -f https//github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml"}
{"type": "explanation", "instruction": "User Rollout status.\n Assistant For which deployment would you like to check the rollout status?\n User cache.\n Assistant Checking rollout status for cache.", "output": "bash\n kubectl rollout status deployment cache"}
{"type": "explanation", "instruction": "User Get hpa.\n Assistant Do you want to list Horizontal Pod Autoscalers in a specific namespace?\n User No, all namespaces.\n Assistant Listing HPAs in all namespaces.", "output": "bash\n kubectl get hpa --all-namespaces"}
{"type": "explanation", "instruction": "User Patch a node.\n Assistant Which node would you like to patch?\n User node-2.\n Assistant Do you have a patch file or JSON string?\n User JSON string.\n Assistant What is the patch?\n User Add label role=worker.\n Assistant Patching node-2 to add label role=worker.", "output": "bash\n kubectl patch node node-2 -p metadata labels role worker"}
{"type": "explanation", "instruction": "User Get resource quotas.\n Assistant In which namespace?\n User finance.\n Assistant Listing resource quotas in finance.", "output": "bash\n kubectl get resourcequotas -n finance"}
{"type": "explanation", "instruction": "User Create deployment from image.\n Assistant What should be the deployment name?\n User nginx-deployment.\n Assistant Which image to use?\n User nginx1.19.\n Assistant Creating deployment nginx-deployment.", "output": "bash\n kubectl create deployment nginx-deployment --image=nginx1.19"}
{"type": "explanation", "instruction": "User Get storage classes.\n Assistant Listing all storage classes.", "output": "bash\n kubectl get storageclass"}
{"type": "explanation", "instruction": "User Edit configmap.\n Assistant Which configmap would you like to edit?\n User app-config.\n Assistant Opening editor for app-config.", "output": "bash\n kubectl edit configmap app-config"}
{"type": "explanation", "instruction": "User Get resources.\n Assistant Would you like to get all resources in a namespace?\n User Yes, in default.\n Assistant Listing all resources in default namespace.", "output": "bash\n kubectl get all -n default"}
{"type": "explanation", "instruction": "User Run a pod temporarily.\n Assistant What should be the pod name?\n User temp-pod.\n Assistant Which image?\n User alpine.\n Assistant Running temporary pod temp-pod.", "output": "bash\n kubectl run temp-pod --rm -it --image=alpine -- /bin/sh"}
{"type": "explanation", "instruction": "User Get endpoints.\n Assistant Would you like to list endpoints for a specific service?\n User Yes, web-service.\n Assistant Getting endpoints for web-service.", "output": "bash\n kubectl get endpoints web-service"}
{"type": "explanation", "instruction": "User Describe serviceaccount.\n Assistant Which service account should be described?\n User builder-sa.\n Assistant Describing service account builder-sa.", "output": "bash\n kubectl describe serviceaccount builder-sa"}
{"type": "explanation", "instruction": "User Show kube-system pods.\n Assistant Listing pods in kube-system namespace.", "output": "bash\n kubectl get pods -n kube-system"}
{"type": "explanation", "instruction": "User Create cluster role binding.\n Assistant Whats the name of the binding?\n User admin-binding.\n Assistant Which cluster role should be bound?\n User cluster-admin.\n Assistant Which user or group?\n User User john.\n Assistant Creating cluster role binding admin-binding.", "output": "bash\n kubectl create clusterrolebinding admin-binding --clusterrole=cluster-admin --user=john"}
{"type": "explanation", "instruction": "User Taint a node.\n Assistant Which node do you want to taint?\n User node-4.\n Assistant Whats the taint key and effect?\n User Key dedicated, value gpu, effect NoSchedule.\n Assistant Tainting node-4.", "output": "bash\n kubectl taint nodes node-4 dedicated=gpuNoSchedule"}
{"type": "explanation", "instruction": "User Remove taint from node.\n Assistant Which node?\n User node-4.\n Assistant Whats the taint key to remove?\n User dedicated.\n Assistant Removing taint from node-4.", "output": "bash\n kubectl taint nodes node-4 dedicated-"}
{"type": "explanation", "instruction": "User Get secrets.\n Assistant Do you want to list secrets in a specific namespace?\n User In prod.\n Assistant Listing secrets in prod namespace.", "output": "bash\n kubectl get secrets -n prod"}
{"type": "explanation", "instruction": "User Describe secret.\n Assistant Which secret would you like to describe?\n User docker-registry.\n Assistant Describing secret docker-registry.", "output": "bash\n kubectl describe secret docker-registry"}
{"type": "explanation", "instruction": "User Get persistent volumes.\n Assistant Listing all persistent volumes.", "output": "bash\n kubectl get pv"}
{"type": "explanation", "instruction": "User Edit deployment.\n Assistant Which deployment would you like to edit?\n User api-server.\n Assistant Opening editor for api-server.", "output": "bash\n kubectl edit deployment api-server"}
{"type": "explanation", "instruction": "User Create serviceaccount.\n Assistant What is the name of the service account?\n User deployer.\n Assistant Creating service account deployer.", "output": "bash\n kubectl create serviceaccount deployer"}
{"type": "explanation", "instruction": "User Rollout history.\n Assistant For which deployment?\n User frontend.\n Assistant Showing rollout history for frontend.", "output": "bash\n kubectl rollout history deployment frontend"}
{"type": "explanation", "instruction": "User Get pod status.\n Assistant Which pods status do you want to check?\n User nginx-pod.\n Assistant Getting status of nginx-pod.", "output": "bash\n kubectl get pod nginx-pod -o jsonpath=.status.phase"}
{"type": "explanation", "instruction": "User Create a role.\n Assistant What is the name of the role?\n User pod-viewer.\n Assistant Which verbs and resources?\n User Verbs get, watch resource pods.\n Assistant Creating role pod-viewer.", "output": "bash\n kubectl create role pod-viewer --verb=get,watch --resource=pods"}
{"type": "explanation", "instruction": "User Delete secret.\n Assistant Which secret would you like to delete?\n User old-keys.\n Assistant Deleting secret old-keys.", "output": "bash\n kubectl delete secret old-keys"}
{"type": "explanation", "instruction": "User Scale deployment.\n Assistant Which deployment do you want to scale?\n User analytics.\n Assistant To how many replicas?\n User 6.\n Assistant Scaling analytics to 6 replicas.", "output": "bash\n kubectl scale deployment analytics --replicas=6"}
{"type": "explanation", "instruction": "User Copy file to pod.\n Assistant Which pod and container?\n User Pod app-pod, container main.\n Assistant Source file and destination path?\n User local.txt to /app/remote.txt.\n Assistant Copying file to pod.", "output": "bash\n kubectl cp local.txt app-pod/app/remote.txt -c main"}
{"type": "explanation", "instruction": "User Create cluster role.\n Assistant Whats the name of the cluster role?\n User cluster-reader.\n Assistant Which verbs and resources?\n User Verb get resources nodes, pods.\n Assistant Creating cluster role cluster-reader.", "output": "bash\n kubectl create clusterrole cluster-reader --verb=get --resource=nodes,pods"}
{"type": "explanation", "instruction": "User Show API versions.\n Assistant Displaying all available API versions.", "output": "bash\n kubectl api-versions"}
{"type": "explanation", "instruction": "User Apply labels to all pods.\n Assistant Which label would you like to apply?\n User environment=production.\n Assistant Labeling all pods with environment=production.", "output": "bash\n kubectl label pods --all environment=production"}
{"type": "explanation", "instruction": "User Create a pod from YAML.\n Assistant Whats the filename of the YAML?\n User pod.yaml.\n Assistant Creating pod from pod.yaml.", "output": "bash\n kubectl apply -f pod.yaml"}
{"type": "explanation", "instruction": "User Delete ingress.\n Assistant Which ingress would you like to delete?\n User web-ingress.\n Assistant Deleting ingress web-ingress.", "output": "bash\n kubectl delete ingress web-ingress"}
{"type": "explanation", "instruction": "User Edit service.\n Assistant Which service would you like to edit?\n User backend-service.\n Assistant Opening editor for backend-service.", "output": "bash\n kubectl edit service backend-service"}
{"type": "explanation", "instruction": "User Change image of deployment.\n Assistant Which deployment?\n User cache-deployment.\n Assistant Whats the new image?\n User redis6.0.\n Assistant Updating image for cache-deployment.", "output": "bash\n kubectl set image deployment/cache-deployment cache-container=redis6.0"}
{"type": "explanation", "instruction": "User Get PVCs.\n Assistant Would you like to list PVCs in a specific namespace?\n User Yes, database.\n Assistant Listing PVCs in database.", "output": "bash\n kubectl get pvc -n database"}
{"type": "explanation", "instruction": "User Delete PV.\n Assistant Which persistent volume would you like to delete?\n User pv-storage.\n Assistant Deleting PV pv-storage.", "output": "bash\n kubectl delete pv pv-storage"}
{"type": "explanation", "instruction": "User Set context namespace.\n Assistant Which namespace should be set for the current context?\n User development.\n Assistant Setting namespace development.", "output": "bash\n kubectl config set-context --current --namespace=development"}
{"type": "explanation", "instruction": "User Get pods sorted by restart count.\n Assistant Listing pods sorted by their restart counts.", "output": "bash\n kubectl get pods --sort-by=.status.containerStatuses0.restartCount"}
{"type": "explanation", "instruction": "User View node labels.\n Assistant Which nodes labels would you like to see?\n User node-7.\n Assistant Displaying labels for node-7.", "output": "bash\n kubectl get node node-7 --show-labels"}
{"type": "explanation", "instruction": "User Get CSR.\n Assistant Do you want to list all Certificate Signing Requests?\n User Yes.\n Assistant Listing all CSRs.", "output": "bash\n kubectl get csr"}
{"type": "explanation", "instruction": "User Approve CSR.\n Assistant Which CSR would you like to approve?\n User csr-123.\n Assistant Approving csr-123.", "output": "bash\n kubectl certificate approve csr-123"}
{"type": "explanation", "instruction": "User Debug a node.\n Assistant Which node do you want to debug?\n User node-8.\n Assistant Starting debug session on node-8.", "output": "bash\n kubectl debug node/node-8 --image=busybox"}
{"type": "explanation", "instruction": "User Get component statuses.\n Assistant Displaying status of cluster components.", "output": "bash\n kubectl get componentstatuses"}
{"type": "explanation", "instruction": "User Check API resources.\n Assistant Listing all API resources available in the cluster.", "output": "bash\n kubectl api-resources"}
{"type": "explanation", "instruction": "User Delete pod by label.\n Assistant What label should be used to select the pods?\n User version=old.\n Assistant Deleting pods with label version=old.", "output": "bash\n kubectl delete pods -l version=old"}
{"type": "explanation", "instruction": "User Apply a configuration directory recursively.\n Assistant What is the path to the directory?\n User configs/.\n Assistant Applying configurations from configs/ recursively.", "output": "bash\n kubectl apply -R -f configs/"}
{"type": "explanation", "instruction": "User Get roles in a namespace.\n Assistant Which namespace?\n User security.\n Assistant Listing roles in security.", "output": "bash\n kubectl get roles -n security"}
{"type": "explanation", "instruction": "User Create horizontal pod autoscaler.\n Assistant For which deployment?\n User api-server.\n Assistant Whats the min and max replicas?\n User Min 2, max 5.\n Assistant Setting CPU utilization target to 50%.", "output": "bash\n kubectl autoscale deployment api-server --cpu-percent=50 --min=2 --max=5"}
{"type": "explanation", "instruction": "User Get events sorted by timestamp.\n Assistant Listing events sorted by timestamp.", "output": "bash\n kubectl get events --sort-by=.metadata.creationTimestamp"}
{"type": "explanation", "instruction": "User Get available kubectl commands.\n Assistant Displaying help for kubectl.", "output": "bash\n kubectl help"}
{"type": "explanation", "instruction": "User Create job from cronjob.\n Assistant Which cronjob?\n User daily-backup.\n Assistant Naming the job backup-job.\n Assistant Creating job backup-job from cronjob daily-backup.", "output": "bash\n kubectl create job --from=cronjob/daily-backup backup-job"}
{"type": "explanation", "instruction": "User Run pod on specific node.\n Assistant What is the pod name?\n User node-pod.\n Assistant Which node?\n User node-4.\n Assistant Running node-pod on node-4.", "output": "bash\n kubectl run node-pod --image=nginx --overrides=spec nodeName node-4"}
{"type": "explanation", "instruction": "User Start port forwarding for service.\n Assistant Which service?\n User web-service.\n Assistant Which ports?\n User Local 8080 to service port 80.\n Assistant Starting port forwarding.", "output": "bash\n kubectl port-forward service/web-service 808080"}
{"type": "explanation", "instruction": "User Get all pods in JSON format.\n Assistant Listing all pods in JSON format.", "output": "bash\n kubectl get pods -o json"}
{"type": "explanation", "instruction": "User Annotate namespace.\n Assistant Which namespace do you want to annotate?\n User analytics.\n Assistant Whats the annotation?\n User owner=DataTeam.\n Assistant Annotating namespace analytics.", "output": "bash\n kubectl annotate namespace analytics owner=DataTeam"}
{"type": "explanation", "instruction": "User Get nodes in YAML format.\n Assistant Retrieving nodes in YAML format.", "output": "bash\n kubectl get nodes -o yaml"}
{"type": "explanation", "instruction": "User Describe replicationcontroller.\n Assistant Which replication controller?\n User web-rc.\n Assistant Describing web-rc.", "output": "bash\n kubectl describe rc web-rc"}
{"type": "explanation", "instruction": "User Get endpointslices.\n Assistant Listing all endpointslices.", "output": "bash\n kubectl get endpointslices"}
{"type": "explanation", "instruction": "User Show kubeconfig.\n Assistant Displaying the kubeconfig settings.", "output": "bash\n kubectl config view"}
{"type": "explanation", "instruction": "User Delete pod gracefully.\n Assistant Which pod?\n User graceful-pod.\n Assistant Deleting graceful-pod with default grace period.", "output": "bash\n kubectl delete pod graceful-pod"}
{"type": "explanation", "instruction": "User Show quota.\n Assistant In which namespace?\n User dev.\n Assistant Displaying resource quota in dev namespace.", "output": "bash\n kubectl get quota -n dev"}
{"type": "explanation", "instruction": "User Copy from pod to local.\n Assistant From which pod and path?\n User app-pod, path /app/logs/.\n Assistant To which local path?\n User ./logs/.\n Assistant Copying files.", "output": "bash\n kubectl cp app-pod/app/logs/. ./logs/"}
{"type": "explanation", "instruction": "User Delete all CRDs.\n Assistant Are you sure you want to delete all Custom Resource Definitions?\n User Yes.\n Assistant Deleting all CRDs.", "output": "bash\n kubectl delete crd --all"}
{"type": "explanation", "instruction": "User Get pod logs since 1 hour.\n Assistant Which pod?\n User worker-pod.\n Assistant Retrieving logs since 1 hour.", "output": "bash\n kubectl logs worker-pod --since=1h"}
{"type": "explanation", "instruction": "User Create priority class.\n Assistant Whats the name?\n User high-priority.\n Assistant Whats the value?\n User 1000.\n Assistant Is it global default?\n User No.\n Assistant Creating priority class high-priority.", "output": "bash\n kubectl create priorityclass high-priority --value=1000 --description=High priority class"}
{"type": "explanation", "instruction": "User Cordon node.\n Assistant Which node?\n User node-6.\n Assistant Cordoning node-6.", "output": "bash\n kubectl cordon node-6"}
{"type": "explanation", "instruction": "User List replicasets.\n Assistant Do you want to list replicasets in all namespaces?\n User No, just default.\n Assistant Listing replicasets in default namespace.", "output": "bash\n kubectl get rs -n default"}
{"type": "explanation", "instruction": "User Get API resources in JSON format.\n Assistant Displaying API resources in JSON.", "output": "bash\n kubectl api-resources -o json"}
{"type": "explanation", "instruction": "User Retrieve logs for container sidecar in pod frontend-pod.\n Assistant Which containers logs do you need?\n User sidecar.\n Assistant Fetching logs for container sidecar in pod frontend-pod.", "output": "bash\n kubectl logs frontend-pod -c sidecar"}
{"type": "explanation", "instruction": "User List all deployments with labels.\n Assistant Would you like the output to include labels?\n User Yes, please show labels.\n Assistant Listing deployments with their labels.", "output": "bash\n kubectl get deployments --show-labels"}
{"type": "explanation", "instruction": "User Describe the configuration of service cache-service.\n Assistant Could you confirm the service name?\n User It is cache-service.\n Assistant Describing the service cache-service.", "output": "bash\n kubectl describe service cache-service"}
{"type": "explanation", "instruction": "User Scale deployment db-deploy.\n Assistant How many replicas should it have?\n User Increase to 4 replicas.\n Assistant Scaling deployment db-deploy to 4 replicas.", "output": "bash\n kubectl scale deployment db-deploy --replicas=4"}
{"type": "explanation", "instruction": "User List pods on a specific node.\n Assistant Which node do you want to query?\n User worker-node-1.\n Assistant Listing pods running on node worker-node-1.", "output": "bash\n kubectl get pods --field-selector spec.nodeName=worker-node-1"}
{"type": "explanation", "instruction": "User Get detailed logs of pod app-pod with timestamps and tail 200 lines.\n Assistant Retrieving logs with timestamps and tailing 200 lines for pod app-pod.\n User Please do it.", "output": "bash\n kubectl logs app-pod --timestamps --tail=200"}
{"type": "explanation", "instruction": "User Create a secret from a file credentials.json.\n Assistant What should the secret be named?\n User json-secret.\n Assistant Creating secret json-secret from file credentials.json.", "output": "bash\n kubectl create secret generic json-secret --from-file=credentials.json"}
{"type": "explanation", "instruction": "User Update deployment api-deploy to use a new environment variable DEBUG=1.\n Assistant Updating environment variable DEBUG for deployment api-deploy.\n User Yes, update it.", "output": "bash\n kubectl set env deployment/api-deploy DEBUG=1"}
{"type": "explanation", "instruction": "User Inspect current kubeconfig cluster information.\n Assistant Displaying the current kubeconfig information (minified).\n User Show it.", "output": "bash\n kubectl config view --minify"}
{"type": "explanation", "instruction": "User Roll out restart for deployment notification.\n Assistant Which deployment should be restarted?\n User notification.\n Assistant Restarting deployment notification.", "output": "bash\n kubectl rollout restart deployment notification"}
{"type": "explanation", "instruction": "User List persistent volume claims with status details.\n Assistant Displaying all PVCs along with their status.\n User Show detailed status.", "output": "bash\n kubectl get pvc --output=wide"}
{"type": "explanation", "instruction": "User Describe node worker-node-2 for resource details.\n Assistant Providing a detailed description for node worker-node-2.\n User Show the details.", "output": "bash\n kubectl describe node worker-node-2"}
{"type": "explanation", "instruction": "User List all pods in JSON format.\n Assistant Displaying all pods with the JSON output.\n User Show output in JSON.", "output": "bash\n kubectl get pods -o json"}
{"type": "explanation", "instruction": "User Get a summary of all services across all namespaces.\n Assistant Listing all services across every namespace.\n User Provide the summary.", "output": "bash\n kubectl get services --all-namespaces"}
{"type": "explanation", "instruction": "User Monitor logs of pod worker-pod continuously.\n Assistant Starting live tail of logs for worker-pod.\n User Please start streaming.", "output": "bash\n kubectl logs worker-pod -f"}
{"type": "explanation", "instruction": "User Describe replica set backend-rs.\n Assistant Retrieving detailed information for replica set backend-rs.\n User Show me the details.", "output": "bash\n kubectl describe rs backend-rs"}
{"type": "explanation", "instruction": "User List pods with label app=backend.\n Assistant Filtering pods with the label app=backend.\n User List those pods.", "output": "bash\n kubectl get pods -l app=backend"}
{"type": "explanation", "instruction": "User Create a rolebinding for role pod-reader to serviceaccount default in namespace dev.\n Assistant Creating rolebinding for role pod-reader bound to the default service account in dev.\n User Go ahead.", "output": "bash\n kubectl create rolebinding pod-reader-binding --role=pod-reader --serviceaccount=devdefault -n dev"}
{"type": "explanation", "instruction": "User Explain the deployment resource in Kubernetes.\n Assistant Would you like an explanation for the deployment resource syntax?\n User Yes, please explain.\n Assistant Here is an explanation of the deployment resource.", "output": "bash\n kubectl explain deployment"}
{"type": "explanation", "instruction": "User Show the revision history for deployment cache-deploy.\n Assistant Retrieving rollout history for deployment cache-deploy.\n User Show revisions.", "output": "bash\n kubectl rollout history deployment cache-deploy"}
{"type": "explanation", "instruction": "User Create a secret from an environment file .env.\n Assistant What name should the secret have?\n User env-secret.\n Assistant Creating secret env-secret from .env.", "output": "bash\n kubectl create secret generic env-secret --from-env-file=.env"}
{"type": "explanation", "instruction": "User List all nodes with status details.\n Assistant Displaying the list of nodes with their statuses.\n User Show statuses.", "output": "bash\n kubectl get nodes"}
{"type": "explanation", "instruction": "User Apply a YAML file config.yaml.\n Assistant Applying the configuration from the file config.yaml.\n User Execute the apply command.", "output": "bash\n kubectl apply -f config.yaml"}
{"type": "explanation", "instruction": "User Delete a service named old-service.\n Assistant Confirming deletion of service old-service.\n User Yes, delete it.", "output": "bash\n kubectl delete service old-service"}
{"type": "explanation", "instruction": "User Edit the replicaset frontend-rs interactively.\n Assistant Opening the editor for replicaset frontend-rs.\n User Please open it.", "output": "bash\n kubectl edit rs frontend-rs"}
{"type": "explanation", "instruction": "User Describe the role pod-manager.\n Assistant Fetching details for role pod-manager.\n User Show description.", "output": "bash\n kubectl describe role pod-manager"}
{"type": "explanation", "instruction": "User List deployments sorted alphabetically by name.\n Assistant Sorting deployments by name.\n User List sorted deployments.", "output": "bash\n kubectl get deployments --sort-by=.metadata.name"}
{"type": "explanation", "instruction": "User Get previous logs for pod test-pod.\n Assistant Which pods previous logs do you need?\n User test-pod.\n Assistant Retrieving previous logs for test-pod.", "output": "bash\n kubectl logs test-pod --previous"}
{"type": "explanation", "instruction": "User Annotate deployment analytics with version 2.0.\n Assistant Annotating deployment analytics with version=2.0.\n User Certainly.", "output": "bash\n kubectl annotate deployment analytics version=2.0"}
{"type": "explanation", "instruction": "User Remove the environment variable DEBUG from deployment web-app.\n Assistant Confirming removal of variable DEBUG.\n User Yes, remove it.", "output": "bash\n kubectl set env deployment web-app DEBUG-"}
{"type": "explanation", "instruction": "User List pods with custom columns for name and pod IP.\n Assistant Displaying pods with columns NAME and IP.\n User Show table output.", "output": "bash\n kubectl get pods -o=custom-columns=NAME.metadata.name,IP.status.podIP"}
{"type": "explanation", "instruction": "User Run an interactive shell in pod debug-helper using busybox.\n Assistant Launching interactive shell inside pod debug-helper.\n User Start session.", "output": "bash\n kubectl exec -it debug-helper -- /bin/sh"}
{"type": "explanation", "instruction": "User Describe all secrets in JSON format.\n Assistant Retrieving all secrets as JSON output.\n User Please show JSON.", "output": "bash\n kubectl get secrets -o json"}
{"type": "explanation", "instruction": "User List pods on nodes with label disktype=ssd.\n Assistant Listing nodes with label disktype=ssd.\n User Then list pods on those nodes.", "output": "bash\n kubectl get nodes -l disktype=ssd"}
{"type": "explanation", "instruction": "User Show diff between live configuration and deploy.yaml.\n Assistant Performing a diff on deploy.yaml.\n User Show differences.", "output": "bash\n kubectl diff -f deploy.yaml"}
{"type": "explanation", "instruction": "User Get metrics for pod metrics-pod in JSON.\n Assistant Retrieving metrics in JSON for metrics-pod.\n User Output JSON, please.", "output": "bash\n kubectl top pod metrics-pod -o json"}
{"type": "explanation", "instruction": "User Describe clusterrolebinding admin-binding.\n Assistant Describing the clusterrolebinding admin-binding.\n User Show me details.", "output": "bash\n kubectl describe clusterrolebinding admin-binding"}
{"type": "explanation", "instruction": "User List pod logs with timestamps for exit-pod.\n Assistant Retrieving logs for exit-pod with timestamps.\n User Show the logs.", "output": "bash\n kubectl logs exit-pod --timestamps"}
{"type": "explanation", "instruction": "User Delete deployment temp-deploy.\n Assistant Confirm deletion of temp-deploy.\n User Yes, delete it.", "output": "bash\n kubectl delete deployment temp-deploy"}
{"type": "explanation", "instruction": "User Get resource usage for all nodes.\n Assistant Displaying resource usage for all cluster nodes.\n User Show me the metrics.", "output": "bash\n kubectl top nodes"}
{"type": "explanation", "instruction": "User Get rollout history for deployment worker-deploy.\n Assistant Showing rollout history for worker-deploy.\n User Provide history details.", "output": "bash\n kubectl rollout history deployment worker-deploy"}
{"type": "explanation", "instruction": "User Create a secret from file token.txt with key override access-token.\n Assistant Creating secret token-secret using the file with custom key.\n User Create it, please.", "output": "bash\n kubectl create secret generic token-secret --from-file=access-token=token.txt"}
{"type": "explanation", "instruction": "User Describe service account build-bot in namespace ci.\n Assistant Describing service account build-bot in the ci namespace.\n User Show details.", "output": "bash\n kubectl describe serviceaccount build-bot -n ci"}
{"type": "explanation", "instruction": "User List pods that have restarted at least once.\n Assistant Listing pods with non-zero restart counts.\n User Show those pods.", "output": "bash\n kubectl get pods --field-selector=status.containerStatuses.restartCount>0"}
{"type": "explanation", "instruction": "User Get YAML output of replication controller old-rc.\n Assistant Retrieving YAML for replication controller old-rc.\n User Show YAML output.", "output": "bash\n kubectl get rc old-rc -o yaml"}
{"type": "explanation", "instruction": "User Patch pod my-pod to add an annotation env=staging.\n Assistant Patching pod my-pod to add the annotation env=staging.\n User Please update it.", "output": "bash\n kubectl patch pod my-pod -p metadataannotationsenvstaging"}
{"type": "explanation", "instruction": "User Explain the service resource.\n Assistant Providing an explanation for the service resource.\n User Explain it.", "output": "bash\n kubectl explain service"}
{"type": "explanation", "instruction": "User List ingress resources sorted by name.\n Assistant Displaying ingress resources sorted alphabetically by their name.\n User List them.", "output": "bash\n kubectl get ingress --sort-by=.metadata.name"}
{"type": "explanation", "instruction": "User Create a cluster role resource-reader for resources pods and services.\n Assistant Creating cluster role resource-reader with get, list, watch permissions on pods and services.\n User Proceed with creation.", "output": "bash\n kubectl create clusterrole resource-reader --verb=get,list,watch --resource=pods,services"}
{"type": "explanation", "instruction": "User Delete job old-job.\n Assistant Deleting job old-job as requested.\n User Yes, delete it.", "output": "bash\n kubectl delete job old-job"}
{"type": "explanation", "instruction": "User List all pods with custom JSON output using jsonpath.\n Assistant Displaying pod names using a jsonpath query.\n User Show the output.", "output": "bash\n kubectl get pods -o jsonpath=.items.metadata.name"}
{"type": "explanation", "instruction": "User Patch service web-service to update its annotation version=updated.\n Assistant Patching service web-service with the new annotation version=updated.\n User Apply the patch.", "output": "bash\n kubectl patch service web-service -p metadataannotationsversionupdated"}
{"type": "explanation", "instruction": "User Describe custom resource instance instance1 of type myresource.\n Assistant Describing custom resource instance1 of type myresource.\n User Show details.", "output": "bash\n kubectl describe myresource instance1"}
{"type": "explanation", "instruction": "User Check Horizontal Pod Autoscaler status for deployment api.\n Assistant Displaying HPA status for deployment api in the default namespace.\n User Provide HPA details.", "output": "bash\n kubectl get hpa -n default  grep api"}
{"type": "explanation", "instruction": "User Get list of namespaces in YAML format.\n Assistant Retrieving namespaces as YAML output.\n User Show YAML.", "output": "bash\n kubectl get namespaces -o yaml"}
{"type": "explanation", "instruction": "User Create a configmap app-info with literal values env=prod and version=1.0.\n Assistant Creating configmap app-info with specified literal values.\n User Create it.", "output": "bash\n kubectl create configmap app-info --from-literal=env=prod --from-literal=version=1.0"}
{"type": "explanation", "instruction": "User Delete replication controller old-rc.\n Assistant Deleting replication controller old-rc.\n User Confirm deletion.", "output": "bash\n kubectl delete rc old-rc"}
{"type": "explanation", "instruction": "User Switch kubeconfig context to dev-cluster.\n Assistant Switching context to dev-cluster.\n User Execute context switch.", "output": "bash\n kubectl config use-context dev-cluster"}
{"type": "explanation", "instruction": "User Render pod details in table format with columns for name, status, and node.\n Assistant Listing pods with custom columns for name, status, and node.\n User Show the table.", "output": "bash\n kubectl get pods -o=custom-columns=NAME.metadata.name,STATUS.status.phase,NODE.spec.nodeName"}
{"type": "explanation", "instruction": "User Check resource limits for deployment backend.\n Assistant Displaying resource limits for deployment backend.\n User Show resource details.", "output": "bash\n kubectl describe deployment backend  grep -A 5 Limits"}
{"type": "explanation", "instruction": "User List services with their external IP addresses.\n Assistant Displaying a table of services with external IP addresses.\n User List them in detail.", "output": "bash\n kubectl get services -o=custom-columns=NAME.metadata.name,EXTERNAL-IP.status.loadBalancer.ingress0.ip"}
{"type": "explanation", "instruction": "User Create a pod test-po with a restart policy set to Never using the nginx image.\n Assistant Creating pod test-po with restart policy Never.\n User Create it.", "output": "bash\n kubectl run test-po --restart=Never --image=nginx"}
{"type": "explanation", "instruction": "User List nodes with the label zone=us-west-2 and output in JSON format.\n Assistant Filtering nodes by zone=us-west-2 and returning JSON output.\n User List them.", "output": "bash\n kubectl get nodes -l zone=us-west-2 -o json"}
{"type": "explanation", "instruction": "User Copy local file backup.tar to pod backup-pod at path /data/backup.tar.\n Assistant Copying backup.tar from local system to pod backup-pod at /data/backup.tar.\n User Execute copy.", "output": "bash\n kubectl cp backup.tar backup-pod/data/backup.tar"}
{"type": "explanation", "instruction": "User Get scheduler information using events.\n Assistant Displaying events related to the scheduler.\n User Show scheduler events.", "output": "bash\n kubectl get events --field-selector involvedObject.kind=Pod,involvedObject.name=scheduler"}
{"type": "explanation", "instruction": "User Render all deployments in table format with columns for name, ready replicas, and desired replicas.\n Assistant Listing deployments with custom columns for name, ready replicas, and desired replicas.\n User Provide table output.", "output": "bash\n kubectl get deployments -o=custom-columns=NAME.metadata.name,READY.status.readyReplicas,REPLICAS.spec.replicas"}
{"type": "explanation", "instruction": "User Set a new image for container api-container in deployment api-deploy to api2.0.\n Assistant Updating container image in deployment api-deploy.\n User Update the image.", "output": "bash\n kubectl set image deployment/api-deploy api-container=api2.0"}
{"type": "explanation", "instruction": "User List all pods in wide format.\n Assistant Displaying all pods with extended details.\n User Show wide output.", "output": "bash\n kubectl get pods -o wide"}
{"type": "explanation", "instruction": "User Create a job named hello-job that prints Hello Kubernetes.\n Assistant Creating job hello-job using busybox to print Hello Kubernetes.\n User Create the job.", "output": "bash\n kubectl create job hello-job --image=busybox -- /bin/sh -c echo Hello Kubernetes"}
{"type": "explanation", "instruction": "User List all endpoints with a custom column showing the service name and IP addresses.\n Assistant Displaying endpoints with custom columns for service name and IP addresses.\n User Show the endpoints.", "output": "bash\n kubectl get endpoints -o=custom-columns=SERVICE.metadata.name,IP.subsets.addresses.ip"}
{"type": "kubectl", "instruction": "What is a DaemonSet in Kubernetes?", "output": "A DaemonSet ensures that all or some nodes run a copy of a pod. Its typically used for background tasks like log collection or monitoring agents."}
{"type": "kubectl", "instruction": "Explain the difference between a Deployment and a StatefulSet.", "output": "A Deployment manages stateless applications, allowing for easy scaling and updating. A StatefulSet manages stateful applications, providing guarantees about the ordering and uniqueness of pods."}
{"type": "kubectl", "instruction": "What is the purpose of a ConfigMap?", "output": "A ConfigMap stores non-confidential configuration data in key-value pairs, allowing you to decouple configuration artifacts from image content."}
{"type": "kubectl", "instruction": "How do Services enable communication in Kubernetes?", "output": "Services provide network access to a set of pods. They abstract away pod details and enable loose coupling between dependent components."}
{"type": "kubectl", "instruction": "What is the role of an Ingress resource?", "output": "An Ingress exposes HTTP and HTTPS routes from outside the cluster to services within the cluster, providing load balancing and SSL termination."}
{"type": "kubectl", "instruction": "Describe the Kubernetes control plane.", "output": "The control plane manages the clusters overall state, including scheduling, scaling, and responding to events. It includes components like etcd, kube-apiserver, kube-scheduler, and kube-controller-manager."}
{"type": "kubectl", "instruction": "What is a PersistentVolumeClaim?", "output": "A PersistentVolumeClaim is a request for storage by a user. It allows pods to consume persistent storage resources."}
{"type": "kubectl", "instruction": "Explain Kubernetes Namespaces.", "output": "Namespaces provide a way to divide cluster resources between multiple users or teams, allowing for isolation and resource quota management."}
{"type": "kubectl", "instruction": "What are Labels and Selectors used for?", "output": "Labels are key-value pairs attached to resources. Selectors enable filtering and grouping of resources based on these labels."}
{"type": "kubectl", "instruction": "How does Horizontal Pod Autoscaling work?", "output": "Horizontal Pod Autoscaling automatically scales the number of pod replicas based on observed CPU utilization or custom metrics."}
{"type": "kubectl", "instruction": "What is a Kubernetes Operator?", "output": "An Operator is a method of packaging, deploying, and managing a Kubernetes application. It extends the Kubernetes API with custom resources and controllers."}
{"type": "kubectl", "instruction": "Explain the role of etcd in Kubernetes.", "output": "etcd is a distributed key-value store that stores Kubernetes cluster data, providing a reliable way to store configuration data and maintain cluster state."}
{"type": "kubectl", "instruction": "What is a ReplicaSet?", "output": "A ReplicaSet ensures that a specified number of pod replicas are running at any given time. Deployments are typically used instead of directly managing ReplicaSets."}
{"type": "kubectl", "instruction": "How does kube-scheduler function?", "output": "The kube-scheduler assigns pods to nodes based on resource availability and any scheduling constraints, optimizing resource utilization."}
{"type": "kubectl", "instruction": "What is a ServiceAccount?", "output": "A ServiceAccount provides an identity for processes that run in a pod, allowing them to authenticate with the Kubernetes API."}
{"type": "kubectl", "instruction": "Describe the use of Volume Mounts in pods.", "output": "Volume Mounts attach storage volumes to containers within a pod, enabling data persistence across container restarts."}
{"type": "kubectl", "instruction": "What is a Kubernetes Admission Controller?", "output": "An Admission Controller intercepts API server requests before they are persisted, allowing for validation, mutation, or policy enforcement."}
{"type": "kubectl", "instruction": "Explain the Kubernetes CNI.", "output": "The Container Network Interface (CNI) provides a standardized way to configure network interfaces in Linux containers, enabling cluster networking."}
{"type": "kubectl", "instruction": "How do you perform a rolling update in Kubernetes?", "output": "Rolling updates can be performed using Deployments, which gradually replace pods with new versions without downtime."}
{"type": "kubectl", "instruction": "What is the purpose of a Job in Kubernetes?", "output": "A Job creates one or more pods and ensures that a specified number successfully terminate. Its used for batch tasks."}
{"type": "kubectl", "instruction": "What are Init Containers in Kubernetes?", "output": "Init Containers are specialized containers that run before app containers in a pod. They can contain setup scripts and configuration that must run before the main application."}
{"type": "kubectl", "instruction": "Explain Taints and Tolerations.", "output": "Taints and Tolerations work together to ensure that pods are not scheduled onto inappropriate nodes. Taints are applied to nodes, and pods with matching tolerations can be scheduled there."}
{"type": "kubectl", "instruction": "What is a Pod Disruption Budget (PDB)?", "output": "A Pod Disruption Budget specifies the minimum or maximum number of pods that can be unavailable during voluntary disruptions, helping to maintain application availability."}
{"type": "kubectl", "instruction": "Describe how Network Policies work.", "output": "Network Policies are used to control network traffic to and from pods, allowing you to enforce rules on how pods can communicate with each other and with other network endpoints."}
{"type": "kubectl", "instruction": "What are Custom Resource Definitions (CRDs)?", "output": "CRDs allow you to extend Kubernetes with your own custom resources and controllers, enabling you to define and manage new types of objects beyond the built-in ones."}
{"type": "kubectl", "instruction": "What is a Volume in Kubernetes?", "output": "A Volume in Kubernetes is a directory, possibly with data, accessible to containers in a pod. Volumes allow data to persist across container restarts."}
{"type": "kubectl", "instruction": "Explain the concept of Node Affinity.", "output": "Node Affinity is a feature that allows you to constrain pods to be scheduled on specific nodes based on labels, offering more flexible scheduling."}
{"type": "kubectl", "instruction": "What are Sidecar Containers?", "output": "Sidecar Containers are secondary containers that extend or enhance the functionality of the main container in a pod, often used for logging or proxying."}
{"type": "kubectl", "instruction": "Describe Resource Quotas.", "output": "Resource Quotas are used to allocate resource limits per namespace, ensuring that no single team or application consumes all the resources in a cluster."}
{"type": "kubectl", "instruction": "What is Kubernetes API aggregation?", "output": "API aggregation allows extending the Kubernetes API server with additional APIs by registering them as aggregated APIs."}
{"type": "kubectl", "instruction": "Explain the use of Secrets in Kubernetes.", "output": "Secrets are used to store sensitive information, such as passwords or keys, in an encrypted format, making them available to pods in a secure way."}
{"type": "kubectl", "instruction": "What is a Mutating Admission Webhook?", "output": "A Mutating Admission Webhook intercepts API requests and can modify them before they are persisted, allowing for dynamic configuration changes."}
{"type": "kubectl", "instruction": "How do you perform Canary Deployments in Kubernetes?", "output": "Canary Deployments can be achieved using labels and selective traffic routing, deploying a new version alongside the old one for testing before full rollout."}
{"type": "kubectl", "instruction": "What is Kubernetes Federation?", "output": "Kubernetes Federation allows you to manage multiple Kubernetes clusters as a single entity, enabling high availability and failover across regions."}
{"type": "kubectl", "instruction": "Explain the purpose of ReplicaSets.", "output": "ReplicaSets ensure that a specified number of pod replicas are running at all times. They are often managed by Deployments for declarative updates."}
{"type": "kubectl", "instruction": "What is kubelets role in Kubernetes?", "output": "The kubelet is an agent that runs on each node in the cluster. It ensures that containers are running as expected by communicating with the control plane."}
{"type": "kubectl", "instruction": "Describe the use of Liveness and Readiness Probes.", "output": "Liveness Probes detect when a container is running but not functioning properly, allowing Kubernetes to restart it. Readiness Probes determine when a container is ready to accept traffic."}
{"type": "kubectl", "instruction": "What are Pod Presets?", "output": "Pod Presets are objects that inject information, such as environment variables or volumes, into pods at creation time, simplifying configuration."}
{"type": "kubectl", "instruction": "Explain how Kubernetes handles Secrets.", "output": "Secrets are base64-encoded and stored in etcd. Access to Secrets is controlled via RBAC, and they can be mounted as volumes or exposed as environment variables."}
{"type": "kubectl", "instruction": "What is the purpose of kube-proxy?", "output": "kube-proxy maintains network rules on nodes, enabling network communication to pods from network sessions inside or outside of the cluster."}
{"type": "kubectl", "instruction": "Describe Cluster Autoscaling.", "output": "Cluster Autoscaling automatically adjusts the size of the cluster based on the resource requests of pods. It adds or removes nodes to meet demand."}
{"type": "kubectl", "instruction": "What are Limit Ranges?", "output": "Limit Ranges are used to set default resource requests and limits within a namespace, ensuring pods do not exceed specified resource usage."}
{"type": "kubectl", "instruction": "Explain how Service Meshes integrate with Kubernetes.", "output": "Service Meshes, like Istio, add a layer of infrastructure for managing service-to-service communication, offering features like traffic management and monitoring."}
{"type": "kubectl", "instruction": "What is Helm in the context of Kubernetes?", "output": "Helm is a package manager for Kubernetes, allowing you to define, install, and upgrade complex Kubernetes applications using charts."}
{"type": "kubectl", "instruction": "Describe the use of RBAC in Kubernetes.", "output": "Role-Based Access Control (RBAC) manages permissions within the cluster, defining who can perform what actions on which resources."}
{"type": "kubectl", "instruction": "What is a Pod in Kubernetes?", "output": "A Pod is the basic execution unit in Kubernetes, representing a single instance of a running process in the cluster and encapsulating one or more containers."}
{"type": "kubectl", "instruction": "Explain how Ingress Controllers work.", "output": "Ingress Controllers implement the rules defined in Ingress resources, managing external access to services in the cluster, often using a load balancer."}
{"type": "kubectl", "instruction": "What is Pod Priority and Preemption?", "output": "Pod Priority assigns importance to pods, allowing higher priority pods to preempt lower priority ones when scheduling resources are scarce."}
{"type": "kubectl", "instruction": "How do you secure Kubernetes clusters?", "output": "Securing clusters involves using RBAC, network policies, secrets management, regular updates, auditing, and following best practices for container security."}
{"type": "kubectl", "instruction": "Describe the concept of Cluster Federation.", "output": "Cluster Federation allows managing multiple clusters as a single entity, enabling resource sharing and workload distribution across clusters."}
{"type": "kubectl", "instruction": "What are Kubernetes Operators?", "output": "Operators are software extensions that use custom resources to manage applications and their components, automating operational tasks beyond Kubernetes built-in capabilities."}
{"type": "kubectl", "instruction": "What is a Deployment in Kubernetes?", "output": "A Deployment provides declarative updates for Pods and ReplicaSets, allowing you to manage your applications effectively."}
{"type": "kubectl", "instruction": "How do ConfigMaps differ from Secrets?", "output": "ConfigMaps store non-confidential data in key-value pairs, while Secrets are intended for confidential data and are stored in an encoded format."}
{"type": "kubectl", "instruction": "Explain the use of PersistentVolumes.", "output": "PersistentVolumes are storage resources in the cluster that are independent of the lifecycle of any individual pod. They provide durable storage for applications."}
{"type": "kubectl", "instruction": "What is the purpose of a Service Account?", "output": "Service Accounts provide an identity for processes that run in a Pod. They are used to authenticate with the Kubernetes API server."}
{"type": "kubectl", "instruction": "Describe the difference between ClusterIP and NodePort services.", "output": "ClusterIP exposes the service on an internal IP in the cluster, making it accessible only within the cluster. NodePort exposes the service on the same port of each selected node, making it accessible externally."}
{"type": "kubectl", "instruction": "What are Pod Security Policies (PSPs) in Kubernetes?", "output": "Pod Security Policies are cluster-level resources that control the security conditions under which a pod is allowed to run, specifying constraints such as allowed privilege levels, volume types, and host settings."}
{"type": "kubectl", "instruction": "Explain the function of a Validating Admission Webhook.", "output": "A Validating Admission Webhook intercepts API requests to the Kubernetes API server, checking the objects configuration against defined policies and rejecting requests that do not comply."}
{"type": "kubectl", "instruction": "Describe the role of the kube-controller-manager in Kubernetes.", "output": "The kube-controller-manager runs controllers that regulate the state of the cluster, including replication, node management, and endpoint management, ensuring the cluster matches the desired state."}
{"type": "kubectl", "instruction": "What is the difference between a ClusterRole and a Role in Kubernetes RBAC?", "output": "A Role defines permissions within a single namespace, whereas a ClusterRole defines cluster-wide permissions or can be applied to multiple namespaces, offering broader access control."}
{"type": "kubectl", "instruction": "Explain what a CronJob is in Kubernetes.", "output": "A CronJob creates Jobs on a time-based schedule, allowing you to run periodic or recurring tasks, similar to the functionality provided by cron in Linux."}
{"type": "kubectl", "instruction": "Describe Pod affinity and anti-affinity and how they work.", "output": "Pod affinity and anti-affinity let you define rules about which pods should (or should not) be placed together based on labels, influencing the scheduler to group or separate workloads."}
{"type": "kubectl", "instruction": "What are Service endpoints in Kubernetes and why are they important?", "output": "Service endpoints represent the IP addresses of pods backing a service. They are crucial for routing traffic correctly from a service to the appropriate pod destinations."}
{"type": "kubectl", "instruction": "Differentiate between a LoadBalancer Service type and a ClusterIP Service type.", "output": "A ClusterIP service is only accessible within the cluster, while a LoadBalancer service exposes the service externally using a cloud providers load balancer."}
{"type": "kubectl", "instruction": "What is an ExternalName Service in Kubernetes?", "output": "An ExternalName Service maps a service to a DNS name rather than a set of pods, allowing access to external resources using a service-like abstraction."}
{"type": "kubectl", "instruction": "Describe a Headless Service and its use cases.", "output": "A Headless Service does not assign a ClusterIP, and instead returns the individual pod IPs. This is useful for stateful applications where direct pod-to-pod communication is required."}
{"type": "kubectl", "instruction": "What are PersistentVolume reclaim policies?", "output": "Reclaim policies determine what happens to a PersistentVolume after its associated PersistentVolumeClaim is released, with options typically including Retain, Recycle, or Delete."}
{"type": "kubectl", "instruction": "Explain the concept of StorageClasses in Kubernetes.", "output": "StorageClasses provide a way to define different tiers or types of storage with specific performance and availability characteristics, and they allow for dynamic provisioning of persistent volumes."}
{"type": "kubectl", "instruction": "How does dynamic provisioning of storage work in Kubernetes?", "output": "Dynamic provisioning automatically creates persistent volumes based on StorageClass definitions when a PersistentVolumeClaim is made, removing the need for pre-provisioned storage."}
{"type": "kubectl", "instruction": "Describe Container Storage Interface (CSI) drivers.", "output": "CSI drivers allow storage vendors to develop plugins that integrate with Kubernetes, providing a standard mechanism for attaching and mounting storage systems."}
{"type": "kubectl", "instruction": "What is the Downward API in Kubernetes?", "output": "The Downward API exposes information about the pod and container (such as metadata, labels, and resource limits) to applications, enabling them to adapt based on their runtime environment."}
{"type": "kubectl", "instruction": "Explain container lifecycle hooks such as preStop and postStart.", "output": "Lifecycle hooks let you execute custom commands or scripts when a container starts (postStart) or before it terminates (preStop), allowing for graceful shutdown or initialization tasks."}
{"type": "kubectl", "instruction": "Describe how container resource requests and limits work.", "output": "Resource requests specify the minimum CPU and memory a container needs, while limits define the maximum amount it can use, helping the scheduler allocate resources and enforce boundaries."}
{"type": "kubectl", "instruction": "What are pod conditions in Kubernetes?", "output": "Pod conditions provide detailed status information about a pod, such as whether it is initialized, ready, or experiencing issues, which helps in diagnosing problems."}
{"type": "kubectl", "instruction": "Explain the use of readiness gates in Kubernetes.", "output": "Readiness gates are additional conditions that a pod must meet before it is considered ready to serve traffic, enabling more granular control over pod availability."}
{"type": "kubectl", "instruction": "Describe the Kubernetes scheduling framework.", "output": "The scheduling framework is a set of plugins and extension points that determine how pods are assigned to nodes based on resources, policies, and custom scheduling rules."}
{"type": "kubectl", "instruction": "What is kubeadm and how is it used to bootstrap a Kubernetes cluster?", "output": "kubeadm is a command-line tool that helps initialize a Kubernetes cluster by automating tasks such as certificate generation, component configuration, and node joining."}
{"type": "kubectl", "instruction": "Explain what kind (Kubernetes IN Docker) is used for.", "output": "kind is a tool for running local Kubernetes clusters using Docker containers, making it ideal for development, testing, and continuous integration environments."}
{"type": "kubectl", "instruction": "Differentiate between a NodePort Service and other Service types.", "output": "A NodePort Service exposes a service on a static port on each nodes IP address, making it accessible externally, unlike ClusterIP (internal only) or LoadBalancer (cloud-managed) services."}
{"type": "kubectl", "instruction": "Describe the role of cAdvisor in Kubernetes.", "output": "cAdvisor (Container Advisor) collects and provides container resource usage and performance data, which is essential for monitoring and troubleshooting."}
{"type": "kubectl", "instruction": "What is the Container Runtime Interface (CRI) in Kubernetes?", "output": "The CRI is an API that allows Kubernetes to interact with various container runtimes, ensuring that Kubernetes can manage containers regardless of the underlying runtime technology."}
{"type": "kubectl", "instruction": "Explain the purpose of a pods hostname and subdomain fields.", "output": "The hostname and subdomain fields in a pods spec allow you to configure network identities and DNS entries for the pod, which is especially useful in stateful applications."}
{"type": "kubectl", "instruction": "How are annotations used in Kubernetes?", "output": "Annotations are key-value pairs attached to objects that store arbitrary, non-identifying metadata, often used by tools and libraries for configuration or debugging."}
{"type": "kubectl", "instruction": "What is the difference between annotations and labels in Kubernetes?", "output": "Labels are intended for identifying and grouping objects and are used by selectors, whereas annotations are used to attach non-identifying metadata that is not used for grouping."}
{"type": "kubectl", "instruction": "Describe the concept of owner references in Kubernetes.", "output": "Owner references link dependent objects to their parent, so that when the parent is deleted, Kubernetes can automatically clean up the dependent resources."}
{"type": "kubectl", "instruction": "What is garbage collection in Kubernetes?", "output": "Garbage collection in Kubernetes is the process of automatically cleaning up unused resources, such as orphaned pods or volumes, based on owner references and other policies."}
{"type": "kubectl", "instruction": "Explain the purpose of a Finalizer in Kubernetes.", "output": "Finalizers are metadata fields that block the deletion of a resource until specific cleanup operations are completed, ensuring proper resource management."}
{"type": "kubectl", "instruction": "What is a Field Selector in Kubernetes?", "output": "Field selectors allow you to filter Kubernetes resources based on specific fields (like metadata.name or status.phase), providing a more precise way to query objects."}
{"type": "kubectl", "instruction": "Describe how to use the kubectl command-line tool effectively.", "output": "kubectl is the primary CLI for interacting with Kubernetes clusters. It supports commands for deploying, inspecting, and managing resources, with options like apply, get, describe, and logs."}
{"type": "kubectl", "instruction": "What is a kubeconfig file and why is it important?", "output": "A kubeconfig file stores configuration details for connecting to one or more Kubernetes clusters, including cluster information, user credentials, and contexts."}
{"type": "kubectl", "instruction": "Explain the concept of contexts in kubectl.", "output": "Contexts in kubectl are predefined sets of cluster, user, and namespace configurations that allow you to quickly switch between different environments."}
{"type": "kubectl", "instruction": "Describe how port forwarding works in Kubernetes.", "output": "Port forwarding allows you to access a pods network port locally, creating a tunnel between your local machine and the pod, which is useful for debugging or accessing services not exposed externally."}
{"type": "kubectl", "instruction": "What is certificate management in Kubernetes and why is it important?", "output": "Certificate management in Kubernetes involves generating, distributing, and renewing TLS certificates to secure communication between cluster components and external clients."}
{"type": "kubectl", "instruction": "Explain the function of a ClusterIP in Kubernetes.", "output": "A ClusterIP is the default service type in Kubernetes that exposes a service on an internal IP address, making it reachable only within the cluster."}
{"type": "kubectl", "instruction": "What is a scheduler extender in Kubernetes?", "output": "A scheduler extender is an additional component that can be integrated into the Kubernetes scheduling process to apply custom logic when determining which node should run a pod."}
{"type": "kubectl", "instruction": "Describe the concept of an API server aggregator.", "output": "An API server aggregator allows Kubernetes to extend its API by combining multiple API servers into one unified endpoint, enabling additional functionalities or custom resources."}
{"type": "kubectl", "instruction": "What is the Operator Lifecycle Manager (OLM)?", "output": "The Operator Lifecycle Manager is a tool for managing the lifecycle of Operators in Kubernetes, including their installation, updates, and role-based access control."}
{"type": "kubectl", "instruction": "Explain the purpose of a Custom Scheduler in Kubernetes.", "output": "A Custom Scheduler allows you to implement specialized scheduling logic tailored to your applications requirements, instead of relying solely on the default scheduler."}
{"type": "kubectl", "instruction": "Describe the use of kube-state-metrics.", "output": "kube-state-metrics is a service that listens to the Kubernetes API server and generates metrics about the state of various objects, which can then be consumed by monitoring systems like Prometheus."}
{"type": "kubectl", "instruction": "What is a Metrics Server in Kubernetes?", "output": "The Metrics Server collects resource usage metrics (CPU, memory, etc.) from nodes and pods, providing data necessary for autoscaling and monitoring the health of the cluster."}
{"type": "kubectl", "instruction": "Explain the concept of a pods termination grace period.", "output": "The termination grace period is the amount of time given to a pod to shut down gracefully after receiving a termination signal before it is forcibly killed."}
{"type": "kubectl", "instruction": "What are container resource quotas and how do they work?", "output": "Container resource quotas set limits on the total amount of resources (such as CPU and memory) that can be consumed within a namespace, ensuring fair distribution among workloads."}
{"type": "kubectl", "instruction": "Describe the APIService object in Kubernetes.", "output": "An APIService is a resource that registers an external API with the Kubernetes API server, allowing the aggregation of additional APIs into the main API server."}
{"type": "kubectl", "instruction": "How can you scale a StatefulSet in Kubernetes?", "output": "Scaling a StatefulSet involves changing the number of replicas while preserving the ordered and unique identity of each pod, ensuring stable network identities and persistent storage."}
{"type": "kubectl", "instruction": "Explain ownerReferences and how they aid in cascading deletion.", "output": "ownerReferences link child objects to a parent object so that when the parent is deleted, Kubernetes can automatically remove all associated children, preventing orphaned resources."}
{"type": "kubectl", "instruction": "What is a pods termination message path?", "output": "The termination message path is a file within the pod that captures the exit status or error message when a container terminates, useful for debugging failures."}
{"type": "kubectl", "instruction": "Explain the concept and purpose of ephemeral containers.", "output": "Ephemeral containers are temporary containers that can be added to a running pod for debugging purposes, allowing you to inspect and troubleshoot issues without modifying the pods original configuration."}
{"type": "kubectl", "instruction": "Describe how to run a privileged container in Kubernetes.", "output": "Running a privileged container requires setting the security context to allow elevated permissions, which grants the container almost the same access as the host system, though this should be used with caution."}
{"type": "kubectl", "instruction": "What is a Blue/Green deployment strategy in Kubernetes?", "output": "A Blue/Green deployment involves running two identical production environments (blue and green) so that you can switch traffic between them during an update, minimizing downtime and risk."}
{"type": "kubectl", "instruction": "Explain how environment variables are used within pods.", "output": "Environment variables can be specified in a pods configuration to pass configuration data to containers at runtime, enabling dynamic behavior without hardcoding values."}
{"type": "kubectl", "instruction": "What is a multi-container pod and why might you use one?", "output": "A multi-container pod runs multiple containers that share the same network namespace and storage, allowing them to communicate easily and work together as a single cohesive unit."}
{"type": "kubectl", "instruction": "Describe how Kubernetes handles application logging.", "output": "Kubernetes collects logs from container stdout/stderr, which can be aggregated and processed by logging agents, enabling centralized logging, analysis, and troubleshooting."}
{"type": "kubectl", "instruction": "What is the role of Prometheus in Kubernetes monitoring?", "output": "Prometheus is a monitoring system that collects metrics from Kubernetes clusters and applications, providing a powerful query language and alerting mechanism to ensure system health."}
{"type": "kubectl", "instruction": "Explain the function of the kube-aggregator component.", "output": "The kube-aggregator is responsible for combining multiple API servers into a single unified Kubernetes API, enabling the extension of the Kubernetes API with custom services."}
{"type": "kubectl", "instruction": "How does kubeadm init work to set up a cluster?", "output": "kubeadm init bootstraps a Kubernetes control plane by performing tasks such as generating certificates, configuring the API server, and setting up essential components, creating a ready-to-use cluster."}
{"type": "kubectl", "instruction": "What are audit logs in Kubernetes and what purpose do they serve?", "output": "Audit logs record every request made to the Kubernetes API server, providing an essential trail for security monitoring, compliance, and forensic investigations."}
{"type": "kubectl", "instruction": "Describe the purpose and function of static pods in Kubernetes.", "output": "Static pods are managed directly by the kubelet on a node rather than the API server. They are typically used for critical system components that must run independently of the cluster state."}
{"type": "kubectl", "instruction": "How do static pods differ from regular pods?", "output": "Static pods are defined by files on a node and are not managed by the Kubernetes API server, whereas regular pods are managed by controllers and can be rescheduled automatically."}
{"type": "kubectl", "instruction": "Explain the concept of a manifest file in Kubernetes.", "output": "A manifest file is a YAML or JSON document that describes the desired state of Kubernetes objects, used by kubectl to create, update, or delete resources."}
{"type": "kubectl", "instruction": "What role does YAML play in Kubernetes configuration?", "output": "YAML is the preferred format for writing Kubernetes configuration files, providing a human-readable way to declare the desired state of objects in the cluster."}
{"type": "kubectl", "instruction": "How can you integrate HashiCorp Vault with Kubernetes for secret management?", "output": "Integrating Vault with Kubernetes allows you to dynamically inject secrets into pods, manage secret lifecycles, and securely store sensitive data outside of Kubernetes."}
{"type": "kubectl", "instruction": "Explain the purpose of the Container Storage Interface (CSI) in storage management.", "output": "The CSI standardizes how storage providers integrate with Kubernetes, enabling dynamic provisioning and management of storage volumes across different platforms."}
{"type": "kubectl", "instruction": "Describe the use of VolumeSnapshots in Kubernetes.", "output": "VolumeSnapshots allow you to capture the state of a persistent volume at a specific point in time, which can later be used for backup or restoring data."}
{"type": "kubectl", "instruction": "What is the Kubernetes CSI driver for AWS EBS used for?", "output": "The CSI driver for AWS EBS enables Kubernetes to dynamically provision and manage Amazon Elastic Block Store volumes, integrating cloud storage with your workloads."}
{"type": "kubectl", "instruction": "Explain the concept of using init containers to wait for dependencies.", "output": "Init containers can be used to perform initialization tasks or wait for other services to become available before the main containers start, ensuring that all prerequisites are met."}
{"type": "kubectl", "instruction": "How does a pods restart policy affect its behavior?", "output": "The restart policy defines whether a pods containers should be restarted on failure. Options like Always, OnFailure, and Never control how the system responds to container exits."}
{"type": "kubectl", "instruction": "What is meant by a graceful pod shutdown?", "output": "A graceful pod shutdown gives a pod time to complete ongoing tasks and close connections before being terminated, reducing the risk of data loss or corruption."}
{"type": "kubectl", "instruction": "Explain how Kubernetes manages DNS resolution within a cluster.", "output": "Kubernetes uses CoreDNS (or kube-dns) to provide DNS resolution for services and pods, allowing them to communicate using hostnames rather than IP addresses."}
{"type": "kubectl", "instruction": "What role does CoreDNS play in a Kubernetes cluster?", "output": "CoreDNS is the DNS server for Kubernetes, responsible for service discovery and resolving domain names for services and pods inside the cluster."}
{"type": "kubectl", "instruction": "Describe how service discovery works in Kubernetes.", "output": "Service discovery in Kubernetes is achieved through DNS, environment variables, and API queries, allowing pods to locate and communicate with one another based on service names."}
{"type": "kubectl", "instruction": "What is the kube-dns addon and how does it differ from CoreDNS?", "output": "kube-dns was the original DNS solution for Kubernetes while it performs similar functions to CoreDNS, CoreDNS is more flexible and has largely replaced kube-dns in modern clusters."}
{"type": "kubectl", "instruction": "How does an HTTP GET action in a liveness probe work?", "output": "An HTTP GET action in a liveness probe makes a request to a specified endpoint on a container. If the response indicates a failure, Kubernetes restarts the container."}
{"type": "kubectl", "instruction": "Explain how readiness probes contribute to load balancing.", "output": "Readiness probes determine whether a container is ready to accept traffic only pods passing the readiness check receive traffic from services, ensuring proper load distribution."}
{"type": "kubectl", "instruction": "Describe the process for debugging service connectivity issues in Kubernetes.", "output": "Debugging service connectivity involves checking pod logs, verifying service endpoints, ensuring correct label selectors, and using tools like port-forwarding to isolate the issue."}
{"type": "kubectl", "instruction": "What is a headless service and how is it used for stateful applications?", "output": "A headless service omits a ClusterIP and directly returns pod IPs, which is particularly useful for stateful applications that require direct pod addressing and stable network identities."}
{"type": "kubectl", "instruction": "Explain how Kubernetes aggregates logs from multiple containers.", "output": "Kubernetes collects logs from container standard output and error streams, and these logs can be aggregated by external systems (like Fluentd or the EFK stack) for centralized monitoring and analysis."}
{"type": "kubectl", "instruction": "What role does journald play in container logging on some systems?", "output": "journald is a system service that collects and stores logging data, including container logs on certain Linux distributions, enabling centralized log management."}
{"type": "kubectl", "instruction": "How are ephemeral containers used for debugging purposes?", "output": "Ephemeral containers can be added to a running pod temporarily to inspect its state, diagnose issues, or run debugging tools without modifying the pods original configuration."}
{"type": "kubectl", "instruction": "Describe the process of deploying a custom scheduler in Kubernetes.", "output": "Deploying a custom scheduler involves writing a scheduling algorithm that integrates with the Kubernetes API, registering it, and then configuring pods to be scheduled by that custom component."}
{"type": "kubectl", "instruction": "What is the purpose of the kubectl port-forward command?", "output": "The kubectl port-forward command creates a tunnel from a local port to a port on a pod, enabling secure, temporary access to the pods service for debugging or testing."}
{"type": "kubectl", "instruction": "Explain the concept of a rolling restart in Kubernetes.", "output": "A rolling restart gradually terminates and replaces pods in a deployment one by one, ensuring that the application remains available during the update process."}
{"type": "kubectl", "instruction": "What are the benefits of using declarative configuration in Kubernetes?", "output": "Declarative configuration allows you to define the desired state of your resources in configuration files, enabling version control, reproducibility, and easier management of complex systems."}
{"type": "kubectl", "instruction": "Describe the role of kubeadm init in setting up a Kubernetes control plane.", "output": "kubeadm init initializes the control plane by generating necessary certificates, configuring core components, and establishing the clusters state, forming the foundation of the Kubernetes cluster."}
{"type": "kubectl", "instruction": "How do you create a multi-node cluster using kubeadm?", "output": "A multi-node cluster is created by running kubeadm init on the master node and then joining worker nodes to the cluster using the token and configuration details provided by the init process."}
{"type": "kubectl", "instruction": "Explain how to backup and restore etcd data in Kubernetes.", "output": "Backing up etcd involves taking snapshots of its data store, which can later be restored to recover the cluster state in case of failure or disaster."}
{"type": "kubectl", "instruction": "What are cluster role bindings and why are they used?", "output": "Cluster role bindings associate ClusterRoles with users or groups at the cluster level, granting permissions to perform actions across the entire cluster."}
{"type": "kubectl", "instruction": "Describe how to configure a private Docker registry in Kubernetes.", "output": "Configuring a private Docker registry involves setting up authentication credentials (often via ImagePullSecrets) and configuring Kubernetes to trust and pull images from the secured registry."}
{"type": "kubectl", "instruction": "What is the purpose of ImagePullSecrets in Kubernetes?", "output": "ImagePullSecrets store credentials for accessing private container registries, allowing pods to securely pull images that are not publicly available."}
{"type": "kubectl", "instruction": "Explain the significance of the default service account in each namespace.", "output": "Every namespace has a default service account that is automatically associated with pods if no other service account is specified, providing a baseline identity for API access."}
{"type": "kubectl", "instruction": "What is a local Persistent Volume (Local PV) and how is it used?", "output": "A local Persistent Volume uses storage local to the node (such as a disk or SSD) to provide high-performance, low-latency storage for pods, though it lacks the flexibility of networked storage."}
{"type": "kubectl", "instruction": "Describe how to configure a CSI driver for on-premises storage.", "output": "Configuring a CSI driver for on-premises storage involves installing the driver software, setting up storage classes, and ensuring the Kubernetes cluster can communicate with the storage system for dynamic provisioning."}
{"type": "kubectl", "instruction": "What is an Admission Controller webhook for image verification?", "output": "This type of webhook intercepts pod creation requests to verify that container images meet specific criteria (such as being scanned for vulnerabilities) before allowing them to run."}
{"type": "kubectl", "instruction": "Explain how Kubernetes can be used in hybrid cloud environments.", "output": "Kubernetes can span across on-premises and public cloud infrastructures, using consistent APIs and tools to manage workloads, enabling seamless hybrid cloud deployments."}
{"type": "kubectl", "instruction": "Describe the process of using federated secrets across clusters.", "output": "Federated secrets allow you to synchronize and distribute secret data across multiple Kubernetes clusters, ensuring that sensitive data is consistently available in multi-cluster setups."}
{"type": "kubectl", "instruction": "What is the role of the Operator Framework in Kubernetes?", "output": "The Operator Framework provides tools and standards to build, deploy, and manage Operators, which automate the management of complex stateful applications on Kubernetes."}
{"type": "kubectl", "instruction": "Explain the concept of multi-cluster networking in Kubernetes.", "output": "Multi-cluster networking connects pods and services running in different Kubernetes clusters, enabling seamless communication and resource sharing across geographically or logically separated clusters."}
{"type": "kubectl", "instruction": "How does Kubernetes manage ephemeral storage?", "output": "Kubernetes manages ephemeral storage by allocating local storage for temporary files and caches used by containers, which is reclaimed when the pod is terminated."}
{"type": "kubectl", "instruction": "Describe the role of the Kubernetes Garbage Collector.", "output": "The Kubernetes Garbage Collector automatically deletes unused resources (such as pods with expired owner references) to free up resources and maintain a clean cluster state."}
{"type": "kubectl", "instruction": "What is the graceful termination period in Kubernetes?", "output": "The graceful termination period is the configured time delay that allows a pod to finish processing and clean up resources before it is forcibly shut down."}
{"type": "kubectl", "instruction": "Explain how the scheduler uses resource requests to place pods.", "output": "The scheduler uses resource requests declared in pod specifications to determine whether a node has sufficient available CPU and memory to host the pod, thereby optimizing resource allocation."}
{"type": "kubectl", "instruction": "What is resource overcommitment in Kubernetes?", "output": "Resource overcommitment allows nodes to schedule more pods than their actual capacity by assuming that not all pods will use their maximum declared resources at the same time."}
{"type": "kubectl", "instruction": "Describe the concept of bursting in cluster autoscaling.", "output": "Bursting in cluster autoscaling refers to the ability of the cluster to temporarily exceed its normal capacity to handle sudden spikes in demand, before scaling back down."}
{"type": "kubectl", "instruction": "How do eviction policies work in Kubernetes?", "output": "Eviction policies determine how pods are terminated when nodes become resource-constrained, prioritizing the removal of less critical pods to preserve overall cluster health."}
{"type": "kubectl", "instruction": "What is the function of a kube-scheduler extender?", "output": "A kube-scheduler extender allows custom scheduling logic to be plugged into the scheduling process, providing additional filtering or scoring of nodes for pod placement."}
{"type": "kubectl", "instruction": "Explain the use of affinity scheduling in Kubernetes.", "output": "Affinity scheduling allows you to specify preferences or requirements for pod placement based on node labels or other pod attributes, helping to co-locate or separate workloads as needed."}
{"type": "kubectl", "instruction": "Describe how to enforce policies using Open Policy Agent (OPA) in Kubernetes.", "output": "OPA can be integrated with Kubernetes as an admission controller to enforce fine-grained policies on resources, such as security rules or compliance checks, before changes are applied."}
{"type": "kubectl", "instruction": "What is the MutatingAdmissionConfiguration object used for?", "output": "The MutatingAdmissionConfiguration object configures how mutating admission webhooks are applied to incoming requests, specifying which webhooks to invoke and under what conditions."}
{"type": "kubectl", "instruction": "Explain how to combine the use of Secrets and ConfigMaps in a pod.", "output": "Secrets and ConfigMaps can be mounted as volumes or injected as environment variables into a pod, allowing you to separate sensitive information from non-sensitive configuration data."}
{"type": "kubectl", "instruction": "Describe how the kubectl logs command assists in troubleshooting.", "output": "The kubectl logs command retrieves the logs from a container within a pod, enabling developers and operators to diagnose issues by viewing runtime output and error messages."}
{"type": "kubectl", "instruction": "What is the function of the --watch flag in kubectl commands?", "output": "The --watch flag continuously monitors changes to Kubernetes resources, providing real-time updates that help track the evolution of object states during debugging or monitoring."}
{"type": "kubectl", "instruction": "Explain the use of the --selector flag in kubectl commands.", "output": "The --selector flag allows you to filter and operate on Kubernetes objects based on their labels, making it easier to target specific subsets of resources."}
{"type": "kubectl", "instruction": "Describe the process of labeling resources using kubectl.", "output": "Labeling resources with kubectl involves adding key-value pairs to objects, which can then be used for grouping, selection, and organization of resources across the cluster."}
{"type": "kubectl", "instruction": "What is the role of Kustomize in Kubernetes configuration management?", "output": "Kustomize is a tool integrated into kubectl that enables you to customize raw, template-free YAML files for different environments, promoting reusable and maintainable configuration."}
{"type": "kubectl", "instruction": "Explain how overlays work in Kustomize.", "output": "Overlays in Kustomize allow you to apply environment-specific modifications on top of a base configuration, making it simple to manage variations between development, staging, and production."}
{"type": "kubectl", "instruction": "Describe how to customize Kubernetes manifests using Kustomize.", "output": "Kustomize enables customization of manifests by allowing you to patch, add, or remove fields in base configuration files without duplicating the entire file for each environment."}
{"type": "kubectl", "instruction": "What is a base manifest in Kustomize?", "output": "A base manifest in Kustomize is the common set of YAML configurations that define your resources, which can then be modified by overlays for different deployment scenarios."}
{"type": "kubectl", "instruction": "Explain how to manage multiple environments using Kustomize.", "output": "Kustomize lets you maintain a base configuration and then create overlays for each environment (such as dev, test, or production), ensuring consistency while accommodating differences."}
{"type": "kubectl", "instruction": "Describe the role of Helm charts in CI/CD pipelines.", "output": "Helm charts package Kubernetes applications into reusable units, which can be versioned and deployed automatically as part of continuous integration and continuous delivery workflows."}
{"type": "kubectl", "instruction": "What is a values file in Helm?", "output": "A values file in Helm provides default configuration settings for a chart, allowing users to override parameters during installation to tailor the deployment to their needs."}
{"type": "kubectl", "instruction": "Explain how to upgrade applications using Helm.", "output": "Helm facilitates application upgrades by comparing the new chart configuration with the current release, performing a controlled rollout of changes, and allowing rollbacks if necessary."}
{"type": "kubectl", "instruction": "Describe how Helm handles chart dependencies.", "output": "Helm manages dependencies by allowing charts to declare other charts as dependencies, which are then automatically downloaded and incorporated during the installation or upgrade process."}
{"type": "kubectl", "instruction": "What was Tiller in Helm v2 and why is it no longer used?", "output": "Tiller was the server-side component in Helm v2 that managed releases it has been removed in Helm v3 in favor of a client-only architecture to improve security and simplicity."}
{"type": "kubectl", "instruction": "Explain the benefits of using Helm over manual deployments.", "output": "Helm simplifies application deployment by packaging complex Kubernetes manifests into charts, enabling easy versioning, dependency management, rollbacks, and repeatable deployments."}
{"type": "kubectl", "instruction": "Describe the process of rolling back a Helm release.", "output": "Rolling back a Helm release involves reverting to a previous chart version by using Helms built-in rollback command, which re-applies the older configuration to restore the application state."}
{"type": "kubectl", "instruction": "What is a Helm repository and what is its purpose?", "output": "A Helm repository is a storage location for Helm charts, providing a centralized place for publishing, sharing, and versioning Kubernetes application packages."}
{"type": "kubectl", "instruction": "Explain how to secure Helm releases.", "output": "Securing Helm releases involves practices such as using signed charts, restricting access to the Helm repository, and integrating security scanning into the CI/CD pipeline."}
{"type": "kubectl", "instruction": "Describe the use of admission controllers for enforcing security policies.", "output": "Admission controllers intercept requests to the API server and can enforce security policies (like preventing privileged containers), ensuring that only compliant configurations are allowed."}
{"type": "kubectl", "instruction": "What is a Validating Admission Policy in Kubernetes?", "output": "A Validating Admission Policy defines rules that incoming API requests must satisfy if a request fails the policy check, it is rejected, thereby enforcing best practices and compliance."}
{"type": "kubectl", "instruction": "Explain how to integrate Kubernetes with CI/CD systems.", "output": "Kubernetes can be integrated with CI/CD systems by using tools like Helm, Kustomize, and automated pipelines to build, test, and deploy applications in a repeatable and scalable manner."}
{"type": "kubectl", "instruction": "Describe the concept of GitOps in the context of Kubernetes.", "output": "GitOps is a deployment methodology where Git is used as the single source of truth for declarative infrastructure and applications, enabling automated, version-controlled, and auditable deployments in Kubernetes."}
{"type": "kubectl", "instruction": "What are the security implications of running containers in privileged mode?", "output": "Running containers in privileged mode grants them extensive permissions on the host system, which can lead to security risks if the container is compromised, so it should be used only when absolutely necessary."}
{"type": "kubectl", "instruction": "Explain the concept of container security contexts.", "output": "A container security context defines privilege and access control settings for a container, such as user IDs, Linux capabilities, and whether the container should run in privileged mode."}
{"type": "kubectl", "instruction": "Describe how Seccomp profiles enhance container security.", "output": "Seccomp profiles restrict the system calls a container can make, reducing the attack surface and mitigating the risk of exploits by limiting the actions available to the container."}
{"type": "kubectl", "instruction": "What role does AppArmor play in Kubernetes security?", "output": "AppArmor is a Linux kernel security module that can be used in Kubernetes to enforce security policies on containers, restricting the programs capabilities and access to system resources."}
{"type": "kubectl", "instruction": "Explain the use of Linux capabilities in container security.", "output": "Linux capabilities break down the privileges of the root user into distinct units, allowing you to grant only the necessary permissions to a container rather than full root access."}
{"type": "kubectl", "instruction": "How can you configure a read-only root file system for containers?", "output": "Configuring a read-only root file system in a container involves setting the security context so that the containers filesystem is not writable, reducing the risk of tampering or persistent malware."}
{"type": "kubectl", "instruction": "Describe how Kubernetes handles secret updates.", "output": "Kubernetes can update secrets in place, and when secrets are mounted as volumes, the changes are reflected in the pod automatically, though this behavior may depend on the specific configuration."}
{"type": "kubectl", "instruction": "What improvements does Horizontal Pod Autoscaler v2 bring?", "output": "Horizontal Pod Autoscaler v2 allows scaling based on custom metrics in addition to CPU and memory, providing more flexible and fine-grained control over scaling behavior."}
{"type": "kubectl", "instruction": "Explain how to set up multi-architecture images in Kubernetes.", "output": "Multi-architecture images are built to run on different CPU architectures (like x86 and ARM). Kubernetes can schedule these images appropriately when nodes with matching architectures are available."}
{"type": "kubectl", "instruction": "Describe how init containers can be used for dependency waiting.", "output": "Init containers can be configured to run scripts that check for the availability of external services or resources, ensuring that the main containers start only once all dependencies are ready."}
{"type": "kubectl", "instruction": "What is a pods restart policy and how does it affect container behavior?", "output": "A pods restart policy defines under what conditions the container should be restarted (e.g., Always, OnFailure, or Never), directly influencing the pods fault tolerance and recovery."}
{"type": "kubectl", "instruction": "Explain the concept of graceful pod shutdown in Kubernetes.", "output": "Graceful pod shutdown allows containers time to complete in-flight operations and release resources properly before termination, reducing the chance of data loss or corruption."}
{"type": "kubectl", "instruction": "Describe how Kubernetes manages DNS resolution for services.", "output": "Kubernetes manages DNS resolution through CoreDNS or kube-dns, which automatically map service names to their corresponding ClusterIP addresses, facilitating inter-service communication."}
{"type": "kubectl", "instruction": "What is the role of CoreDNS in service discovery?", "output": "CoreDNS is responsible for translating service names to IP addresses within the cluster, enabling pods to discover and communicate with services without needing to know their IP addresses."}
{"type": "kubectl", "instruction": "Explain the concept of service discovery using kube-dns.", "output": "kube-dns, similar to CoreDNS, resolves DNS queries for services and pods, allowing Kubernetes objects to locate each other using consistent, human-friendly names."}
{"type": "kubectl", "instruction": "Describe how a liveness probes HTTP GET action is configured.", "output": "A liveness probe using HTTP GET is configured by specifying a URL path, port, and optional headers Kubernetes periodically sends requests to this endpoint and restarts the container if the probe fails."}
{"type": "kubectl", "instruction": "What is the significance of a readiness probes success in traffic routing?", "output": "A readiness probes success indicates that a container is ready to serve requests only pods that pass this check receive traffic from services, ensuring that clients only hit healthy endpoints."}
{"type": "kubectl", "instruction": "Explain how to diagnose issues using kubectl logs.", "output": "kubectl logs fetches the output of a containers stdout and stderr, providing insight into application behavior and error messages that help diagnose and troubleshoot issues."}
{"type": "kubectl", "instruction": "What is the concept of a privileged container and when might it be used?", "output": "A privileged container runs with elevated permissions, often used for system-level tasks or debugging, but it should be used sparingly due to the increased security risks."}
{"type": "kubectl", "instruction": "Describe how to deploy a custom scheduler and its benefits.", "output": "Deploying a custom scheduler allows you to implement tailored scheduling policies that better match your applications needs, such as specialized resource allocation or affinity rules."}
{"type": "kubectl", "instruction": "Explain the benefits of using kubectl port-forward for local testing.", "output": "kubectl port-forward lets you access a pods service locally without exposing it externally, making it easier to test and debug applications securely."}
{"type": "kubectl", "instruction": "What is a rolling restart and how does it differ from a rolling update?", "output": "A rolling restart sequentially restarts all pods in a deployment to refresh their state, while a rolling update replaces pods with new versions, updating the application while minimizing downtime."}
{"type": "kubectl", "instruction": "Describe the importance of declarative configuration in Kubernetes management.", "output": "Declarative configuration allows you to specify the desired state of your cluster in code, enabling version control, repeatability, and easier recovery from errors."}
{"type": "kubectl", "instruction": "How does kubeadm init contribute to cluster creation?", "output": "kubeadm init sets up the control plane by configuring critical components, generating certificates, and establishing the necessary configuration files to form a functional Kubernetes cluster."}
{"type": "kubectl", "instruction": "Explain the process of joining worker nodes to a Kubernetes cluster using kubeadm.", "output": "Worker nodes join a cluster using a token and configuration details generated by kubeadm init, which authenticates and registers the node with the control plane."}
{"type": "kubectl", "instruction": "Describe best practices for backing up and restoring etcd data.", "output": "Best practices include regularly taking snapshots of etcd data, storing them securely offsite, and testing the restore process to ensure the cluster can be recovered in case of failure."}
{"type": "kubectl", "instruction": "What are cluster role bindings and how do they differ from role bindings?", "output": "Cluster role bindings grant permissions across the entire cluster by binding a ClusterRole to users or groups, whereas role bindings apply permissions within a specific namespace by binding a Role."}
{"type": "kubectl", "instruction": "Explain how to configure a private registry for Kubernetes image pulls.", "output": "Configuring a private registry involves creating ImagePullSecrets with the necessary authentication credentials and referencing these secrets in your pod specifications to allow secure image pulls."}
{"type": "kubectl", "instruction": "Describe how ImagePullSecrets enhance security in Kubernetes.", "output": "ImagePullSecrets store sensitive registry credentials securely and allow pods to authenticate with private registries, ensuring that only authorized images are pulled and deployed."}
{"type": "kubectl", "instruction": "What is the purpose of the default service account in a namespace?", "output": "The default service account provides an identity for pods that do not specify one explicitly, granting them baseline permissions to interact with the Kubernetes API."}
{"type": "kubectl", "instruction": "Explain what a local Persistent Volume is and when to use it.", "output": "A local Persistent Volume leverages storage physically attached to a node, offering high performance for workloads that require fast access, though it limits flexibility in terms of rescheduling pods across nodes."}
{"type": "kubectl", "instruction": "Describe how to configure a CSI driver for on-premises storage systems.", "output": "Configuring a CSI driver for on-premises storage involves deploying the drivers components, setting up appropriate StorageClasses, and ensuring that your nodes can access the underlying storage hardware."}
{"type": "kubectl", "instruction": "What is an Admission Controller webhook for image verification used for?", "output": "This webhook intercepts pod creation requests to verify that container images meet defined security or compliance criteria (such as vulnerability scanning) before allowing them to run."}
{"type": "kubectl", "instruction": "Explain how Kubernetes supports hybrid cloud deployments.", "output": "Kubernetes can manage workloads that span on-premises and public cloud infrastructures by providing a consistent API and tooling, enabling unified operations across diverse environments."}
{"type": "kubectl", "instruction": "Describe the process of synchronizing secrets across multiple clusters.", "output": "Synchronizing secrets involves tools or controllers that replicate secret objects from one cluster to others, ensuring consistent and secure access to sensitive data across environments."}
{"type": "kubectl", "instruction": "What is the Operator Framework and how does it benefit application management?", "output": "The Operator Framework provides libraries and tools to build Operators that automate complex application management tasks, such as deployment, scaling, and backup, simplifying operations for stateful applications."}
{"type": "kubectl", "instruction": "Explain the challenges and solutions for multi-cluster networking in Kubernetes.", "output": "Multi-cluster networking addresses connectivity between pods in different clusters through technologies like VPNs, service meshes, or overlay networks, ensuring seamless communication across distributed environments."}
{"type": "kubectl", "instruction": "Describe how Kubernetes manages ephemeral storage for pods.", "output": "Kubernetes allocates ephemeral storage from the nodes local disk for temporary files and caches used by pods this storage is reclaimed when the pod terminates, ensuring efficient resource usage."}
{"type": "kubectl", "instruction": "What role does the Kubernetes Garbage Collector play in resource management?", "output": "The Garbage Collector automatically deletes orphaned or unused resources based on owner references and expiration policies, keeping the cluster clean and preventing resource leaks."}
{"type": "kubectl", "instruction": "Explain the purpose of the graceful termination period for pods.", "output": "The graceful termination period allows pods time to finish processing ongoing requests and perform cleanup operations before being forcibly terminated, enhancing application stability."}
{"type": "kubectl", "instruction": "Describe how the scheduler prioritizes pods based on resource requests.", "output": "The scheduler evaluates the resource requests of pods and matches them against node capacities, ensuring that pods are only scheduled on nodes that have sufficient resources available."}
{"type": "kubectl", "instruction": "What is resource overcommitment and how can it benefit a Kubernetes cluster?", "output": "Resource overcommitment allows more pods to be scheduled on a node than its physical capacity might suggest, based on the assumption that not all pods will use their maximum resources simultaneously, thus increasing utilization."}
{"type": "kubectl", "instruction": "Explain the concept of bursting in cluster autoscaling.", "output": "Bursting in cluster autoscaling refers to temporarily scaling up the number of nodes beyond the usual capacity to handle sudden increases in workload, then scaling back down once demand subsides."}
{"type": "kubectl", "instruction": "Describe how Kubernetes enforces eviction policies.", "output": "Kubernetes enforces eviction policies by monitoring node resource pressure and proactively terminating lower-priority pods when resources become scarce, ensuring the stability of higher-priority workloads."}
{"type": "kubectl", "instruction": "What is the function of a kube-scheduler extender?", "output": "A kube-scheduler extender allows you to plug in additional filtering or scoring logic into the scheduling process, enabling custom decisions for pod placement that go beyond the default scheduler capabilities."}
{"type": "kubectl", "instruction": "Explain the benefits of using affinity scheduling in Kubernetes.", "output": "Affinity scheduling lets you influence pod placement based on labels or other characteristics, which can improve performance by co-locating interdependent applications or isolating workloads for security reasons."}
{"type": "kubectl", "instruction": "How can Open Policy Agent (OPA) be integrated into Kubernetes for policy enforcement?", "output": "OPA can be deployed as an admission controller in Kubernetes to evaluate and enforce custom policies on API requests, ensuring that all resources comply with organizational and security standards."}
{"type": "kubectl", "instruction": "What is the MutatingAdmissionConfiguration object and what is its role?", "output": "The MutatingAdmissionConfiguration object defines which mutating admission webhooks should be called and in what order, thereby controlling how incoming API requests are modified before they are stored."}
{"type": "kubectl", "instruction": "Explain how to combine the use of Secrets and ConfigMaps in Kubernetes pods.", "output": "Secrets and ConfigMaps can be mounted as volumes or exposed as environment variables in pods, allowing you to separate and manage confidential data from general configuration, while keeping both easily updatable."}
{"type": "kubectl", "instruction": "Describe how the kubectl logs command aids in debugging.", "output": "The kubectl logs command streams the logs from a container, allowing you to view real-time output and historical logs to troubleshoot errors and monitor application behavior."}
{"type": "kubectl", "instruction": "What is the purpose of the --watch flag in kubectl commands?", "output": "The --watch flag enables continuous monitoring of changes to Kubernetes resources, which helps you observe the real-time evolution of resource states during troubleshooting or development."}
{"type": "kubectl", "instruction": "Explain how the --selector flag is used in kubectl commands.", "output": "The --selector flag allows you to filter Kubernetes objects based on label selectors, enabling targeted operations on a specific subset of resources."}
{"type": "kubectl", "instruction": "Describe how to label resources using kubectl for better organization.", "output": "Labeling resources with kubectl involves adding key-value pairs to objects, which can then be used to group, filter, and manage resources effectively across different environments."}
{"type": "kubectl", "instruction": "What is the role of Kustomize in Kubernetes configuration management?", "output": "Kustomize allows you to overlay configuration changes on top of a base set of manifests without modifying the original files, making it easier to manage multiple environments and customizations."}
{"type": "kubectl", "instruction": "Explain how overlays work in Kustomize.", "output": "Overlays in Kustomize are used to apply environment-specific changes to a base manifest, enabling you to maintain a single source of truth while supporting variations for different deployment scenarios."}
{"type": "kubectl", "instruction": "Describe how to customize Kubernetes manifests using Kustomize.", "output": "Kustomize lets you patch and modify base YAML manifests through overlays, allowing you to adjust settings such as image tags, resource limits, or environment variables for different environments."}
{"type": "kubectl", "instruction": "What is a base manifest in Kustomize?", "output": "A base manifest in Kustomize is the original set of YAML configurations that define your application, which can then be extended or modified with overlays to suit various deployment needs."}
{"type": "kubectl", "instruction": "Explain how to manage multiple environments using Kustomize.", "output": "Kustomize facilitates the management of multiple environments by allowing you to create environment-specific overlays that adjust a common base manifest, ensuring consistency while accommodating differences."}
{"type": "kubectl", "instruction": "Describe the role of Helm charts in CI/CD pipelines.", "output": "Helm charts package Kubernetes resources into a deployable unit, which can be integrated into CI/CD pipelines to automate the testing, deployment, and versioning of applications."}
{"type": "kubectl", "instruction": "What is a values file in Helm and how is it used?", "output": "A values file in Helm provides configurable parameters for a chart, enabling users to override default settings during installation to tailor the deployment to their specific environment."}
{"type": "kubectl", "instruction": "Explain how to upgrade applications using Helm.", "output": "Upgrading applications with Helm involves applying a new version of a chart with updated configurations, which Helm then rolls out gradually, ensuring a smooth transition with rollback capabilities if needed."}
{"type": "kubectl", "instruction": "Describe how Helm manages chart dependencies.", "output": "Helm charts can declare dependencies on other charts during installation or upgrade, Helm automatically downloads and integrates these dependencies, simplifying the deployment of complex applications."}
{"type": "kubectl", "instruction": "What is a Helm repository and what is its purpose?", "output": "A Helm repository is a centralized location where Helm charts are stored and shared, making it easier for teams to distribute and deploy applications using standardized packages."}
{"type": "kubectl", "instruction": "Explain how to secure Helm releases.", "output": "Securing Helm releases involves practices such as signing charts, using secure repositories, enforcing RBAC policies, and integrating vulnerability scanning into the deployment pipeline."}
{"type": "kubectl", "instruction": "Describe the role of an admission controller for security policies in Kubernetes.", "output": "An admission controller for security policies intercepts API requests to enforce rulessuch as disallowing privileged containers or enforcing resource limitsthereby ensuring that all deployed resources meet security standards."}
{"type": "kubectl", "instruction": "What is a Validating Admission Policy in Kubernetes?", "output": "A Validating Admission Policy defines a set of rules that incoming resource configurations must comply with if the resource does not meet these criteria, the request is rejected to maintain cluster integrity."}
{"type": "kubectl", "instruction": "Explain how to integrate Kubernetes with CI/CD systems.", "output": "Integrating Kubernetes with CI/CD systems involves using automation tools (like Helm, kubectl, or GitOps frameworks) to deploy, test, and roll out application updates reliably and repeatably."}
{"type": "kubectl", "instruction": "Describe the concept of GitOps and its benefits in Kubernetes deployments.", "output": "GitOps is an operational model where Git is the single source of truth for declarative infrastructure, enabling automated, version-controlled, and auditable deployments in Kubernetes."}
{"type": "kubectl", "instruction": "What is the purpose of the --watch flag in kubectl commands?", "output": "The --watch flag in kubectl enables continuous monitoring of resource changes. It streams real-time updates so you can track events and status changes during development or debugging."}
{"type": "kubectl", "instruction": "Explain how the --selector flag is used in kubectl commands.", "output": "The --selector flag filters Kubernetes objects based on label selectors. It allows you to target specific resources by matching defined key-value pairs."}
{"type": "kubectl", "instruction": "Describe how to label resources using kubectl for better organization.", "output": "Labeling resources with kubectl means assigning key-value pairs to objects. This helps in grouping and managing resources across environments and applications efficiently."}
{"type": "kubectl", "instruction": "What is the role of Kustomize in Kubernetes configuration management?", "output": "Kustomize customizes Kubernetes configurations without altering the base YAML files. It allows you to create overlays for environment-specific changes while maintaining a single source of truth."}
{"type": "kubectl", "instruction": "Explain how overlays work in Kustomize.", "output": "Overlays in Kustomize are used to apply modifications to a base configuration. They enable you to adjust parameters like image versions or resource limits for different environments."}
{"type": "kubectl", "instruction": "Describe how to customize Kubernetes manifests using Kustomize.", "output": "Kustomize lets you patch and modify standard Kubernetes manifests using overlays. This approach allows for environment-specific configurations without duplicating the base manifest."}
{"type": "kubectl", "instruction": "What is a base manifest in Kustomize?", "output": "A base manifest in Kustomize is the original collection of YAML files that describe your application. It serves as the foundation on which overlays apply custom modifications."}
{"type": "kubectl", "instruction": "Explain how to manage multiple environments using Kustomize.", "output": "With Kustomize, you manage multiple environments by separating base configurations from overlay files. Each overlay tailors the base settings for its specific environment, ensuring consistency across deployments."}
{"type": "kubectl", "instruction": "Describe the role of Helm charts in CI/CD pipelines.", "output": "Helm charts package Kubernetes applications into deployable units. They integrate with CI/CD pipelines to automate testing, versioning, and deployment, ensuring consistent rollouts across environments."}
{"type": "kubectl", "instruction": "What is a values file in Helm and how is it used?", "output": "A values file in Helm contains configuration parameters that override default settings in a chart. It allows you to customize installations by specifying environment-specific parameters at deployment time."}
{"type": "kubectl", "instruction": "Explain how to upgrade applications using Helm.", "output": "Helm upgrades applications by deploying new chart versions with updated configurations. It performs rolling updates to minimize downtime and provides rollback capabilities if issues arise."}
{"type": "kubectl", "instruction": "Describe how Helm manages chart dependencies.", "output": "Helm charts can define dependencies on other charts. During deployments, Helm automatically fetches and installs these dependencies, ensuring that all required components are deployed together."}
{"type": "kubectl", "instruction": "What is a Helm repository and what is its purpose?", "output": "A Helm repository is a centralized storage for Helm charts. It enables sharing and versioning of charts among teams, simplifying the distribution and deployment of applications."}
{"type": "kubectl", "instruction": "Explain how to secure Helm releases.", "output": "Securing Helm releases involves verifying chart signatures, using secure repositories, and enforcing RBAC policies. These measures help protect against unauthorized changes to your deployments."}
{"type": "kubectl", "instruction": "Describe the role of an admission controller for security policies in Kubernetes.", "output": "Admission controllers intercept API requests to validate and enforce security policies. They ensure that only resources meeting the defined security standards are allowed into the cluster."}
{"type": "kubectl", "instruction": "What is a Validating Admission Policy in Kubernetes?", "output": "A Validating Admission Policy sets rules that must be met by incoming resource configurations. If a configuration fails validation, it is rejected, ensuring that only compliant resources are deployed."}
{"type": "kubectl", "instruction": "Explain how to integrate Kubernetes with CI/CD systems.", "output": "Integrating Kubernetes with CI/CD systems involves automating deployment processes using tools like Helm, kubectl, or GitOps. This integration ensures quick, repeatable, and error-free application rollouts."}
{"type": "kubectl", "instruction": "Describe the concept of GitOps and its benefits in Kubernetes deployments.", "output": "GitOps leverages Git repositories as the source of truth for Kubernetes configurations. It automates deployments, provides audit trails, and makes rollbacks easier by managing changes through version control."}
{"type": "kubectl", "instruction": "What are Kubernetes namespaces and why are they important?", "output": "Namespaces partition a Kubernetes cluster into virtual sub-clusters. They help isolate resources for different teams or projects, preventing naming conflicts and enabling resource quota management."}
{"type": "kubectl", "instruction": "Explain how resource quotas work in Kubernetes.", "output": "Resource quotas in Kubernetes restrict the amount of compute resources that can be consumed in a namespace. They prevent any one team or application from monopolizing shared resources."}
{"type": "kubectl", "instruction": "Describe how to configure RBAC in Kubernetes clusters.", "output": "RBAC (Role-Based Access Control) in Kubernetes is used to assign permissions to users or groups. It involves defining roles and role bindings to restrict what actions each identity can perform in the cluster."}
{"type": "kubectl", "instruction": "What is the function of a Kubernetes Service account?", "output": "A Kubernetes Service account provides an identity for processes running in pods. It is used to manage API access and permissions, ensuring that pods interact with the cluster securely."}
{"type": "kubectl", "instruction": "Explain the importance of readiness and liveness probes in Kubernetes.", "output": "Readiness probes determine if a pod is ready to serve traffic, while liveness probes verify that a pod is running properly. Both help ensure that only healthy pods receive traffic."}
{"type": "kubectl", "instruction": "Describe how Kubernetes manages pod scheduling.", "output": "Kubernetes schedules pods onto nodes based on available resources and scheduling policies. It considers factors like resource requests, affinity, and taints to ensure optimal pod placement."}
{"type": "kubectl", "instruction": "What is the role of the kube-proxy in a Kubernetes cluster?", "output": "The kube-proxy manages network routing on each node. It sets up and maintains the network rules that allow pods to communicate with each other and with external clients."}
{"type": "kubectl", "instruction": "Explain how to perform a rolling update of deployments in Kubernetes.", "output": "A rolling update in Kubernetes gradually replaces old pods with new ones. This method ensures that the application remains available during the update and allows for quick rollback if necessary."}
{"type": "kubectl", "instruction": "Describe the process of scaling Kubernetes deployments.", "output": "Scaling deployments in Kubernetes involves adjusting the number of pod replicas. This can be done manually or automatically using autoscaling, to meet the changing demand for resources."}
{"type": "kubectl", "instruction": "What does the kubectl apply command do?", "output": "kubectl apply updates the desired state of resources in a Kubernetes cluster by creating or modifying objects based on the provided YAML manifests."}
{"type": "kubectl", "instruction": "Explain how to rollback a deployment using Kubernetes.", "output": "Rolling back a deployment in Kubernetes restores a previous version of the configuration. This is useful if a new deployment introduces errors or instability, allowing you to revert quickly."}
{"type": "kubectl", "instruction": "Describe the purpose of a Kubernetes secret and how it is used.", "output": "Kubernetes secrets securely store sensitive data like passwords and tokens. They ensure that confidential information is kept out of plain text in configuration files."}
{"type": "kubectl", "instruction": "What is a Kubernetes configmap and how does it work?", "output": "A configmap stores non-sensitive configuration data that can be consumed by pods. It decouples configuration artifacts from container images, making applications easier to update."}
{"type": "kubectl", "instruction": "Explain how to expose applications using Kubernetes services.", "output": "Kubernetes services expose applications by defining an abstraction over a group of pods. They provide consistent endpoints for accessing app functionality, regardless of pod changes."}
{"type": "kubectl", "instruction": "Describe the differences between NodePort, ClusterIP, and LoadBalancer services.", "output": "NodePort exposes a service on a static port on each node, ClusterIP limits access to internal networks, and LoadBalancer provisions an external IP for broader access."}
{"type": "kubectl", "instruction": "What is the role of an Ingress controller in Kubernetes?", "output": "An Ingress controller manages external HTTP/HTTPS access to services in a Kubernetes cluster. It routes incoming traffic based on defined rules and provides load balancing and SSL termination."}
{"type": "kubectl", "instruction": "Explain how to configure Ingress rules in Kubernetes.", "output": "Ingress rules define how external traffic is directed to internal services by specifying hostnames and paths. These rules are managed by an Ingress controller for secure routing."}
{"type": "kubectl", "instruction": "Describe the process for setting up a Kubernetes cluster using kubeadm.", "output": "kubeadm simplifies Kubernetes cluster setup by automating tasks like certificate creation and control plane initialization. It helps bootstrap a functional cluster quickly and securely."}
{"type": "kubectl", "instruction": "What are taints and tolerations in Kubernetes?", "output": "Taints prevent pods from being scheduled on certain nodes, while tolerations allow designated pods to bypass these restrictions, ensuring workload distribution based on node conditions."}
{"type": "kubectl", "instruction": "Explain how to use labels and selectors to manage Kubernetes pods.", "output": "Labels provide metadata to pods, and selectors allow you to target pods based on these labels. This helps in grouping, filtering, and managing applications efficiently."}
{"type": "kubectl", "instruction": "Describe how Kubernetes pod disruption budgets work.", "output": "Pod Disruption Budgets set limits on the number of pods that can be unavailable during voluntary disruptions. This helps maintain application availability during maintenance or upgrades."}
{"type": "kubectl", "instruction": "What is the function of etcd in a Kubernetes cluster?", "output": "etcd is a distributed key-value store that holds the entire configuration and state of a Kubernetes cluster, serving as the source of truth for the control plane."}
{"type": "kubectl", "instruction": "Explain how Kubernetes manages etcd backups.", "output": "Regular etcd backups are crucial for disaster recovery. Kubernetes administrators schedule backups to capture the cluster state, ensuring data can be restored in the event of a failure."}
{"type": "kubectl", "instruction": "Describe how to secure communication between Kubernetes components.", "output": "Securing communication involves using TLS encryption, certificate-based authentication, and configuring RBAC policies. This protects data exchanged between various Kubernetes components."}
{"type": "kubectl", "instruction": "What is a Kubernetes statefulset and when is it used?", "output": "A StatefulSet provides a method for deploying stateful applications. It offers stable network identities and persistent storage, making it ideal for databases and applications that require ordered deployments."}
{"type": "kubectl", "instruction": "Explain how to manage persistent storage in Kubernetes.", "output": "Persistent storage in Kubernetes is managed using Persistent Volumes and Persistent Volume Claims. This decouples storage provisioning from pod lifecycle, allowing storage resources to exist independently."}
{"type": "kubectl", "instruction": "Describe the role of persistent volume claims in Kubernetes.", "output": "Persistent Volume Claims let users request storage resources from a pool of available volumes. They ensure that applications get the storage they need dynamically as pods are scheduled."}
{"type": "kubectl", "instruction": "What is the importance of storage classes in Kubernetes?", "output": "Storage classes define different types of storage available in a cluster. They allow administrators to offer various performance tiers, which Kubernetes can then use for dynamic provisioning."}
{"type": "kubectl", "instruction": "Explain the difference between static and dynamic provisioning in Kubernetes storage.", "output": "Static provisioning involves manually creating storage resources, while dynamic provisioning automatically creates volumes according to a storage classs parameters when a claim is made."}
{"type": "kubectl", "instruction": "Describe how to monitor Kubernetes clusters.", "output": "Monitoring involves collecting metrics, logs, and events from Kubernetes components. Tools like Prometheus and Grafana help visualize this data, enabling proactive management and troubleshooting."}
{"type": "kubectl", "instruction": "What is the function of Prometheus in Kubernetes monitoring?", "output": "Prometheus collects time-series data from Kubernetes clusters. It aggregates metrics from nodes and pods, allowing for performance analysis and alerting through integrations with visualization tools like Grafana."}
{"type": "kubectl", "instruction": "Explain how to use Grafana to visualize Kubernetes metrics.", "output": "Grafana creates dashboards that display real-time metrics collected from Kubernetes clusters. It integrates with data sources like Prometheus to help administrators understand cluster performance at a glance."}
{"type": "kubectl", "instruction": "Describe the process for logging in Kubernetes environments.", "output": "Logging in Kubernetes utilizes agents to collect log data from pods and nodes. This data is then aggregated in systems like Elasticsearch or Fluentd, providing centralized visibility for troubleshooting and compliance."}
{"type": "kubectl", "instruction": "What are the benefits of using Fluentd in Kubernetes logging?", "output": "Fluentd aggregates and forwards logs from Kubernetes nodes and pods. It simplifies log processing, allowing centralized storage and analysis while reducing the complexity of managing logs across distributed systems."}
{"type": "kubectl", "instruction": "Explain how to troubleshoot Kubernetes network issues.", "output": "Troubleshooting network issues involves validating pod connectivity, reviewing network policies, and checking service configurations. Tools like network plugins and logs help pinpoint connectivity problems."}
{"type": "kubectl", "instruction": "Describe how to perform network policy enforcement in Kubernetes.", "output": "Network policies define how pods communicate with each other. By enforcing these policies, Kubernetes restricts traffic flows between pods, enhancing security and ensuring that only allowed communications occur."}
{"type": "kubectl", "instruction": "What are Kubernetes network plugins and their importance?", "output": "Network plugins provide the underlying connectivity between pods using the Container Network Interface (CNI). They are essential for managing network policies, routing, and ensuring reliable inter-pod communication."}
{"type": "kubectl", "instruction": "Explain the role of CNI in Kubernetes networking.", "output": "The Container Network Interface (CNI) standardizes how network connectivity is provided to pods. It enables network plugins to integrate seamlessly with Kubernetes for consistent networking configurations."}
{"type": "kubectl", "instruction": "Describe how Kubernetes service meshes work.", "output": "Service meshes add a dedicated layer for service-to-service communication. They handle requests between microservices, providing features such as traffic routing, load balancing, and security without modifying application code."}
{"type": "kubectl", "instruction": "What is Istio and how is it used with Kubernetes?", "output": "Istio is a service mesh that integrates with Kubernetes to manage microservice communications. It provides features like traffic management, security, and observability, all without requiring changes to application code."}
{"type": "kubectl", "instruction": "Explain the benefits of a service mesh in Kubernetes environments.", "output": "A service mesh improves communication between services with managed traffic control, enhanced security, and better observability. It simplifies deployment complexities in a distributed system."}
{"type": "kubectl", "instruction": "Describe how to deploy applications using Kubernetes Operators.", "output": "Kubernetes Operators extend cluster functionality by automating complex application operations. They encode expertise into custom controllers that deploy, scale, and manage applications based on their unique requirements."}
{"type": "kubectl", "instruction": "What are Kubernetes Operators and how do they extend Kubernetes functionality?", "output": "Operators encapsulate operational knowledge within custom controllers. They manage application-specific tasks like backups, scaling, and healing, thereby extending Kubernetes capabilities beyond its core functions."}
{"type": "kubectl", "instruction": "Explain how to build a custom Kubernetes Operator.", "output": "Building a custom Operator involves defining Custom Resource Definitions (CRDs) and writing controllers to manage these resources. This automation helps handle complex operational tasks specific to your application."}
{"type": "kubectl", "instruction": "Describe the role of CRDs (Custom Resource Definitions) in Kubernetes.", "output": "Custom Resource Definitions extend Kubernetes by allowing you to define your own resource types. This enables specialized management and integration of custom applications within the Kubernetes ecosystem."}
{"type": "kubectl", "instruction": "What is the significance of API aggregation in Kubernetes?", "output": "API aggregation allows Kubernetes to expose additional APIs alongside its core API. This makes it possible to integrate external systems and enhance the clusters functionality without modifying the core API server."}
{"type": "kubectl", "instruction": "Explain how to use kubectl diff for Kubernetes configuration management.", "output": "kubectl diff compares your local configuration files with the live cluster state. This command helps you understand the changes that will be applied, reducing the risk of unintended modifications."}
{"type": "kubectl", "instruction": "Describe the use of the kubectl exec command.", "output": "kubectl exec allows you to run commands inside a running pod. It is useful for debugging and interacting with the application environment in real time."}
{"type": "kubectl", "instruction": "What does the kubectl logs command do?", "output": "kubectl logs retrieves log output from containers in a pod. This information is critical for diagnosing issues and understanding how an application behaves during runtime."}
{"type": "kubectl", "instruction": "Explain the purpose of the kubectl port-forward command.", "output": "kubectl port-forward creates a tunnel between your local machine and a pods port. This is especially useful for accessing services or debugging applications that are otherwise inaccessible externally."}
{"type": "kubectl", "instruction": "Describe how to debug a pod using kubectl.", "output": "Debugging a pod typically involves using commands like kubectl exec, logs, and port-forward. These tools help you inspect the pods environment, monitor outputs, and interact directly with running processes."}
{"type": "kubectl", "instruction": "What is the benefit of the kubectl cp command?", "output": "kubectl cp allows you to copy files between your local system and a container in a pod. This is useful for retrieving logs, configuration files, or transferring data for troubleshooting purposes."}
{"type": "kubectl", "instruction": "Explain how to set up kubectl context for multiple clusters.", "output": "Setting up multiple kubectl contexts helps you manage more than one cluster. By defining context configurations, you can easily switch between clusters without modifying individual settings."}
{"type": "kubectl", "instruction": "Describe how Kubernetes clusters handle high availability.", "output": "Kubernetes ensures high availability by distributing the control plane and worker nodes across multiple machines or zones. This redundancy minimizes downtime in case of node failures."}
{"type": "kubectl", "instruction": "What is the role of the kube-scheduler in Kubernetes?", "output": "The kube-scheduler assigns pods to nodes based on resource requirements and constraints. It plays a critical role in balancing workloads and ensuring optimal resource utilization across the cluster."}
{"type": "kubectl", "instruction": "Explain how to modify the default Kubernetes scheduler policies.", "output": "Modifying the scheduler policies can be done by adjusting configuration files or deploying custom schedulers. This allows you to fine-tune pod placement according to your specific workload requirements."}
{"type": "kubectl", "instruction": "Describe the concept of cluster federation in Kubernetes.", "output": "Cluster federation in Kubernetes enables you to manage multiple clusters as a single entity. This approach improves scalability, resiliency, and geographic distribution of workloads."}
{"type": "kubectl", "instruction": "What is the purpose of a multi-cluster Kubernetes architecture?", "output": "A multi-cluster architecture distributes workloads across several clusters. This enhances fault tolerance, optimizes resource allocation, and provides redundancy across different locations or environments."}
{"type": "kubectl", "instruction": "Explain how to secure access to the Kubernetes API server.", "output": "Securing the API server involves using TLS encryption, authentication tokens, and RBAC. These measures ensure that only authorized users and systems can communicate with the cluster."}
{"type": "kubectl", "instruction": "Describe the importance of Kubernetes audit logs.", "output": "Audit logs record every API call and change within the cluster. They are vital for tracking activity, ensuring compliance, and aiding in forensic investigations during security incidents."}
{"type": "kubectl", "instruction": "What are the best practices for securing Kubernetes clusters?", "output": "Best practices include enabling RBAC, regularly patching components, enforcing network policies, securing etcd, and continuously monitoring for suspicious activity."}
{"type": "kubectl", "instruction": "Explain how to configure API server flags in Kubernetes.", "output": "API server flags modify the operational parameters of the Kubernetes API server. They can be adjusted to fine-tune performance, logging, and authentication, ensuring secure and efficient cluster operations."}
{"type": "kubectl", "instruction": "Describe the impact of disabling shared process namespace in Kubernetes.", "output": "Disabling the shared process namespace increases container isolation. This improves security by preventing containers from accessing each others processes, though it may limit inter-container communication."}
{"type": "kubectl", "instruction": "What is the role of container runtimes in Kubernetes?", "output": "Container runtimes, like Docker or containerd, are responsible for running containers on nodes. They interface with the kubelet to ensure that containers are launched, managed, and terminated correctly."}
{"type": "kubectl", "instruction": "Explain how CRI (Container Runtime Interface) works in Kubernetes.", "output": "The Container Runtime Interface (CRI) standardizes communication between the kubelet and container runtimes. This allows Kubernetes to support different runtimes without changing core functionalities."}
{"type": "kubectl", "instruction": "Describe the benefits of using containerd with Kubernetes.", "output": "containerd is a lightweight container runtime that offers high performance and stability. Its integration with Kubernetes improves resource utilization and streamlines container management."}
{"type": "kubectl", "instruction": "What is the relationship between Docker and Kubernetes?", "output": "Docker builds and packages applications into containers, while Kubernetes orchestrates these containers at scale. Together, they form a powerful platform for deploying and managing microservices."}
{"type": "kubectl", "instruction": "Explain the role of rkt in Kubernetes cluster setups.", "output": "rkt is an alternative container runtime that focuses on security and composability. In Kubernetes, it can be used in place of Docker, providing different operational benefits for container management."}
{"type": "kubectl", "instruction": "Describe how to migrate from Docker to containerd in Kubernetes.", "output": "Migrating from Docker to containerd involves reconfiguring the Kubernetes node settings to use containerd as the runtime and ensuring that existing containers and images are compatible with the new runtime."}
{"type": "kubectl", "instruction": "What are the security implications of running containers in Kubernetes?", "output": "Security considerations include isolating container processes, applying resource limits, monitoring runtime behavior, and regularly scanning images for vulnerabilities to prevent exploitation."}
{"type": "kubectl", "instruction": "Explain how to configure seccomp profiles in Kubernetes.", "output": "Seccomp profiles restrict the system calls that containers can make. Configuring these profiles in Kubernetes reduces the attack surface, ensuring that containers only perform expected and safe operations."}
{"type": "kubectl", "instruction": "Describe the use of AppArmor in Kubernetes security.", "output": "AppArmor applies security profiles to containers, restricting the actions they can perform. In Kubernetes, using AppArmor enhances container security by limiting potential damage from exploits."}
{"type": "kubectl", "instruction": "What is the purpose of NetworkPolicies in Kubernetes?", "output": "NetworkPolicies control the traffic flow between pods in a Kubernetes cluster. They enforce rules that dictate which pods can communicate, thereby improving security and network segmentation."}
{"type": "kubectl", "instruction": "Explain how to implement NetworkPolicies to control pod communication.", "output": "Implementing NetworkPolicies involves defining rules that allow or deny traffic between pods based on labels and selectors. This controls inter-pod communication and protects sensitive applications."}
{"type": "kubectl", "instruction": "Describe how to monitor Kubernetes clusters using the ELK stack.", "output": "The ELK stack (Elasticsearch, Logstash, Kibana) aggregates logs from Kubernetes clusters. It enables centralized log storage, search, and visualization, which is essential for operational insight and troubleshooting."}
{"type": "kubectl", "instruction": "What are the benefits of using Open Policy Agent (OPA) in Kubernetes?", "output": "OPA enforces fine-grained policies for Kubernetes deployments. It provides a flexible framework to manage security, compliance, and resource access, making cluster management more robust."}
{"type": "kubectl", "instruction": "Explain how to integrate OPA for Kubernetes admission control.", "output": "OPA integrates into Kubernetes as an admission controller, evaluating incoming resource requests against defined policies. This ensures only compliant configurations are allowed into the cluster."}
{"type": "kubectl", "instruction": "Describe the role of Kyverno in Kubernetes policy management.", "output": "Kyverno is a Kubernetes-native policy engine that validates and mutates resources based on custom policies. It simplifies policy management by using Kubernetes-style configurations."}
{"type": "kubectl", "instruction": "What is the significance of using Kubernetes namespaces for resource isolation?", "output": "Namespaces segment a cluster into virtual partitions, isolating resources for different projects or teams. This isolation prevents interference and makes resource management more organized and secure."}
{"type": "kubectl", "instruction": "Explain how to perform load testing on Kubernetes applications.", "output": "Load testing in Kubernetes involves simulating heavy traffic to assess application performance under stress. Tools integrated with Kubernetes can help generate traffic and monitor resource usage."}
{"type": "kubectl", "instruction": "Describe how to configure Horizontal Pod Autoscaler in Kubernetes.", "output": "The Horizontal Pod Autoscaler automatically adjusts the number of pod replicas based on CPU or custom metrics. This ensures that applications can handle varying workloads efficiently."}
{"type": "kubectl", "instruction": "What is the purpose of the Vertical Pod Autoscaler in Kubernetes?", "output": "The Vertical Pod Autoscaler adjusts the resource limits of individual pods based on their usage, ensuring that each pod receives the appropriate amount of CPU and memory without manual intervention."}
{"type": "kubectl", "instruction": "Explain how to implement custom metrics for autoscaling in Kubernetes.", "output": "Implementing custom metrics for autoscaling involves exporting application-specific metrics to a supported backend, which the Horizontal Pod Autoscaler can then use to make scaling decisions."}
{"type": "kubectl", "instruction": "Describe how to use Kubernetes CronJobs for scheduled tasks.", "output": "Kubernetes CronJobs allow you to schedule tasks to run at specific times, similar to cron in Unix-like systems. They help automate periodic tasks like backups or data processing."}
{"type": "kubectl", "instruction": "What is the role of the kubelet in a Kubernetes node?", "output": "The kubelet acts as an agent on each Kubernetes node. It manages pod lifecycle, ensures that containers are running as expected, and reports the health and status of the node to the control plane."}
{"type": "kubectl", "instruction": "Explain how to configure resource requests and limits in Kubernetes.", "output": "Resource requests and limits ensure that containers have sufficient CPU and memory while preventing them from consuming excessive resources. This configuration helps achieve balanced resource allocation across the cluster."}
{"type": "kubectl", "instruction": "Describe the significance of service discovery in Kubernetes.", "output": "Service discovery allows pods to find and communicate with each other without hardcoding IP addresses. Kubernetes uses DNS and environment variables to facilitate dynamic service lookups."}
{"type": "kubectl", "instruction": "What is the function of a sidecar container in Kubernetes deployments?", "output": "A sidecar container runs alongside a primary container to provide auxiliary features, such as logging or monitoring. It helps offload non-core processes from the main application container."}
{"type": "kubectl", "instruction": "Explain how to update container images in a running Kubernetes deployment.", "output": "Updating container images involves changing the image tag in the deployment configuration. Kubernetes then performs a rolling update, replacing old pods with new ones running the updated image."}
{"type": "kubectl", "instruction": "Describe the process for performing a blue-green deployment in Kubernetes.", "output": "Blue-green deployments maintain two separate environments one running the current version and another with the new version. Traffic is then shifted gradually to the new environment to ensure a smooth transition."}
{"type": "kubectl", "instruction": "What is the purpose of a Kubernetes DaemonSet?", "output": "A DaemonSet ensures that a copy of a pod runs on all or selected nodes. It is commonly used for cluster-level services like logging, monitoring, or network management agents."}
{"type": "kubectl", "instruction": "Explain how to clean up unused resources in a Kubernetes cluster.", "output": "Cleaning up unused resources involves identifying and deleting orphaned pods, services, and volumes. Regular cleanup maintains resource efficiency and avoids unnecessary costs."}
{"type": "kubectl", "instruction": "Describe the use of Kubernetes annotations and their benefits.", "output": "Annotations attach non-identifying metadata to Kubernetes objects. They provide additional context for management, debugging, or integration with external tools, without affecting the objects behavior."}
{"type": "kubectl", "instruction": "What is the role of a service mesh sidecar in Kubernetes?", "output": "A service mesh sidecar is injected alongside application containers to handle communication, security, and observability tasks. It offloads these responsibilities, streamlining the main application processes."}
{"type": "kubectl", "instruction": "Explain how to use Kubernetes port mapping for container communication.", "output": "Port mapping in Kubernetes assigns container ports to host ports. This facilitates communication with external networks and enables access to services running inside containers."}
{"type": "kubectl", "instruction": "Describe how Kubernetes manages container logs.", "output": "Kubernetes collects logs from container outputs using logging agents or sidecars. These logs are aggregated and stored for real-time monitoring and later analysis during troubleshooting."}
{"type": "kubectl", "instruction": "What is the function of the Kubernetes API server?", "output": "The API server is the central hub for all Kubernetes communication. It processes REST requests, validates them, and updates the cluster state accordingly, ensuring that the desired configuration is maintained."}
{"type": "kubectl", "instruction": "Explain how Kubernetes handles cluster state reconciliation.", "output": "Kubernetes continuously compares the current state of the cluster with the desired state defined in manifests. Any discrepancies are automatically corrected through various controllers to maintain consistency."}
{"type": "kubectl", "instruction": "Describe how to implement network segmentation in a Kubernetes cluster.", "output": "Network segmentation can be achieved by using network policies and separate namespaces. This approach isolates traffic between pods, reducing the risk of lateral movement during security breaches."}
{"type": "kubectl", "instruction": "What is the role of the Kubernetes controller manager?", "output": "The controller manager runs background processes that monitor the state of the cluster. It manages replication, endpoint updates, and node lifecycle events to ensure that the cluster remains in its desired state."}
{"type": "kubectl", "instruction": "Explain how to automate Kubernetes cluster maintenance.", "output": "Automating maintenance tasks in Kubernetes includes scheduling updates, health checks, and backups. Tools like kubeadm, operators, and CI/CD integrations can help automate these routines efficiently."}
{"type": "kubectl", "instruction": "Describe the concept of immutable infrastructure in Kubernetes deployments.", "output": "Immutable infrastructure in Kubernetes means that once a container is deployed, it is never modified. Updates result in new deployments instead of in-place changes, reducing configuration drift and improving reliability."}
{"type": "kubectl", "instruction": "What are the advantages of using container orchestration with Kubernetes?", "output": "Kubernetes automates deployment, scaling, and operations of containerized applications. This orchestration improves efficiency, ensures high availability, and simplifies management of complex microservice architectures."}
{"type": "kubectl", "instruction": "Explain how to configure logging drivers in Kubernetes.", "output": "Configuring logging drivers involves selecting systems such as Fluentd, Elasticsearch, or the ELK stack to collect and process container logs. This setup streamlines troubleshooting and performance monitoring."}
{"type": "kubectl", "instruction": "Describe the role of the Kubernetes scheduler extender.", "output": "The scheduler extender enhances default scheduling by allowing external processes to provide custom placement decisions. This enables integration of additional constraints or preferences during pod scheduling."}
{"type": "kubectl", "instruction": "What is the purpose of the Kubernetes resource aggregate API?", "output": "The resource aggregate API unifies multiple API endpoints under a single interface, allowing cluster administrators to view and manage diverse resources from different API sources seamlessly."}
{"type": "kubectl", "instruction": "Explain how to implement multi-tenancy in Kubernetes.", "output": "Multi-tenancy in Kubernetes is achieved by using namespaces, resource quotas, and RBAC. These techniques isolate resources between teams or projects, ensuring that one tenants workload does not affect another."}
{"type": "kubectl", "instruction": "Describe how to leverage Kubernetes admission webhooks.", "output": "Admission webhooks intercept API requests to validate or modify objects before they are persisted. They provide an avenue to enforce custom policies or add automation tailored to your operational needs."}
{"type": "kubectl", "instruction": "What is a mutating webhook in Kubernetes?", "output": "A mutating webhook intercepts API requests and allows you to modify the request object before it is stored. It is useful for automating common configuration adjustments during resource creation or updates."}
{"type": "kubectl", "instruction": "Explain the role of a validating webhook in Kubernetes.", "output": "A validating webhook checks incoming requests against defined policies. If the resource does not meet these criteria, the webhook rejects it, ensuring that only valid configurations are applied."}
{"type": "kubectl", "instruction": "Describe the use of the Kubernetes audit logging feature.", "output": "Audit logging tracks all API calls made to the Kubernetes cluster. This feature provides a detailed record for security audits, compliance, and troubleshooting by logging every significant event."}
{"type": "kubectl", "instruction": "What are the key components of Kubernetes control plane?", "output": "The key components include the API server, controller manager, scheduler, and etcd. Together, they process requests, maintain cluster state, and ensure that workloads run as expected."}
{"type": "kubectl", "instruction": "Explain how to implement data encryption at rest in Kubernetes.", "output": "Encrypting data at rest involves enabling encryption on the etcd datastore. This ensures that sensitive configuration data and secrets are stored securely, protecting them from unauthorized access."}
{"type": "kubectl", "instruction": "Describe how to use Kubernetes to deploy microservices architectures.", "output": "Kubernetes supports microservices by managing stateless and stateful services with features like service discovery, scaling, and isolation. This enables efficient deployment and management of loosely coupled services."}
{"type": "kubectl", "instruction": "What is the role of the Kubernetes Event Recorder?", "output": "The Kubernetes Event Recorder logs significant events in the cluster, such as pod creations or resource changes. These events provide valuable insights into cluster operations and are essential for debugging."}
{"type": "kubectl", "instruction": "Explain how to manage resource contention in Kubernetes.", "output": "Resource contention is managed by setting resource requests and limits. This ensures that no single container can monopolize resources, allowing balanced distribution across all deployed applications."}
{"type": "kubectl", "instruction": "Describe the purpose of Kubernetes resource limits.", "output": "Resource limits restrict the maximum amount of CPU and memory that a container can use. This protects the cluster by preventing runaway processes that could otherwise degrade performance."}
{"type": "kubectl", "instruction": "What is the significance of using Quality of Service (QoS) classes in Kubernetes?", "output": "QoS classes categorize pods based on their resource requests and limits. This classification helps the scheduler prioritize resource allocation and maintain performance under heavy load."}
{"type": "kubectl", "instruction": "Explain how to set up a Kubernetes cluster with a custom CNI plugin.", "output": "Setting up a custom CNI plugin involves installing and configuring the network plugin that meets your specific networking needs. This allows for tailored network performance and policy enforcement within your cluster."}
{"type": "kubectl", "instruction": "Describe the concept of self-healing in Kubernetes.", "output": "Self-healing in Kubernetes refers to its ability to detect failures and automatically restart or replace unhealthy pods. This ensures that applications remain available despite individual component failures."}
{"type": "kubectl", "instruction": "What role does the Kubernetes API aggregator play?", "output": "The API aggregator allows Kubernetes to serve additional APIs from third-party services. This integration extends the clusters functionality without modifying the core API server."}
{"type": "kubectl", "instruction": "Explain how to use Kubernetes secrets with Pod Security Policies.", "output": "Combining Kubernetes secrets with Pod Security Policies ensures that only pods meeting strict security criteria can access sensitive data. This pairing strengthens data protection in regulated environments."}
{"type": "kubectl", "instruction": "Describe the impact of network latency on Kubernetes applications.", "output": "Network latency can slow down inter-service communication and affect application performance. Optimizing network configurations and using efficient routing protocols can help mitigate these delays."}
{"type": "kubectl", "instruction": "What is the role of the kube-controller-manager in managing cluster state?", "output": "The kube-controller-manager runs essential controllers that monitor and adjust the cluster state. It ensures that the actual state of resources matches the desired state defined by users."}
{"type": "kubectl", "instruction": "Explain how to optimize Kubernetes cluster performance.", "output": "Optimizing performance involves tuning resource allocations, adjusting scheduling policies, and monitoring key metrics. Continuous analysis and adjustments help minimize bottlenecks and improve overall efficiency."}
{"type": "kubectl", "instruction": "Describe the process of managing rolling updates in Kubernetes deployments.", "output": "Rolling updates replace old pods with updated ones incrementally. This process minimizes downtime and allows the system to maintain availability while ensuring that updates are deployed safely."}
{"type": "kubectl", "instruction": "What is the significance of Kubernetes readiness probes in production deployments?", "output": "Readiness probes ensure that pods are prepared to receive traffic before being added to a service. This helps maintain application stability by routing requests only to fully functional pods."}
{"type": "kubectl", "instruction": "Explain how Kubernetes handles scheduled job failures.", "output": "Kubernetes manages job failures by providing retry mechanisms and logging errors. Failed CronJobs or scheduled tasks can be retried or further investigated to ensure that periodic tasks complete successfully."}
{"type": "kubectl", "instruction": "Describe the importance of namespace isolation in multi-team Kubernetes deployments.", "output": "Namespace isolation segregates resources for different teams or projects. This separation prevents resource conflicts, enhances security, and simplifies management in multi-tenant environments."}
{"type": "kubectl", "instruction": "What are the benefits of using a centralized logging system in Kubernetes?", "output": "Centralized logging aggregates logs from all cluster components, making it easier to analyze and troubleshoot issues. It provides a unified view of system activity and facilitates rapid incident response."}
{"type": "kubectl", "instruction": "Explain the concept of pod affinity and how it is applied in Kubernetes.", "output": "Pod affinity guides the scheduler to place related pods on the same or nearby nodes. This enhances performance by reducing network latency and simplifies inter-pod communication for related services."}
{"type": "kubectl", "instruction": "Describe the role of pod anti-affinity in avoiding resource contention.", "output": "Pod anti-affinity prevents pods from being scheduled on the same node if they might compete for resources. This strategy improves overall performance and reliability by spreading workloads evenly."}
{"type": "kubectl", "instruction": "What is the purpose of the Kubernetes API aggregation layer?", "output": "The API aggregation layer enables external APIs to be served within the Kubernetes ecosystem. It extends the clusters capabilities by integrating additional services under a unified interface."}
{"type": "kubectl", "instruction": "Explain how to configure persistent volume recycling in Kubernetes.", "output": "Persistent volume recycling sets up policies to automatically reclaim and repurpose storage from deleted volumes. This approach optimizes resource usage and minimizes manual intervention for storage management."}
{"type": "kubectl", "instruction": "Describe how Kubernetes supports hybrid cloud deployments.", "output": "Kubernetes supports hybrid cloud setups by integrating on-premise clusters with public cloud services. This flexibility enables workloads to run seamlessly across different infrastructures."}
{"type": "kubectl", "instruction": "What are the key considerations when designing a Kubernetes network policy?", "output": "Designing a network policy requires understanding your applications traffic flow, defining precise ingress and egress rules, and ensuring that security measures do not interfere with essential communication."}
{"type": "kubectl", "instruction": "Explain the process of integrating Kubernetes with external load balancers.", "output": "Integration involves configuring Kubernetes services of type LoadBalancer, which automatically provisions an external IP and routes traffic to the appropriate pods, balancing the load efficiently."}
{"type": "kubectl", "instruction": "Describe how to manage secrets rotation in Kubernetes.", "output": "Secrets rotation involves updating sensitive information stored within the cluster on a regular basis. Automated pipelines and operator tools can be used to rotate and redeploy secrets without impacting running applications."}
{"type": "kubectl", "instruction": "What is the significance of using init containers in Kubernetes deployments?", "output": "Init containers run before the main application container and perform initialization tasks. They help set up necessary conditions, ensuring that the primary container starts with the proper environment in place."}
{"type": "kubectl", "instruction": "Explain how Kubernetes handles container image pulling and caching.", "output": "Kubernetes pulls container images from registries when needed and caches them locally on nodes. This reduces latency during pod startup and helps conserve network bandwidth."}
{"type": "kubectl", "instruction": "Describe how to manage Kubernetes clusters using the kubectl command-line tool.", "output": "kubectl is the primary CLI for interacting with Kubernetes clusters. It enables users to deploy, inspect, and manage resources, making it a critical tool for cluster administration and troubleshooting."}
{"type": "kubectl", "instruction": "What is the role of the kubeadm tool in Kubernetes?", "output": "kubeadm is used to bootstrap a Kubernetes cluster. It automates the setup of control plane components and worker nodes, simplifying the process of creating a secure and functional cluster."}
{"type": "kubectl", "instruction": "Explain how to handle node failures in a Kubernetes cluster.", "output": "When a node fails, Kubernetes automatically reschedules its pods to healthy nodes. Mechanisms like node taints and probes help the system detect failures and redistribute workloads to maintain service availability."}
{"type": "kubectl", "instruction": "Describe the use of labels for resource management in Kubernetes.", "output": "Labels provide metadata that helps group and select resources in Kubernetes. They are essential for managing deployments, performing rolling updates, and applying policies to specific sets of objects."}
{"type": "kubectl", "instruction": "What is the purpose of using finalizers in Kubernetes?", "output": "Finalizers ensure that certain cleanup actions occur before a resource is permanently deleted. They block deletion until custom logic completes, preserving data integrity and external dependencies."}
{"type": "kubectl", "instruction": "Explain how to manage cluster upgrades in Kubernetes.", "output": "Cluster upgrades involve updating both the control plane and worker nodes. Strategies like rolling upgrades, combined with backup and rollback procedures, help minimize downtime during the upgrade process."}
{"type": "kubectl", "instruction": "Describe the concept of infrastructure as code in the context of Kubernetes.", "output": "Infrastructure as code treats Kubernetes configuration files as code. This enables version control, automated deployment, and consistent environments through declarative specifications stored in systems like Git."}
{"type": "kubectl", "instruction": "What are the benefits of using Kubernetes with cloud-native applications?", "output": "Kubernetes offers scalability, high availability, and simplified deployment. These features make it an ideal platform for cloud-native applications, enabling rapid iterations and efficient resource management."}
{"type": "kubectl", "instruction": "Explain how to set up a private Docker registry for Kubernetes deployments.", "output": "A private Docker registry involves deploying a secure image repository. Configuring Kubernetes to authenticate against this registry ensures controlled access and faster image retrieval for deployments."}
{"type": "kubectl", "instruction": "Describe the role of service discovery mechanisms in Kubernetes.", "output": "Service discovery in Kubernetes uses DNS and environment variables to keep track of service locations. This dynamic resolution mechanism allows applications to find and connect to other services without hardcoding addresses."}
{"type": "kubectl", "instruction": "What is the function of kube-dns in a Kubernetes cluster?", "output": "kube-dns provides a DNS service within Kubernetes, enabling pods to resolve service names to IP addresses. This makes inter-service communication dynamic and scalable as pod IPs change over time."}
{"type": "kubectl", "instruction": "Explain how to use taints and tolerations to manage pod placement.", "output": "Taints repel pods from specific nodes, while tolerations allow pods to ignore these taints. This mechanism, when used together, manages pod placement based on node characteristics and workload requirements."}
{"type": "kubectl", "instruction": "Describe the process of updating Kubernetes resource definitions.", "output": "Updating resource definitions involves modifying YAML manifests and applying them with kubectl. Kubernetes then reconciles the desired state with the current state, ensuring changes are implemented gradually."}
{"type": "kubectl", "instruction": "What is the role of the Kubernetes Metrics Server?", "output": "The Metrics Server collects and aggregates resource usage data such as CPU and memory. This information is critical for informed autoscaling decisions and overall performance monitoring."}
{"type": "kubectl", "instruction": "Explain how to troubleshoot Kubernetes deployment failures.", "output": "Troubleshooting deployment failures involves examining pod logs, events, and status messages. By comparing the desired and actual state, you can identify configuration errors or resource constraints causing the failure."}
{"type": "kubectl", "instruction": "Describe how Kubernetes manages ephemeral storage.", "output": "Kubernetes allocates local storage for temporary data inside a pod. This ephemeral storage is discarded when the pod terminates, ensuring that temporary data does not persist unnecessarily."}
{"type": "kubectl", "instruction": "What are the security best practices for handling Kubernetes secrets?", "output": "Best practices include encrypting secrets at rest, using RBAC to restrict access, and rotating credentials regularly. These practices help ensure that sensitive data remains secure within the cluster."}
{"type": "kubectl", "instruction": "Explain the role of service accounts in Kubernetes automation.", "output": "Service accounts provide identities for pods to interact with the Kubernetes API. They enable automated processes to access the cluster securely and are integral to implementing fine-grained access control."}
{"type": "kubectl", "instruction": "Describe how to implement custom logging formats in Kubernetes.", "output": "Custom logging formats can be implemented by configuring logging agents or using sidecar containers dedicated to log processing. This ensures consistency and enhances the clarity of log data for easier analysis."}
{"type": "kubectl", "instruction": "What is the importance of monitoring API server latency in Kubernetes?", "output": "Monitoring API server latency helps ensure that the cluster responds to requests in a timely manner. Latency metrics can indicate performance bottlenecks or issues with cluster responsiveness."}
{"type": "kubectl", "instruction": "Explain how Kubernetes handles resource pressure and throttling.", "output": "Kubernetes manages resource pressure using limits and quotas. Throttling mechanisms prevent any one container from overusing resources, ensuring a balanced distribution across all applications."}
{"type": "kubectl", "instruction": "Describe the process of debugging pod startup failures in Kubernetes.", "output": "Debugging startup failures involves checking container logs, startup probes, and events. This information helps identify issues such as misconfigurations or missing dependencies that prevent pods from starting correctly."}
{"type": "kubectl", "instruction": "What is the role of containers health checks in Kubernetes operations?", "output": "Health checks, including readiness and liveness probes, verify that containers are running as expected. They signal when a container is ready to accept traffic or needs to be restarted, thereby maintaining application reliability."}
{"type": "kubectl", "instruction": "Explain how to manage stateful applications using Kubernetes StatefulSets.", "output": "StatefulSets manage stateful applications by providing stable persistent storage and unique network identities for each pod. This ensures that each replica maintains its identity and stored data even during updates."}
{"type": "kubectl", "instruction": "Describe how to integrate Kubernetes with a continuous monitoring system.", "output": "Integration with a continuous monitoring system involves deploying agents that collect metrics, logs, and events. These data streams feed into dashboards and alerting systems for real-time cluster health assessment."}
{"type": "kubectl", "instruction": "What is the significance of using admission controllers in securing Kubernetes clusters?", "output": "Admission controllers enforce policies and validate configurations before resources are committed to the cluster. They act as a gatekeeper, ensuring that only secure and compliant objects are admitted."}
{"type": "kubectl", "instruction": "Explain how to implement resource tagging in Kubernetes.", "output": "Resource tagging involves using labels to mark Kubernetes objects with metadata such as environment, owner, or department. These tags simplify monitoring, billing, and management by categorizing resources effectively."}
{"type": "kubectl", "instruction": "Describe the importance of using a service mesh for traffic management in Kubernetes.", "output": "A service mesh provides advanced traffic management capabilities like load balancing, retries, and circuit breaking. It simplifies inter-service communication and improves resilience without modifying application code."}
{"type": "kubectl", "instruction": "What are the benefits of using Kubernetes secrets with encrypted storage backends?", "output": "Storing secrets with encrypted backends adds an extra layer of security. This ensures that sensitive data remains protected even if the underlying storage media are compromised."}
{"type": "kubectl", "instruction": "Explain how to configure fallback strategies for failed Kubernetes deployments.", "output": "Fallback strategies include setting up rollbacks, canary deployments, and monitoring automated alerts. These strategies help quickly revert to a stable version if new deployments fail."}
{"type": "kubectl", "instruction": "Describe the role of dynamic provisioning in Kubernetes storage management.", "output": "Dynamic provisioning automatically creates persistent volumes when a Persistent Volume Claim is made. This process streamlines storage allocation by reducing manual intervention and optimizing resource usage."}
{"type": "kubectl", "instruction": "What is the purpose of the Kubernetes Horizontal Pod Autoscaler?", "output": "The Horizontal Pod Autoscaler automatically scales the number of pod replicas based on observed metrics like CPU usage. This ensures that applications can adapt to changing workloads efficiently."}
{"type": "kubectl", "instruction": "Explain how to implement version control for Kubernetes manifests.", "output": "Version control for Kubernetes manifests involves storing YAML files in systems like Git. This practice provides traceability, easy rollbacks, and collaborative management of infrastructure changes."}
{"type": "kubectl", "instruction": "Describe how Kubernetes helps in managing disaster recovery.", "output": "Kubernetes supports disaster recovery through automated backups, multi-zone deployments, and rapid rollbacks. These features allow the cluster to quickly recover from unexpected failures."}
{"type": "clarification", "instruction": "Delete the resource.", "output": "Could you please specify the type and name of the resource you want to delete?"}
{"type": "clarification", "instruction": "Scale up the deployment.", "output": "Please provide the name of the deployment and the number of replicas youd like to scale to."}
{"type": "clarification", "instruction": "Get logs.", "output": "Which pods logs would you like to retrieve?"}
{"type": "clarification", "instruction": "Create a namespace.", "output": "Could you provide the name for the new namespace?"}
{"type": "clarification", "instruction": "Expose my application.", "output": "Please specify the deployment name and the port number to expose."}
{"type": "clarification", "instruction": "Show me events.", "output": "Do you want to see events in a specific namespace or for a specific resource?"}
{"type": "clarification", "instruction": "Run a command in a pod.", "output": "Could you specify the pod name and the command youd like to run?"}
{"type": "clarification", "instruction": "Get the configmap.", "output": "Please provide the name of the ConfigMap you want to retrieve."}
{"type": "clarification", "instruction": "Delete a deployment.", "output": "Which deployment would you like to delete?"}
{"type": "clarification", "instruction": "Roll out restart.", "output": "Please specify the deployment you want to restart."}
{"type": "clarification", "instruction": "Delete pods.", "output": "Do you want to delete specific pods or all pods in a namespace?"}
{"type": "clarification", "instruction": "Label the node.", "output": "Please provide the node name and the label youd like to add."}
{"type": "clarification", "instruction": "Attach to the container.", "output": "Could you specify the pod name and the container if applicable?"}
{"type": "clarification", "instruction": "Patch the resource.", "output": "Please provide the resource type, name, and the patch data or file."}
{"type": "clarification", "instruction": "Get resource usage.", "output": "Would you like to see resource usage for nodes or pods?"}
{"type": "clarification", "instruction": "Set the image.", "output": "Please specify the deployment name, container name, and the new image."}
{"type": "clarification", "instruction": "Scale the statefulset.", "output": "Please provide the name of the StatefulSet and the desired number of replicas."}
{"type": "clarification", "instruction": "Delete the ingress.", "output": "Could you provide the name of the Ingress you want to delete?"}
{"type": "clarification", "instruction": "Apply configurations.", "output": "Please specify the file or directory containing the configurations to apply."}
{"type": "clarification", "instruction": "Get secrets.", "output": "Do you want to list all secrets or a specific secret? Please specify the namespace if applicable."}
{"type": "clarification", "instruction": "Explain resource.", "output": "Which resource would you like me to explain?"}
{"type": "clarification", "instruction": "Port-forward.", "output": "Please provide the pod name and the port mappings youd like to set up."}
{"type": "clarification", "instruction": "Get the service.", "output": "Could you provide the name of the service youre interested in?"}
{"type": "clarification", "instruction": "Delete the job.", "output": "Please specify the name of the Job you want to delete."}
{"type": "clarification", "instruction": "Uncordon node.", "output": "Could you provide the name of the node you wish to uncordon?"}
{"type": "clarification", "instruction": "Drain node.", "output": "Please specify the name of the node youd like to drain."}
{"type": "clarification", "instruction": "Get deployments.", "output": "Do you want to list deployments in a specific namespace?"}
{"type": "clarification", "instruction": "Describe the resource.", "output": "Which resource would you like to describe? Please specify the type and name."}
{"type": "clarification", "instruction": "Create a configmap.", "output": "Please provide the name of the ConfigMap and the data source (file or literal values)."}
{"type": "clarification", "instruction": "Create a secret.", "output": "Could you specify the name of the secret and how youd like to create it (from literals or file)?"}
{"type": "clarification", "instruction": "Set context.", "output": "Please provide the name of the context youd like to switch to."}
{"type": "clarification", "instruction": "Get contexts.", "output": "Would you like to list all available contexts?"}
{"type": "clarification", "instruction": "Rollback deployment.", "output": "Please specify the name of the deployment youd like to rollback."}
{"type": "clarification", "instruction": "Scale down.", "output": "Could you provide the resource type, name, and the desired number of replicas?"}
{"type": "clarification", "instruction": "Get resource quotas.", "output": "Do you want to list resource quotas in a specific namespace?"}
{"type": "clarification", "instruction": "Monitor resources.", "output": "Which resources would you like to monitor? Pods, nodes, or another resource type?"}
{"type": "clarification", "instruction": "Delete the pod.", "output": "Please provide the name of the pod you want to delete."}
{"type": "clarification", "instruction": "Restart the pod.", "output": "Pods cannot be restarted directly. Would you like to delete the pod to allow it to be recreated by its controller?"}
{"type": "clarification", "instruction": "Create deployment.", "output": "Please provide the name of the deployment and the image youd like to use."}
{"type": "clarification", "instruction": "Get storage classes.", "output": "Would you like to list all available storage classes?"}
{"type": "clarification", "instruction": "Delete the service account.", "output": "Please specify the name of the service account to delete and the namespace if applicable."}
{"type": "clarification", "instruction": "Suspend the cronjob.", "output": "Please provide the name of the CronJob youd like to suspend."}
{"type": "clarification", "instruction": "Resume the cronjob.", "output": "Please specify the name of the CronJob youd like to resume."}
{"type": "clarification", "instruction": "Check the status.", "output": "Please specify the resource type and name whose status youd like to check."}
{"type": "clarification", "instruction": "Create a Pod.", "output": "Could you provide the name of the Pod and the image youd like to use?"}
{"type": "clarification", "instruction": "Explain.", "output": "Please specify the resource or command youd like me to explain."}
{"type": "clarification", "instruction": "Get ingress.", "output": "Do you want to list all Ingress resources or a specific one? Please specify the namespace if applicable."}
{"type": "clarification", "instruction": "Create a service.", "output": "Please provide the service name, type, and other necessary specifications."}
{"type": "clarification", "instruction": "Delete the PersistentVolume.", "output": "Could you specify the name of the PersistentVolume you want to delete?"}
{"type": "clarification", "instruction": "Get roles.", "output": "Do you want to list Roles in a specific namespace or ClusterRoles?"}
{"type": "clarification", "instruction": "Bind role.", "output": "Please provide the role name, subject, and role binding name."}
{"type": "clarification", "instruction": "List clusters.", "output": "Kubernetes does not have a clusters resource. Do you want to get cluster information using kubectl cluster-info?"}
{"type": "clarification", "instruction": "Update node selector.", "output": "Please specify the deployment and the new node selector (key=value)."}
{"type": "clarification", "instruction": "Add pod tolerations.", "output": "Please provide the pod name and the toleration configuration."}
{"type": "clarification", "instruction": "List all pods.", "output": "Do you want pods from a specific namespace or all namespaces?"}
{"type": "clarification", "instruction": "List all services.", "output": "Would you like to list services in a specific namespace or across the cluster?"}
{"type": "clarification", "instruction": "Update environment variables.", "output": "Please specify the deployment name, container name, and environment variables to update."}
{"type": "clarification", "instruction": "Attach a persistent volume claim to pod.", "output": "Please provide the pod name and the PVC details."}
{"type": "clarification", "instruction": "Remove a persistent volume claim from pod.", "output": "Please provide the pod name and the PVC name to remove."}
{"type": "clarification", "instruction": "Update resource limits for a container.", "output": "Please provide the deployment name, container name, and new resource limits."}
{"type": "clarification", "instruction": "Patch a service.", "output": "Please provide the service name and the patch information."}
{"type": "clarification", "instruction": "Restart deployment rollout.", "output": "Please specify the deployment name to restart the rollout."}
{"type": "clarification", "instruction": "List daemonsets.", "output": "Would you like to list daemonsets in a specific namespace?"}
{"type": "clarification", "instruction": "Describe a daemonset.", "output": "Please provide the daemonset name and its namespace."}
{"type": "clarification", "instruction": "Update daemonset image.", "output": "Please provide the daemonset name, container name, and new image."}
{"type": "clarification", "instruction": "Get pod status.", "output": "Please provide the pod name and namespace for status details."}
{"type": "clarification", "instruction": "Label a pod.", "output": "Please provide the pod name and the label key-value pair to add."}
{"type": "clarification", "instruction": "Annotate a resource.", "output": "Please provide the resource type, name, and the annotation key-value pair."}
{"type": "clarification", "instruction": "Export a resource definition.", "output": "Please specify the resource type and name to export."}
{"type": "clarification", "instruction": "Convert a manifest to JSON.", "output": "Please provide the YAML file path to convert to JSON."}
{"type": "clarification", "instruction": "Create a job.", "output": "Please provide the job name and the job specification."}
{"type": "clarification", "instruction": "Delete a job run.", "output": "Please specify the job name and the run identifier, if applicable."}
{"type": "clarification", "instruction": "List job runs.", "output": "Do you want to list job runs for a specific job?"}
{"type": "clarification", "instruction": "Explain a command flag.", "output": "Please specify the command and the flag you need explained."}
{"type": "clarification", "instruction": "Show node conditions.", "output": "Please provide the node name to see its conditions."}
{"type": "clarification", "instruction": "Cordon a node.", "output": "Please provide the node name you wish to cordon."}
{"type": "clarification", "instruction": "Update service type.", "output": "Please provide the service name and the new service type (e.g., ClusterIP, NodePort, LoadBalancer)."}
{"type": "clarification", "instruction": "Edit a configmap.", "output": "Please provide the configmap name and the updated data."}
{"type": "clarification", "instruction": "List configmaps.", "output": "Do you want to list configmaps in a specific namespace?"}
{"type": "clarification", "instruction": "Show secret details.", "output": "Please provide the secret name and its namespace."}
{"type": "clarification", "instruction": "Rotate secret keys.", "output": "Please specify the secret name and the rotation parameters."}
{"type": "clarification", "instruction": "Create a new secret from literals.", "output": "Please provide the secret name and literal key-value pairs."}
{"type": "clarification", "instruction": "Export a namespace configuration.", "output": "Please provide the namespace name to export its configuration."}
{"type": "clarification", "instruction": "Import a namespace configuration.", "output": "Please provide the file containing the namespace configuration."}
{"type": "clarification", "instruction": "Patch a deployment strategy.", "output": "Please specify the deployment name and the new strategy details."}
{"type": "clarification", "instruction": "Update deployment labels.", "output": "Please provide the deployment name and the labels to update."}
{"type": "clarification", "instruction": "Set deployment annotations.", "output": "Please specify the deployment name and the annotations to add."}
{"type": "clarification", "instruction": "Rollback a daemonset.", "output": "Please specify the daemonset name and the revision to rollback to."}
{"type": "clarification", "instruction": "List replica sets.", "output": "Would you like to list replica sets in a specific namespace?"}
{"type": "clarification", "instruction": "Describe a replica set.", "output": "Please provide the replica set name and its namespace."}
{"type": "clarification", "instruction": "Scale a replica set.", "output": "Please specify the replica set name and the desired replica count."}
{"type": "clarification", "instruction": "Delete a replica set.", "output": "Please provide the replica set name you want to delete."}
{"type": "clarification", "instruction": "Get replica set details.", "output": "Please provide the replica set name for further details."}
{"type": "clarification", "instruction": "Monitor deployment rollout status.", "output": "Please specify the deployment name to monitor its rollout status."}
{"type": "clarification", "instruction": "Update service annotations.", "output": "Please provide the service name and the annotations to update."}
{"type": "clarification", "instruction": "Expose a pod.", "output": "Please provide the pod name and the port details to expose."}
{"type": "clarification", "instruction": "Create a headless service.", "output": "Please provide the service name and the selector details."}
{"type": "clarification", "instruction": "Update ingress annotations.", "output": "Please provide the ingress name and the new annotations."}
{"type": "clarification", "instruction": "List ingress rules.", "output": "Would you like to list all ingress rules in a specific namespace?"}
{"type": "clarification", "instruction": "Describe an ingress controller.", "output": "Please provide the ingress controller name for details."}
{"type": "clarification", "instruction": "Set ingress TLS configuration.", "output": "Please specify the ingress name and the TLS details."}
{"type": "clarification", "instruction": "Patch an ingress rule.", "output": "Please provide the ingress name and the patch details for the rule."}
{"type": "clarification", "instruction": "Display cluster roles.", "output": "Would you like to list all cluster roles?"}
{"type": "clarification", "instruction": "Describe a cluster role.", "output": "Please provide the cluster role name to get detailed information."}
{"type": "clarification", "instruction": "Update cluster role bindings.", "output": "Please specify the cluster role binding name and the subjects to update."}
{"type": "clarification", "instruction": "Create a role binding.", "output": "Please provide the role name, subject, and a binding name for the role binding."}
{"type": "clarification", "instruction": "Delete a role binding.", "output": "Please specify the role binding name you want to delete."}
{"type": "clarification", "instruction": "List role bindings.", "output": "Would you like to list role bindings in a specific namespace?"}
{"type": "clarification", "instruction": "Update pod security policy.", "output": "Please provide the pod security policy name and the desired modifications."}
{"type": "clarification", "instruction": "Create a pod security policy.", "output": "Please provide the name and specifications for the new pod security policy."}
{"type": "clarification", "instruction": "Delete a pod security policy.", "output": "Please specify the pod security policy name to delete."}
{"type": "clarification", "instruction": "List pod security policies.", "output": "Would you like to list all pod security policies?"}
{"type": "clarification", "instruction": "Export pod logs to a file.", "output": "Please specify the pod name, namespace, and file path for exporting logs."}
{"type": "clarification", "instruction": "Stream pod logs.", "output": "Please provide the pod name and container (if applicable) to stream logs."}
{"type": "clarification", "instruction": "Tail pod logs.", "output": "Please provide the pod name and the number of log lines to tail."}
{"type": "clarification", "instruction": "Describe a StatefulSet.", "output": "Please provide the StatefulSet name and its namespace."}
{"type": "clarification", "instruction": "List StatefulSets.", "output": "Would you like to list StatefulSets in a specific namespace?"}
{"type": "clarification", "instruction": "Update StatefulSet strategy.", "output": "Please provide the StatefulSet name and the new update strategy."}
{"type": "clarification", "instruction": "Create a StatefulSet.", "output": "Please provide the StatefulSet name, image, and replica count."}
{"type": "clarification", "instruction": "Delete a StatefulSet.", "output": "Please specify the StatefulSet name to delete."}
{"type": "clarification", "instruction": "Update StatefulSet volume claim.", "output": "Please provide the StatefulSet name and the volume claim modifications."}
{"type": "clarification", "instruction": "Patch a pod.", "output": "Please provide the pod name and the patch data."}
{"type": "clarification", "instruction": "Annotate a pod.", "output": "Please provide the pod name and the annotation key-value pair to add."}
{"type": "clarification", "instruction": "Remove node label.", "output": "Please provide the node name and the label key you wish to remove."}
{"type": "clarification", "instruction": "List nodes.", "output": "Would you like to list all nodes or filter by a specific label?"}
{"type": "clarification", "instruction": "Describe a node.", "output": "Please provide the node name to retrieve detailed information."}
{"type": "clarification", "instruction": "Update node taints.", "output": "Please specify the node name and the taint changes."}
{"type": "clarification", "instruction": "Remove node taint.", "output": "Please provide the node name and the taint key to remove."}
{"type": "clarification", "instruction": "Create a custom resource definition.", "output": "Please provide the CRD name and its full specification."}
{"type": "clarification", "instruction": "Delete a custom resource definition.", "output": "Please specify the CRD name to delete."}
{"type": "clarification", "instruction": "List custom resource definitions.", "output": "Would you like to list all custom resource definitions (CRDs)?"}
{"type": "clarification", "instruction": "Describe a custom resource definition.", "output": "Please provide the CRD name for further details."}
{"type": "clarification", "instruction": "Apply a label selector.", "output": "Please specify the label key-value pair to filter the resources."}
{"type": "clarification", "instruction": "Export deployment YAML.", "output": "Please provide the deployment name to export its YAML configuration."}
{"type": "clarification", "instruction": "Import deployment YAML.", "output": "Please provide the file path for the deployment YAML to apply."}
{"type": "clarification", "instruction": "Convert YAML to JSON for resource.", "output": "Please provide the YAML file and resource type for conversion."}
{"type": "clarification", "instruction": "Update container ports.", "output": "Please specify the deployment name, container name, and the new port configuration."}
{"type": "clarification", "instruction": "Set readiness probe.", "output": "Please provide the pod or deployment name and the readiness probe settings."}
{"type": "clarification", "instruction": "Set liveness probe.", "output": "Please specify the pod or deployment name and the liveness probe settings."}
{"type": "clarification", "instruction": "Remove readiness probe.", "output": "Please provide the pod or deployment name to remove the readiness probe."}
{"type": "clarification", "instruction": "Remove liveness probe.", "output": "Please specify the pod or deployment name to remove the liveness probe."}
{"type": "clarification", "instruction": "Configure pod affinity.", "output": "Please provide the pod name and the desired affinity rules."}
{"type": "clarification", "instruction": "Configure pod anti-affinity.", "output": "Please specify the pod name and the anti-affinity rules."}
{"type": "clarification", "instruction": "Update service selectors.", "output": "Please provide the service name and the new selector labels."}
{"type": "clarification", "instruction": "Switch service port.", "output": "Please specify the service name and the new port configuration."}
{"type": "clarification", "instruction": "Update deployment strategy parameters.", "output": "Please provide the deployment name and the strategy parameters to update."}
{"type": "clarification", "instruction": "List events by type.", "output": "Please specify the event type (e.g., Warning or Normal) and the namespace if applicable."}
{"type": "clarification", "instruction": "Monitor real-time events.", "output": "Would you like to stream events from a specific namespace?"}
{"type": "clarification", "instruction": "Audit cluster events.", "output": "Please provide the time range and event type for the audit."}
{"type": "clarification", "instruction": "Create a backup of resource definitions.", "output": "Please specify the resource types and the output file location for backup."}
{"type": "clarification", "instruction": "Restore resource definitions.", "output": "Please provide the backup file and the resource type to restore."}
{"type": "clarification", "instruction": "List available API versions.", "output": "Would you like to list all API versions available in the cluster?"}
{"type": "clarification", "instruction": "Check API resource availability.", "output": "Please specify the resource type to check its availability."}
{"type": "clarification", "instruction": "Query resource in a namespace.", "output": "Please provide the resource type and the namespace to query."}
{"type": "clarification", "instruction": "Set resource limits for deployment.", "output": "Please specify the deployment name and the new resource limits."}
{"type": "clarification", "instruction": "Remove resource limits from container.", "output": "Please provide the deployment name and the container name to remove limits."}
{"type": "clarification", "instruction": "Update persistent volume configuration.", "output": "Please specify the persistent volume name and the new configuration parameters."}
{"type": "clarification", "instruction": "Create a persistent volume claim.", "output": "Please provide the PVC name, storage class, and size."}
{"type": "clarification", "instruction": "Delete a persistent volume claim.", "output": "Please specify the PVC name and its namespace to delete."}
{"type": "clarification", "instruction": "List persistent volume claims.", "output": "Would you like to list PVCs in a specific namespace?"}
{"type": "clarification", "instruction": "Describe a persistent volume.", "output": "Please provide the persistent volume name for details."}
{"type": "clarification", "instruction": "Update persistent volume reclaim policy.", "output": "Please specify the persistent volume name and the new reclaim policy."}
{"type": "clarification", "instruction": "Create a backup job.", "output": "Please provide the backup job name and its specifications."}
{"type": "clarification", "instruction": "Delete a backup job.", "output": "Please specify the backup job name you wish to delete."}
{"type": "clarification", "instruction": "List backup jobs.", "output": "Would you like to list backup jobs in a specific namespace?"}
{"type": "clarification", "instruction": "Describe a backup job.", "output": "Please provide the backup job name for further details."}
{"type": "clarification", "instruction": "Schedule a cron job.", "output": "Please provide the CronJob name, schedule, and job template details."}
{"type": "clarification", "instruction": "Delete a scheduled cron job.", "output": "Please specify the CronJob name you wish to delete."}
{"type": "clarification", "instruction": "List scheduled cron jobs.", "output": "Would you like to list cron jobs in a specific namespace?"}
{"type": "clarification", "instruction": "Describe a cron job schedule.", "output": "Please provide the CronJob name to see its schedule details."}
{"type": "clarification", "instruction": "Suspend a backup job.", "output": "Please specify the backup job name to suspend."}
{"type": "clarification", "instruction": "Resume a backup job.", "output": "Please specify the backup job name to resume."}
{"type": "clarification", "instruction": "Trigger a manual job run.", "output": "Please provide the job name to trigger a manual run."}
{"type": "clarification", "instruction": "List manual job triggers.", "output": "Would you like to list manual triggers for a specific job?"}
{"type": "clarification", "instruction": "Monitor job execution.", "output": "Please provide the job name to monitor its execution status."}
{"type": "clarification", "instruction": "Query job completion status.", "output": "Please specify the job name to check its completion status."}
{"type": "clarification", "instruction": "Set job restart policy.", "output": "Please provide the job name and the desired restart policy."}
{"type": "clarification", "instruction": "Update container image pull policy.", "output": "Please specify the deployment name, container name, and the new pull policy."}
{"type": "clarification", "instruction": "List container images.", "output": "Would you like to list images used in a specific namespace?"}
{"type": "clarification", "instruction": "Describe container runtime version.", "output": "Please specify the node name to get the container runtime version details."}
{"type": "clarification", "instruction": "Update node kernel parameters.", "output": "Please provide the node name and the kernel parameter modifications."}
{"type": "clarification", "instruction": "Reboot a node.", "output": "Please specify the node name and confirm if you wish to initiate a reboot."}
{"type": "clarification", "instruction": "Drain a node gracefully.", "output": "Please provide the node name and the grace period for draining."}
{"type": "clarification", "instruction": "List available storage plugins.", "output": "Would you like to list storage plugins available in the cluster?"}
{"type": "clarification", "instruction": "Describe a storage plugin.", "output": "Please provide the storage plugin name for further details."}
{"type": "clarification", "instruction": "Update storage class parameters.", "output": "Please specify the storage class name and the new parameters."}
{"type": "clarification", "instruction": "Create a new storage class.", "output": "Please provide the storage class name, provisioner, and parameters."}
{"type": "clarification", "instruction": "Delete a storage class.", "output": "Please specify the storage class name to delete."}
{"type": "clarification", "instruction": "List volume snapshots.", "output": "Would you like to list volume snapshots in a specific namespace?"}
{"type": "clarification", "instruction": "Create a volume snapshot.", "output": "Please provide the volume snapshot name and the source PVC."}
{"type": "clarification", "instruction": "Delete a volume snapshot.", "output": "Please specify the volume snapshot name to delete."}
{"type": "clarification", "instruction": "Describe a volume snapshot.", "output": "Please provide the volume snapshot name for details."}
{"type": "clarification", "instruction": "List volume snapshot classes.", "output": "Would you like to list all volume snapshot classes?"}
{"type": "clarification", "instruction": "Create a volume snapshot class.", "output": "Please provide the snapshot class name and the provisioner details."}
{"type": "clarification", "instruction": "Delete a volume snapshot class.", "output": "Please specify the snapshot class name to delete."}
{"type": "clarification", "instruction": "Monitor container restart count.", "output": "Please provide the pod name to monitor its restart count."}
{"type": "clarification", "instruction": "Update cluster DNS settings.", "output": "Please provide the new DNS settings for the cluster."}
{"type": "clarification", "instruction": "Get cluster version info.", "output": "Would you like to retrieve the current cluster version information?"}
{"type": "clarification", "instruction": "List cluster nodes by label.", "output": "Please specify the label to filter nodes by."}
{"type": "clarification", "instruction": "Describe cluster network policies.", "output": "Please provide the network policy name and its namespace."}
{"type": "clarification", "instruction": "Create a network policy.", "output": "Please provide the network policy name, namespace, and specifications."}
{"type": "clarification", "instruction": "Delete a network policy.", "output": "Please specify the network policy name you wish to delete."}
{"type": "clarification", "instruction": "List network policies.", "output": "Would you like to list network policies in a specific namespace?"}
{"type": "clarification", "instruction": "Update network policy rules.", "output": "Please provide the network policy name and the updated rules."}
{"type": "clarification", "instruction": "Apply a security context to pod.", "output": "Please provide the pod name and the security context details."}
{"type": "clarification", "instruction": "Remove security context from pod.", "output": "Please specify the pod name to remove its security context."}
{"type": "clarification", "instruction": "List API services.", "output": "Would you like to list the API services available in the cluster?"}
{"type": "clarification", "instruction": "Describe an API service.", "output": "Please provide the API service name for detailed information."}
{"type": "clarification", "instruction": "Update API service endpoint.", "output": "Please specify the API service name and the new endpoint details."}
{"type": "clarification", "instruction": "List admission controllers.", "output": "Would you like to list all active admission controllers?"}
{"type": "clarification", "instruction": "Describe an admission controller.", "output": "Please provide the admission controller name for more details."}
{"type": "clarification", "instruction": "Update admission controller configuration.", "output": "Please provide the admission controller name and the new configuration."}
{"type": "clarification", "instruction": "Create a role.", "output": "Please provide the role name, its namespace, and the permissions."}
{"type": "clarification", "instruction": "Delete a role.", "output": "Please specify the role name and namespace to delete."}
{"type": "clarification", "instruction": "List roles by label.", "output": "Would you like to filter roles by a specific label in a namespace?"}
{"type": "clarification", "instruction": "Update role permissions.", "output": "Please provide the role name and the updated permissions."}
{"type": "clarification", "instruction": "Bind a ClusterRole to a user.", "output": "Please specify the ClusterRole name and the user to bind."}
{"type": "clarification", "instruction": "Unbind a ClusterRole.", "output": "Please provide the ClusterRole binding name to remove."}
{"type": "clarification", "instruction": "List service accounts by label.", "output": "Would you like to filter service accounts by a specific label?"}
{"type": "clarification", "instruction": "Update service account secrets.", "output": "Please provide the service account name and the secret modifications."}
{"type": "clarification", "instruction": "Create a new user token.", "output": "Please provide the user name and the token expiration details."}
{"type": "clarification", "instruction": "Revoke a user token.", "output": "Please specify the token identifier you wish to revoke."}
{"type": "clarification", "instruction": "List user tokens.", "output": "Would you like to list tokens for a specific user?"}
{"type": "clarification", "instruction": "Update API access policies.", "output": "Please provide the policy name and the updated access rules."}
{"type": "clarification", "instruction": "Create an API access policy.", "output": "Please provide the policy name and the access parameters."}
{"type": "clarification", "instruction": "Delete an API access policy.", "output": "Please specify the API access policy name to delete."}
{"type": "clarification", "instruction": "Describe an API access policy.", "output": "Please provide the API access policy name for details."}
{"type": "clarification", "instruction": "Monitor cluster CPU usage.", "output": "Would you like to see CPU usage for nodes or pods?"}
{"type": "clarification", "instruction": "Monitor cluster memory usage.", "output": "Please specify if you want memory usage details for nodes or pods."}
{"type": "clarification", "instruction": "Set cluster logging level.", "output": "Please provide the desired logging level and the target component."}
{"type": "clarification", "instruction": "Update audit log configuration.", "output": "Please specify the audit log configuration parameters or file."}
{"type": "clarification", "instruction": "Create a custom dashboard.", "output": "Please provide the dashboard name and the metrics to display."}
{"type": "clarification", "instruction": "Delete a custom dashboard.", "output": "Please specify the dashboard name you wish to delete."}
{"type": "clarification", "instruction": "List available dashboards.", "output": "Would you like to list all custom dashboards?"}
{"type": "clarification", "instruction": "Describe a custom dashboard.", "output": "Please provide the dashboard name for further details."}
{"type": "clarification", "instruction": "Update metrics server configuration.", "output": "Please provide the metrics server name and the configuration changes."}
{"type": "clarification", "instruction": "Restart metrics server.", "output": "Please specify the metrics server name to restart."}
{"type": "clarification", "instruction": "List scheduled maintenance windows.", "output": "Would you like to list maintenance windows for the cluster?"}
{"type": "clarification", "instruction": "Create a maintenance window.", "output": "Please provide the maintenance window name, start time, and duration."}
{"type": "clarification", "instruction": "Delete a maintenance window.", "output": "Please specify the maintenance window name to delete."}
{"type": "clarification", "instruction": "Update maintenance window schedule.", "output": "Please provide the maintenance window name and the new schedule details."}
{"type": "clarification", "instruction": "Query etcd cluster health.", "output": "Would you like to query the health of etcd nodes?"}
{"type": "clarification", "instruction": "Backup etcd cluster.", "output": "Please provide the backup location and the etcd cluster details."}
{"type": "clarification", "instruction": "Restore etcd cluster.", "output": "Please specify the backup file and the restore parameters for etcd."}
{"type": "clarification", "instruction": "List Kubernetes add-ons.", "output": "Would you like to list installed add-ons in the cluster?"}
{"type": "clarification", "instruction": "Describe a Kubernetes add-on.", "output": "Please provide the add-on name for more details."}
{"type": "clarification", "instruction": "Update Kubernetes add-on configuration.", "output": "Please provide the add-on name and the configuration changes."}
{"type": "clarification", "instruction": "Remove a Kubernetes add-on.", "output": "Please specify the add-on name you wish to remove."}
{"type": "clarification", "instruction": "List cluster API endpoints.", "output": "Would you like to list all API endpoints available in the cluster?"}
{"type": "clarification", "instruction": "Describe cluster network settings.", "output": "Please provide the network component name to retrieve details."}
{"type": "clarification", "instruction": "Update cluster node labels in bulk.", "output": "Please provide a list of node names and the label key-value pairs to update."}
{"type": "clarification", "instruction": "Generate cluster usage report.", "output": "Please specify the metrics and time range for the usage report."}
{"type": "clarification", "instruction": "Enable pod autoscaling.", "output": "Please specify the pod or deployment name and the autoscaling parameters (min/max replicas, CPU thresholds)."}
{"type": "clarification", "instruction": "Disable pod autoscaling.", "output": "Please provide the pod or deployment name for which you want to disable autoscaling."}
{"type": "clarification", "instruction": "Set autoscaling parameters.", "output": "Please provide the resource name and the new autoscaling parameters such as minimum and maximum replicas."}
{"type": "clarification", "instruction": "Update HPA configuration.", "output": "Please specify the Horizontal Pod Autoscaler name and the configuration details to update."}
{"type": "clarification", "instruction": "Monitor HPA status.", "output": "Please provide the HPA name to retrieve its current status and metrics."}
{"type": "clarification", "instruction": "Enable cluster autoscaling.", "output": "Please provide the cluster name and the autoscaling settings you wish to enable."}
{"type": "clarification", "instruction": "Disable cluster autoscaling.", "output": "Please specify the cluster for which you want to disable autoscaling."}
{"type": "clarification", "instruction": "Configure kube-proxy.", "output": "Please provide the desired kube-proxy configuration settings or file."}
{"type": "clarification", "instruction": "Update kubelet configuration.", "output": "Please specify the node name and the kubelet configuration parameters you wish to update."}
{"type": "clarification", "instruction": "Set container restart policy.", "output": "Please provide the pod or container identifier and the new restart policy (Always, OnFailure, or Never)."}
{"type": "clarification", "instruction": "Enable container security context.", "output": "Please specify the pod name and the security context details to enable."}
{"type": "clarification", "instruction": "Disable container security context.", "output": "Please provide the pod name for which you want to disable the security context."}
{"type": "clarification", "instruction": "Configure pod resource requests.", "output": "Please provide the pod or deployment name and the desired CPU/memory request values."}
{"type": "clarification", "instruction": "Configure pod resource limits.", "output": "Please specify the pod or deployment name and the new CPU/memory limit values."}
{"type": "clarification", "instruction": "Enable image pull secrets.", "output": "Please provide the pod name and the image pull secret details you want to enable."}
{"type": "clarification", "instruction": "Update image pull secret.", "output": "Please specify the secret name and the updated credentials for image pulls."}
{"type": "clarification", "instruction": "Add node affinity rules.", "output": "Please provide the pod or deployment name and the node affinity rules (key-value pairs and operators)."}
{"type": "clarification", "instruction": "Remove node affinity rules.", "output": "Please specify the pod or deployment name from which you want to remove the node affinity rules."}
{"type": "clarification", "instruction": "Update cluster role rules.", "output": "Please provide the cluster role name and the new set of rules to update."}
{"type": "clarification", "instruction": "Enable log aggregation.", "output": "Please specify the logging aggregator (e.g., Fluentd, Logstash) and its configuration details."}
{"type": "clarification", "instruction": "Disable log aggregation.", "output": "Please provide the name of the log aggregation service you wish to disable."}
{"type": "clarification", "instruction": "Set log retention policy.", "output": "Please specify the log source and the retention period you want to apply."}
{"type": "clarification", "instruction": "Configure Fluentd settings.", "output": "Please provide the Fluentd configuration file path or the specific settings you wish to update."}
{"type": "clarification", "instruction": "Configure Prometheus scraping.", "output": "Please specify the target endpoint and the scrape interval for Prometheus."}
{"type": "clarification", "instruction": "Enable metrics collection.", "output": "Please provide the resource type (pod/node) and the metrics you wish to collect."}
{"type": "clarification", "instruction": "Disable metrics collection.", "output": "Please specify which metrics collection (e.g., node, pod, custom) you want to disable."}
{"type": "clarification", "instruction": "Set alerting thresholds.", "output": "Please provide the metric name and the threshold values to trigger alerts."}
{"type": "clarification", "instruction": "Configure alert manager.", "output": "Please specify the alert manager configuration file or the parameters to update."}
{"type": "clarification", "instruction": "Update service monitor configuration.", "output": "Please provide the service monitor name and the new configuration details."}
{"type": "clarification", "instruction": "Enable container networking interface.", "output": "Please specify the CNI plugin and any additional settings to enable."}
{"type": "clarification", "instruction": "Disable container networking interface.", "output": "Please provide the CNI plugin name you wish to disable."}
{"type": "clarification", "instruction": "Configure CNI plugin.", "output": "Please specify the CNI plugin type and configuration details."}
{"type": "clarification", "instruction": "Update CNI plugin settings.", "output": "Please provide the CNI plugin name and the settings you wish to modify."}
{"type": "clarification", "instruction": "Set network plugin logging.", "output": "Please specify the network plugin and the desired logging level."}
{"type": "clarification", "instruction": "Enable IP forwarding on node.", "output": "Please provide the node name and confirm that you wish to enable IP forwarding."}
{"type": "clarification", "instruction": "Disable IP forwarding on node.", "output": "Please specify the node name where IP forwarding should be disabled."}
{"type": "clarification", "instruction": "Check pod network connectivity.", "output": "Please provide the pod name and any specific network endpoints to test connectivity."}
{"type": "clarification", "instruction": "Test service endpoint connectivity.", "output": "Please provide the service name and the endpoint details to run connectivity tests."}
{"type": "clarification", "instruction": "Enable pod preemption.", "output": "Please specify the pod or priority class for which you want to enable preemption."}
{"type": "clarification", "instruction": "Disable pod preemption.", "output": "Please provide the pod or priority class name to disable preemption."}
{"type": "clarification", "instruction": "Set pod priority.", "output": "Please provide the pod name and the priority value to set."}
{"type": "clarification", "instruction": "Update pod priority class.", "output": "Please specify the priority class name and the new priority settings."}
{"type": "clarification", "instruction": "List pod priority classes.", "output": "Would you like to list all available pod priority classes in the cluster?"}
{"type": "clarification", "instruction": "Describe a pod priority class.", "output": "Please provide the name of the pod priority class you want to describe."}
{"type": "clarification", "instruction": "Create a new pod priority class.", "output": "Please specify the name and the priority value for the new pod priority class."}
{"type": "clarification", "instruction": "Delete a pod priority class.", "output": "Please provide the name of the pod priority class you wish to delete."}
{"type": "clarification", "instruction": "Enable service mesh.", "output": "Please provide the service mesh name (e.g., Istio, Linkerd) and any specific configurations."}
{"type": "clarification", "instruction": "Disable service mesh.", "output": "Please specify the service mesh you want to disable."}
{"type": "clarification", "instruction": "Configure Istio gateway.", "output": "Please provide the gateway name and the configuration details for Istio."}
{"type": "clarification", "instruction": "Update Istio virtual service.", "output": "Please specify the virtual service name and the new routing rules."}
{"type": "clarification", "instruction": "Enable sidecar injection.", "output": "Please provide the namespace or pod label selector for enabling sidecar injection."}
{"type": "clarification", "instruction": "Disable sidecar injection.", "output": "Please specify the namespace or pod for which sidecar injection should be disabled."}
{"type": "clarification", "instruction": "List sidecar proxies.", "output": "Would you like to list all sidecar proxies or filter by a specific label?"}
{"type": "clarification", "instruction": "Describe sidecar status.", "output": "Please provide the pod name to view its sidecar proxy status."}
{"type": "clarification", "instruction": "Configure Linkerd settings.", "output": "Please provide the Linkerd configuration file or the specific settings to modify."}
{"type": "clarification", "instruction": "Update service mesh policies.", "output": "Please specify the service mesh policy name and the updated rules."}
{"type": "clarification", "instruction": "Set ingress controller rules.", "output": "Please provide the ingress controller name and the new rules to apply."}
{"type": "clarification", "instruction": "Update ingress controller settings.", "output": "Please specify the ingress controller and the settings you wish to update."}
{"type": "clarification", "instruction": "Configure load balancer health check.", "output": "Please provide the load balancer name and the health check parameters."}
{"type": "clarification", "instruction": "Update load balancer configuration.", "output": "Please specify the load balancer and the new configuration settings."}
{"type": "clarification", "instruction": "Enable session affinity.", "output": "Please provide the service name and the session affinity configuration details."}
{"type": "clarification", "instruction": "Disable session affinity.", "output": "Please specify the service for which you want to disable session affinity."}
{"type": "clarification", "instruction": "Set service external IPs.", "output": "Please provide the service name and the external IP addresses to assign."}
{"type": "clarification", "instruction": "Update service external traffic policy.", "output": "Please specify the service name and the new external traffic policy."}
{"type": "clarification", "instruction": "Enable DNS caching.", "output": "Please provide the DNS server or pod details to enable caching."}
{"type": "clarification", "instruction": "Disable DNS caching.", "output": "Please specify the DNS caching service or configuration to disable."}
{"type": "clarification", "instruction": "Configure CoreDNS settings.", "output": "Please provide the CoreDNS ConfigMap or the settings you wish to modify."}
{"type": "clarification", "instruction": "Update CoreDNS ConfigMap.", "output": "Please specify the namespace and the changes you want to apply to the CoreDNS ConfigMap."}
{"type": "clarification", "instruction": "Set DNS forwarding rules.", "output": "Please provide the DNS server and the forwarding rules to configure."}
{"type": "clarification", "instruction": "Configure cluster DNS policy.", "output": "Please specify the cluster or pod and the desired DNS policy settings."}
{"type": "clarification", "instruction": "Update kube-dns deployment.", "output": "Please provide the kube-dns deployment name and the updates to apply."}
{"type": "clarification", "instruction": "Enable container logging driver.", "output": "Please specify the container runtime and the logging driver you wish to enable."}
{"type": "clarification", "instruction": "Disable container logging driver.", "output": "Please provide the container identifier and the logging driver to disable."}
{"type": "clarification", "instruction": "Configure container log rotation.", "output": "Please specify the container name and the log rotation parameters."}
{"type": "clarification", "instruction": "Update container log path.", "output": "Please provide the container name and the new log file path."}
{"type": "clarification", "instruction": "Set container stdout logging.", "output": "Please specify the container and any formatting options for stdout logging."}
{"type": "clarification", "instruction": "Set container stderr logging.", "output": "Please provide the container and the configuration for stderr logging."}
{"type": "clarification", "instruction": "Enable runtime class for containers.", "output": "Please specify the runtime class name and the applicable containers or pods."}
{"type": "clarification", "instruction": "Disable runtime class for containers.", "output": "Please provide the runtime class name and confirm the containers to update."}
{"type": "clarification", "instruction": "Configure runtime class parameters.", "output": "Please specify the runtime class and the parameters you wish to configure."}
{"type": "clarification", "instruction": "Update container sandbox settings.", "output": "Please provide the container name and the new sandbox settings."}
{"type": "clarification", "instruction": "Set pod security standards.", "output": "Please specify the pod or namespace and the security standards to enforce."}
{"type": "clarification", "instruction": "Update pod security policies.", "output": "Please provide the name of the security policy and the changes to apply."}
{"type": "clarification", "instruction": "Enable SELinux on node.", "output": "Please specify the node name and confirm that you wish to enable SELinux."}
{"type": "clarification", "instruction": "Disable SELinux on node.", "output": "Please provide the node name where SELinux should be disabled."}
{"type": "clarification", "instruction": "Configure AppArmor profile.", "output": "Please specify the pod or container name and the AppArmor profile details."}
{"type": "clarification", "instruction": "Update AppArmor annotations.", "output": "Please provide the pod name and the new AppArmor annotation values."}
{"type": "clarification", "instruction": "Set security audit policy.", "output": "Please provide the audit policy file or the parameters you wish to set."}
{"type": "clarification", "instruction": "Update audit policy configuration.", "output": "Please specify the audit policy name and the configuration updates."}
{"type": "clarification", "instruction": "Enable audit logging.", "output": "Please provide the API server or component name for which audit logging should be enabled."}
{"type": "clarification", "instruction": "Disable audit logging.", "output": "Please specify the component or API server for which you wish to disable audit logging."}
{"type": "clarification", "instruction": "Configure audit log retention.", "output": "Please provide the retention period and the audit log file or location."}
{"type": "clarification", "instruction": "Set admission webhook configuration.", "output": "Please specify the webhook name and the configuration details (URL, timeout, etc.)."}
{"type": "clarification", "instruction": "Update admission webhook certificate.", "output": "Please provide the webhook name and the new certificate file or details."}
{"type": "clarification", "instruction": "Enable validating webhook.", "output": "Please specify the webhook configuration name and confirm enabling validation."}
{"type": "clarification", "instruction": "Disable validating webhook.", "output": "Please provide the webhook configuration name to disable."}
{"type": "clarification", "instruction": "Configure mutating webhook.", "output": "Please specify the mutating webhook name and the configuration parameters to set."}
{"type": "clarification", "instruction": "Update mutating webhook settings.", "output": "Please provide the webhook name and the new settings to update."}
{"type": "clarification", "instruction": "Set webhook timeout settings.", "output": "Please specify the webhook name and the desired timeout value."}
{"type": "clarification", "instruction": "Configure cluster external authentication.", "output": "Please provide the external authentication method (OIDC, LDAP, etc.) and its parameters."}
{"type": "clarification", "instruction": "Update OIDC provider settings.", "output": "Please specify the OIDC provider name and the new configuration details."}
{"type": "clarification", "instruction": "Set RBAC authorization mode.", "output": "Please provide the desired RBAC mode and any additional configuration details."}
{"type": "clarification", "instruction": "Update ABAC policy file.", "output": "Please specify the ABAC policy file path and the modifications to apply."}
{"type": "clarification", "instruction": "Enable service account tokens.", "output": "Please provide the service account name and confirm enabling token issuance."}
{"type": "clarification", "instruction": "Disable service account tokens.", "output": "Please specify the service account name for which you want to disable token issuance."}
{"type": "clarification", "instruction": "Configure token expiration.", "output": "Please provide the service account or user name and the token expiration time."}
{"type": "clarification", "instruction": "Update token signing key.", "output": "Please provide the new signing key details and the affected tokens."}
{"type": "clarification", "instruction": "Set API server audit log path.", "output": "Please provide the API server name and the file path for audit logs."}
{"type": "clarification", "instruction": "Configure API server flags.", "output": "Please specify the API server flag(s) you wish to update and their new values."}
{"type": "clarification", "instruction": "Update API server admission controllers.", "output": "Please provide the list of admission controllers and any changes to their order or settings."}
{"type": "clarification", "instruction": "Set API server secure port.", "output": "Please provide the desired secure port number and the API server name."}
{"type": "clarification", "instruction": "Configure API server certificate.", "output": "Please specify the API server name and the certificate file or details."}
{"type": "clarification", "instruction": "Update scheduler configuration.", "output": "Please provide the scheduler configuration file and the changes to apply."}
{"type": "clarification", "instruction": "Enable scheduler extender.", "output": "Please specify the scheduler extender name and its endpoint details."}
{"type": "clarification", "instruction": "Disable scheduler extender.", "output": "Please provide the scheduler extender name that you wish to disable."}
{"type": "clarification", "instruction": "Set scheduler policy configuration.", "output": "Please provide the scheduler policy file and any modifications needed."}
{"type": "clarification", "instruction": "Update scheduler priorities.", "output": "Please specify the scheduler name and the new priority settings for pods."}
{"type": "clarification", "instruction": "Configure custom scheduler.", "output": "Please provide the custom scheduler name and its configuration file or parameters."}
{"type": "clarification", "instruction": "Set scheduler leader election.", "output": "Please specify the scheduler and the leader election timeout and settings."}
{"type": "clarification", "instruction": "Update scheduler resource allocation.", "output": "Please provide the scheduler name and the new resource allocation details."}
{"type": "clarification", "instruction": "Enable etcd TLS encryption.", "output": "Please specify the etcd cluster name and the TLS certificate details."}
{"type": "clarification", "instruction": "Disable etcd TLS encryption.", "output": "Please provide the etcd cluster name for which TLS encryption should be disabled."}
{"type": "clarification", "instruction": "Configure etcd snapshot settings.", "output": "Please specify the etcd cluster name and the snapshot frequency and retention settings."}
{"type": "clarification", "instruction": "Update etcd compaction settings.", "output": "Please provide the etcd cluster name and the new compaction interval."}
{"type": "clarification", "instruction": "Set etcd cluster member status.", "output": "Please specify the etcd member name and the status information you wish to update."}
{"type": "clarification", "instruction": "Enable etcd authentication.", "output": "Please provide the etcd cluster name and the authentication parameters to enable."}
{"type": "clarification", "instruction": "Disable etcd authentication.", "output": "Please specify the etcd cluster name for which authentication should be disabled."}
{"type": "clarification", "instruction": "Configure etcd client certificate.", "output": "Please provide the etcd cluster name and the client certificate details to update."}
{"type": "clarification", "instruction": "Update etcd cluster configuration.", "output": "Please specify the etcd cluster and the configuration changes to apply."}
{"type": "clarification", "instruction": "Set etcd backup schedule.", "output": "Please provide the etcd cluster name and the desired backup schedule."}
{"type": "clarification", "instruction": "Configure etcd restore parameters.", "output": "Please specify the backup file and the restore parameters for the etcd cluster."}
{"type": "clarification", "instruction": "Update etcd log level.", "output": "Please provide the etcd cluster name and the new log verbosity level."}
{"type": "clarification", "instruction": "Set control plane endpoint.", "output": "Please specify the control plane component and the new endpoint details."}
{"type": "clarification", "instruction": "Configure control plane HA settings.", "output": "Please provide the control plane component and the high-availability settings to configure."}
{"type": "clarification", "instruction": "Update control plane load balancing.", "output": "Please specify the load balancer and the new configuration for distributing traffic."}
{"type": "clarification", "instruction": "Enable control plane monitoring.", "output": "Please provide the control plane component name and the monitoring parameters."}
{"type": "clarification", "instruction": "Disable control plane monitoring.", "output": "Please specify which control plane components monitoring should be disabled."}
{"type": "clarification", "instruction": "Configure Kubernetes scheduler logs.", "output": "Please provide the scheduler log file path and the logging level to set."}
{"type": "clarification", "instruction": "Update controller manager configuration.", "output": "Please specify the controller manager name and the configuration changes to apply."}
{"type": "clarification", "instruction": "Set controller manager leader election.", "output": "Please provide the controller manager name and the new leader election settings."}
{"type": "clarification", "instruction": "Configure controller manager logging.", "output": "Please specify the logging level and the output destination for the controller manager."}
{"type": "clarification", "instruction": "Update controller manager flags.", "output": "Please provide the list of flags to update for the controller manager."}
{"type": "clarification", "instruction": "Enable feature gate for Alpha features.", "output": "Please specify which Alpha feature gate(s) you wish to enable."}
{"type": "clarification", "instruction": "Disable feature gate for Alpha features.", "output": "Please provide the name of the Alpha feature gate you wish to disable."}
{"type": "clarification", "instruction": "Set experimental feature flags.", "output": "Please specify the experimental feature flag(s) and their desired state."}
{"type": "clarification", "instruction": "Update feature gate configuration.", "output": "Please provide the API server or component name and the new feature gate settings."}
{"type": "clarification", "instruction": "Configure custom resource conversion.", "output": "Please provide the CRD name and the conversion webhook details to configure."}
{"type": "clarification", "instruction": "Update CRD conversion webhook.", "output": "Please specify the CRD name and the updated conversion webhook parameters."}
{"type": "clarification", "instruction": "Set CRD versioning policy.", "output": "Please provide the CRD name and the desired versioning policy."}
{"type": "clarification", "instruction": "Configure multiple CRD versions.", "output": "Please specify the CRD name and list all versions you wish to support."}
{"type": "clarification", "instruction": "Update CRD subresources.", "output": "Please provide the CRD name and the subresource modifications."}
{"type": "clarification", "instruction": "Set CRD schema validation.", "output": "Please provide the CRD name and the schema validation rules to enforce."}
{"type": "clarification", "instruction": "Configure backup for CRDs.", "output": "Please specify the CRD name and the backup schedule or parameters."}
{"type": "clarification", "instruction": "Update CRD stored versions.", "output": "Please provide the CRD name and the new list of stored versions."}
{"type": "clarification", "instruction": "Enable CRD additional printer columns.", "output": "Please specify the CRD name and the additional columns to display."}
{"type": "clarification", "instruction": "Disable CRD additional printer columns.", "output": "Please provide the CRD name for which you want to disable additional printer columns."}
{"type": "clarification", "instruction": "Set controller replica count.", "output": "Please provide the controller name and the new replica count."}
{"type": "clarification", "instruction": "Update controller replica set configuration.", "output": "Please specify the replica set name and the updated configuration details."}
{"type": "clarification", "instruction": "Configure deployment max surge.", "output": "Please provide the deployment name and the max surge value to set."}
{"type": "clarification", "instruction": "Update deployment max unavailable.", "output": "Please specify the deployment name and the new max unavailable value."}
{"type": "clarification", "instruction": "Set deployment revision history limit.", "output": "Please provide the deployment name and the desired revision history limit."}
{"type": "clarification", "instruction": "Configure deployment rollback strategy.", "output": "Please specify the deployment name and the rollback strategy details."}
{"type": "clarification", "instruction": "Update deployment termination grace period.", "output": "Please provide the deployment name and the new termination grace period value."}
{"type": "clarification", "instruction": "Set daemonset update strategy.", "output": "Please specify the daemonset name and the update strategy to apply."}
{"type": "clarification", "instruction": "Configure daemonset rolling update.", "output": "Please provide the daemonset name and the rolling update parameters."}
{"type": "clarification", "instruction": "Update daemonset max unavailable.", "output": "Please specify the daemonset name and the new max unavailable value."}
{"type": "clarification", "instruction": "Set job parallelism.", "output": "Please provide the job name and the desired parallelism value."}
{"type": "clarification", "instruction": "Configure job completions.", "output": "Please specify the job name and the required number of completions."}
{"type": "clarification", "instruction": "Update job active deadline seconds.", "output": "Please provide the job name and the new active deadline in seconds."}
{"type": "clarification", "instruction": "Set cronjob concurrency policy.", "output": "Please specify the cronjob name and the concurrency policy (Allow, Forbid, or Replace)."}
{"type": "clarification", "instruction": "Configure cronjob starting deadline.", "output": "Please provide the cronjob name and the new starting deadline seconds."}
{"type": "clarification", "instruction": "Update cronjob suspend status.", "output": "Please specify the cronjob name and whether it should be suspended or resumed."}
{"type": "clarification", "instruction": "Set persistent volume storage type.", "output": "Please provide the persistent volume name and the storage type (e.g., block, file)."}
{"type": "clarification", "instruction": "Configure persistent volume reclaim policy.", "output": "Please specify the persistent volume name and the new reclaim policy (Retain, Delete, or Recycle)."}
{"type": "clarification", "instruction": "Update persistent volume access modes.", "output": "Please provide the persistent volume name and the access modes to update."}
{"type": "clarification", "instruction": "Set PVC volume mode.", "output": "Please specify the PVC name and the desired volume mode (Filesystem or Block)."}
{"type": "clarification", "instruction": "Configure PVC storage request.", "output": "Please provide the PVC name and the new storage request value."}
{"type": "clarification", "instruction": "Update PVC storage class binding.", "output": "Please specify the PVC name and the storage class you want to bind it to."}
{"type": "clarification", "instruction": "Set configmap immutable flag.", "output": "Please provide the configmap name and confirm setting it as immutable."}
{"type": "clarification", "instruction": "Configure configmap binary data.", "output": "Please specify the configmap name and the binary data keys and values."}
{"type": "clarification", "instruction": "Update configmap reload strategy.", "output": "Please provide the configmap name and the new reload strategy details."}
{"type": "clarification", "instruction": "Set secret type.", "output": "Please specify the secret name and the type (Opaque, TLS, etc.) you wish to set."}
{"type": "clarification", "instruction": "Configure secret data encoding.", "output": "Please provide the secret name and the encoding method for its data."}
{"type": "clarification", "instruction": "Update secret immutable flag.", "output": "Please specify the secret name and confirm the update to its immutable flag."}
{"type": "clarification", "instruction": "Set namespace resource quota.", "output": "Please provide the namespace and the resource quota values to set."}
{"type": "clarification", "instruction": "Configure namespace limit range.", "output": "Please specify the namespace and the limit range parameters you wish to apply."}
{"type": "clarification", "instruction": "Update namespace annotations.", "output": "Please provide the namespace name and the annotation key-value pairs to update."}
{"type": "clarification", "instruction": "Set namespace finalizer.", "output": "Please specify the namespace and the finalizer name you want to add or remove."}
{"type": "clarification", "instruction": "Configure network namespace isolation.", "output": "Please provide the namespace and the isolation rules or policies to enforce."}
{"type": "clarification", "instruction": "Update network namespace policies.", "output": "Please specify the namespace and the network policy modifications."}
{"type": "clarification", "instruction": "Set service port protocol.", "output": "Please provide the service name and the protocol (TCP, UDP) for the port."}
{"type": "clarification", "instruction": "Configure service session stickiness.", "output": "Please specify the service name and the session stickiness settings to apply."}
{"type": "clarification", "instruction": "Update service headless configuration.", "output": "Please provide the service name and confirm the changes for a headless service."}
{"type": "clarification", "instruction": "Set endpoint subset strategy.", "output": "Please specify the service name and the strategy for managing endpoint subsets."}
{"type": "clarification", "instruction": "Configure pod DNS policy.", "output": "Please provide the pod name and the DNS policy you wish to configure."}
{"type": "clarification", "instruction": "Update pod host network settings.", "output": "Please specify the pod name and the changes required for host networking."}
{"type": "clarification", "instruction": "Set container privilege escalation.", "output": "Please provide the container name and confirm the desired privilege escalation setting."}
{"type": "clarification", "instruction": "Configure container read-only root filesystem.", "output": "Please specify the container name and whether to enable a read-only root filesystem."}
